%!PS-Adobe-2.0
%%Creator: dvips(k) 5.991 Copyright 2011 Radical Eye Software
%%Title: poster_landscape.dvi
%%CreationDate: Tue May 29 17:55:43 2012
%%Pages: 1
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 2384 3371
%%DocumentFonts: CMCSC10 CMR12 CMTT12 CMR10 CMBX12 CMR8 CMR6 CMTI8 CMMI8
%%+ CMBX10 CMTI10
%%DocumentPaperSizes: a0
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o poster_landscape.ps poster_landscape.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2012.05.29:1755
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore}bind
def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave
pgfsoa .setopacityalpha stroke grestore}bind def}bind def /pgffoa 1
def /pgfsoa 1 def end

 /landplus90 true store

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/UniqueID 5000828 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F3CB6A4DCBBA655E3D6E27F87E6D8BE12A15D35E1E75
D36532B9C5000C06A58822444593A1038EEB23C7AFC9EEE3907DF8232322B09B
230015E014F1B4CEB866234266440AD3686E30ABD086CF9C0926E711F0757925
5DEB3D39C8E6D6F0C05A364A0DBF90F6E32CD28887F7E237E04093E07A94C973
462254BC1B1586AAC29FC7F15A80FB5993ED22E79A0FB5BF0F7362CFA24BB2F3
D4EF7D39E1902C53053C27E2AA49C4DE54A05AFB1AA6C7CCFBD9F72150DE259A
BEBFCA5C7E828BE667E9C72222B84C4C79C2DEB885A69861DDB635B02814BAAD
9672A14E50D6A2A236AB35C6DCBFA1165F47F8F52B0787EB4B70BFE3CAA8B511
A630E8148A51C1394C7C321156CF52EE7BFE07B6C354CB65782464D2BE42C0D8
14EAFBE88DA3D5C90614F22E02626ABD343F3AC0A9698AE84CB97F1CC421D34F
98B69FF4C335B95F4222A8BAB77662B4A57A4B574265A679334D5EBCB073FF69
66BD9322B1C2253AE85AB38889B26761BA509C7F638C6CBC4BBCDBBBF4BFE1AE
855973129978F707C87462B67509FE6EEFB5E0949674C34768F001827F12F1BA
77AE866711077C30DC0E40C2D8A6EF4D85355E596E26B675E8D223D4E55C3580
5B79260E90985DA5E5B2F43DE7713D5E67080D2843D44A3585E078615BEA476C
88233D241D3A427F9B1AD26ECD535E46C137084A835CD816CCA936D0011C53E7
B33D5B50ED7BF3F41289F48E394BDC963EB1AFD6F14F0C146E0F13B03E76B389
8AD8E81E41F14D1682A113D8BA1482D9DDFDE71208AFC351B62E028C3D50BE01
FC9CD5D5F36E28DADB469201F41E9F39098B65E43FD1227A26F6FF812CE452F8
B5476C28FC1B1B3E5FEF3A3B94CD552E29288AB0A3ABCEAAEACBD2D5E9001579
738029B0E7F635C6C4962340187558084D9CD408EF7FDCE23F465AFCAA8EAAC4
8855BF64EC9BC75371A98095CB51BE7FF107E4C6C2107D887716F94563768073
B8C4238F51C1E63C279B23DE3DF51F656B90880333880515945253BE08582F17
8F405B52C4D828BC4629665F1C31F622A6C37348B410CCC9D2D4809175713005
5257815D95644A1F6C6A937F6451A79F4041BAF258454D6B3527F0C277F2CAFD
659D29178A79EC1713E439B6E14230F38C5A955473C09068553725AB22AC7B97
225329305F9C492D4A12AC1F8ABEFA3D85BF7B6D19D5CE8031E1273A9000C813
9BAF088951C2DCEF7124B93EC6EE9F5D1BD504FC7BB2C643439EFCCB1509849B
07DB6D77D6124D75B84C9804AC607A6777F03F68D8F370F21DC09778880C3CE4
E08BC8EB4F995A09CD0BFA5D0695EBF7538738092BC8541D0EB393022F25FA35
FD5EED52EBF1AEEE57274D422F9BA22A2D2F33159E66AB7D8607B409619E79F2
42CF52E618AC0DAB32ACB1E9DF2747FD308450AE73A669C769F09BADF82680C9
A03C07A68FAF6F861D116590111A828CBB7AC9803CA61B4AF6E20E1A1DF7AB71
FE6C3B631AC27BC4A201D3DB59DE93BAB932D29D4AD34B30AA263EC3394B9D86
7BEDB265D7302EA0C8821BF6939FE8DE7A25A880A44149B2F8CF7A97022B1CEF
ED7F469FF9D80EAE0270140E52AE0A405B44EC65415AAD9CEE8BCB0EF0BA9FA2
FCC1ED743E3628F1A50CA58BFCB4BA1DF56C1EB66200A154F47879DB45033212
8481FFD5458C1DDB94150AC84EB9D850E0AEFB5E1BA9A5075D2F8CD7FAB07EE6
FAD4FDD8A8AC4E0AE3900DC0E8A89A46255D90DC926757263008F0396FD64903
DDD3D498699EA9C46F2642658D1F19990AB9C04156ABF87B542611FF48F4B220
84351DF177AE3B99140896F880D71A156BBDB0DEA9976284B9A3CA7571D87D8A
D3253DD9384E0481354981BEC18B9DA2ACE789734D9AF9A1FF8B317CD3B2811E
64482B3FF5C34BBC1849D1EA1E18722B96D0E6E2CBB73332902929510920DAE4
BA983820833B986E0975B78BF3276D4D61273FBB6A502DFCAA52CA2FFA466068
6CEB48EA36F0CEDD2B4331241C5ED48FF7BD880CC69F8D2AC196CF193387AF58
9194DCB2F815A573D2A0E44FB2E1BC4E30B7F299551C6431919997C091743A95
024321C21EE2E0CEF009D9BA489819C9506EE634A8593CBDD059E0FA619660C2
14EA518B25D1D6F31C7C5FA6CCA52FF0E70838C0BB464C93634B25A7420966C0
229ED53E11CA17B38B06B13CBD38A2903542D2E1727D3C4BF7C53E263D73FD78
599EEA7E2314E88DF8BC2D431EA3E9A97FE810E2A182C82094D3D270EC054782
97F4DE257D81F140AE04F22735D361CA2A599F1F4BA0397A178237CD2D74D2AF
1538E8B81A6E2D9058BD310CC1B33A95A04171716CC191B45704112708D7F571
1AA311DC786FCAD95A857C58C24A83FA9A61CA34A67490CEF8088A82688E17B1
537026D8639891D35D02327C134C061EEB087BB5574BF1D1F61CD63F06157855
907A8C54021828A368A4163E4E7BFF0440D28D280591CEE14286E47D8CA67355
65A11935F8964877EA22165973AB4ED07B59EF6C799E40B88891AE1258BEB8F7
1FCE25C7EFC3581DB33021041BEDE03C6417C2AFE65416753AC4DAA38EFB7FA8
A9BD6715353C2212584C39FF64D4F37B418167AA32CF8D535A9156F4E66D8185
5298F7F58708CDE2E5D74CB64FC9E651113BAC3F809F1A3B460DE0C06F198A85
DFD17E78D2B6E4F3E925ED5960144FE2A88AED8BC35F9747C81A42FD359DB6C2
9CEE4E26CD851EA42DDA39834A02319FCAC730680AB94740C8F82C6391750654
F6361C7FC62B2A3E0A8EE8C9369AA698E7A5EE5F0DB907B49265B4D2BCF540F7
303CD9F5C8ECAC686BB63F7C1B91FE0751031487E62E988C33AAA85611B08A54
A767AC0E5EC5E6F8E301AF746A55DA1C1CF3FF88B5AA6DC0028E2D0920504951
57D3ADA989031ADA41046105EAA55B059F763352F7E42660266B9FE3EDDAFB37
AED0E1AE6576D4FA5747A6C4A6743B16112971AA03E753A47AB5C44387017DA7
B8A2DFFA0DF9F305F55C665C64B9E766415022BE72172964D5CCD58ACD4524EF
16E431A73A8227E4CD5705D80D331DE51433C93480FA5FB384779B97ADDDB681
B4B97966B1A383BCC2FDFE883E436EFDBBD68A61B513753AED6805BB06422A40
67FDF70239D638233D7703B62845124FBFC039B2C69360C580218C4D0F46C506
AAA0A29FBD9256B06D585D62ADC8A25B657A946E2561AF4EEDDAF5DA91B14967
A8B284EBD90A74EEC208A4387B6659DFB3CF889071C8CA7801485BFA57BED83A
2AF118667814C0A27F5AC7E2AD22E67EFA46BC2C92334B5567152078762F1F0D
4DAB073461EF0ADADC6D0E053B56639FE4D88B4BF9BB263670C4DF9775C3F990
ACBAB3211946E6E998C847B82C512760C2AD927B28E4591F1917C3B34DC932DF
081A55B1D8033D4C9B606627888B2341152A7D6D7B622B7AA940B65710EBCA52
B0DD05B0927B1B0BB76142DE8D237FDBC9414A621256287938143E8245F22373
40C94DD8B26C996A873B450BB00D8C2172C5B9F2BDB9C2AAB954A1B93A254CD0
A41E821203C8ED1A0C486F2DA17BBD2B4BF8F2A8FEB3683A90F8E45D45BE7A9A
AA900445CC88E5FD41E348F0BC310DDC8D3B5E51A00B8CDB8684EF17B677E98E
33155F1C114ABE076722D4029042B215E6C129E65C6079CED93C40F7A6EF4FAB
00918848D1666090276C020DDC2997E545EAF475F69BB4FEE21808BE88425948
FFEA8C557878E688E4A318B07ADF82AE56F60661D3AC3E6395B6EBB02D0294B6
3C8C965AD2F0E56F94570A3B9F2A95E73A20A09BFF2E683449DDC689BB929247
8326CB0655DD8D6ECEE67185AFEF0BC771545D9839C2927D9975D8E1A779906C
F136B74907E0AB955995842111790AC9D77E8133B81E0A64C2266747D8A335EB
2B4DF7E4849F3856EDEC2BF1644058B20B56E79459BFCFC901A594CA26B22B9A
957344A0568FB33BA11C3B7187199E1D2E7BB6D3805D4794ED93BA5C44A480D7
91C23BB51E2278CD0F385AE7F81F2301E75DC358C921C066CDF44FB4C97B80FA
96A62139BB437E6E6688EC88996F43FBF3B056ADE671C8870C6174A7859DCC7F
F78D906699CB9CD7B1AB366A15A462364DAC01C9CE191A4F204EF2DF4D044954
5279CE6AD7BF524BE2F45A61C5FDE1E2317A8911F45192B182D67D77876A276C
7F901DAC93279C85818F272C03451DDECE366CE727EF08A876537CF8FA3E610C
BD3CB9E010736666AC9E459718F7CF5A381EB5B9C9EB449C74C22F56B949A7CE
038FE7E82A3DB3424823848A1AF8472A9856C70BCDCE9A9ABD523E6BC253CE17
9A77F251991A2B451E9438499E938C8B67EB42F008ACF435D7155211A4B5626B
147497CBF5753F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/UniqueID 5000768 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 65 /A put
dup 70 /F put
dup 77 /M put
dup 79 /O put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0C3FA72C8A70DC76B5B36B2EEADDCE74
23CF794B66E4DD3B35BF99893789063BF7B01D5F186B2FDE518B2CF2EDE51F81
38244BC64548AC3433A80B86D6A0CA26D77F403C06D65B7394BF1FC7D06D37A5
E70ACD844E3367DE4DB71312CBB85ADD21D5A1F99BB8427F252D90ABB66D7154
EA5AF4A165DF6415A0880AE784071E6B3E2101F0B663DE14DB1ABF8B7CE0E6D9
D24F9CDD9F80028D37C9CB4067A28D41E879AEFECDA71F649EB3C250BFF809D8
1E427E3BF24E85C75F080D93E0314883988B3A4A2B72A1B4A3D2189AB6ECFFBB
C58151AF05AE335200711ED945E18B4BBCE24A8A162BD9BB26137253BA8B5819
41E759A7CA7CBA129BAAD438E87189F2F6AE7C86F4EA099DEB23705A500332A7
4F141D8778EAF3910486B2EA25AAD16B60DD804D0E5BAB0FEBB77BC95EDED08D
B8941E040D99E8F44E70FF842306ACCF65C0AC9673859DB9C3A724238CB8CE62
255BAF0145692EE3B52643A0DE3E667AD03EEF6C753F57E34AECAB0CFEC7B07A
150D7151E57BB3A026D50C7A88DF5F480147D87DFEFE463F76122EEB5128796E
46CB0AF4B537987C2ED552B37D83F393222659DB735F2A293159AD84AF082B95
6F1454471FC36D805485D619D58FC53FBD6E3F72660ABA559B91ECDEFB267268
86A75650C3919962B0139409A29F5E3FA70B901CD5D2C49144778CFFF1D5B63E
099C92AABDAA73D54689812279C95FB7A4F7E840DD53DD3197A4E6D3099446FA
C0032FD40411E8F3300A8A8934B5216B01D916D41DDB32513DC4ACFCEFE43D6B
22FEF13D3567B047C6B35C477ACF2E172701FDB0FFFBE01DD58D7E54398EF4AF
DA5A404E194BCC39BEADEE5C76D7CD1E602793B950256F25871A9760C80B1EB4
D1E1179C390BC240DA061C9D539B20F4FCFB72DD0C1E860DEA2988E749819787
F04BA7A9CC3EDBF9CDE46895FE31EF0F8DEB63E295E8826BF920C8FEAE3B2080
8C98DC43DB22C6537028798198E2D3B0453ED725B774686310F635AE6153D9E1
8A0514882D4CCFE9D2D2465513E42E548F64A50ED78AEC9D62E0F9CF61EBFC9E
E8832D60E91796C916FAFE58F51818B80BBA52C1C06D94E602481654E5378C8D
137E3A872753CCDE4B2618C031CFB13EE91C91335441C434296DDEF61CDFBF8E
8FAF25DB3B6D6796FCCE2711938D605AAC00F0A58DD1A03FCE8732DE541E5E8A
41FC87E1FCA5CD9B5E8D63E7A7D6CEBA67D8A83EAFCF490DB7185AD55ED0F43F
9A1290E91C463895BD12E8A831DAD661E36E1B01ED4C112B8E1D0991D0294BB9
A13B7E9A8835B12A7133E834379B3477DAD425B7996592FB0395E3B4FEDADF4E
23A07F6C0E1387DD54F5C8BD071C4E9E4CC98C55882E29B65E5BED61B57EED93
07FAFD75CF3BB101D1529F83AA8234F70F342B0E531BF23E9A7D1FD112193CAA
4E377B44F94D9E990C22598C2AE33EA73BD0670A4A000DF78624CE01A25DB30E
22B0EE3FA892A897C85AC54FC15D87D68960870A6521716EE75F41A08EA467E0
CA703305771361E9A081348CE2729B0FF18988F36222BBAE11B67549B320A0E2
D978AAAFA8611578EFF7A49DBA0A44F907086AA23BCD6FADDB37807528A1E4F9
0EBE4A585E60412E54CD1667BBD96826470164EA59180ED09EB72A4A6C75B51E
4E9FC8FA9EAD341C90FE154344F6F96425A24F0275339B3546E7372FF33DB57C
275E2A1A33137C07AB3D35AA1889B500E93022A0609D842A3A902282E0680028
D9FCF5D02BE022B792277B63575DF98A425DE983EF4888558527859209EACE9B
92CCA0F386D14195BEEF43F4645A83AA3B087D7312CD620515E86A72FFF17347
40135233EFBDACB6C766D755A3EBE61F9F8E8883273798FDEE893150FB1E6AA6
9E47EEA895C025C6690E945AE88661A9F228F8827F89B9A683BEC462444B0BCB
41DF3C4208C257407F84AC88685DD97F036BD60D4E30A0835D393308C37DCF78
D696E409533BF93AA84D265F8054506521227674339C79F366B6CA9EA7CD06BA
B2D358F5EB38CBA85B58C47BD68C84669794EFC78DB7617EF55A9203B2D9E23C
ED076C36396D4C7506C598361917ACD50C6D8989B3E8E86E31BF312EEF80F600
6ACCF717D961AE977B6EF66B82C2962B78D0537287650CC71AA72B65C3BBEF8E
5D0F4069B13578E0C4F66D7A263C17669CB6A46D666F09C8F83DCE97D1E2B39E
C952DF960918D133C91FBF86D702F96CE5275E016DFFDCE3AB7751D9D3F07E86
A1E9E29199F13A726E93DCBBC0344C7F08854899FA9DA8A7DF60D89BCE4813BF
159AA10546522A5801B5402880D103CCED885841ECE792CEBD6FF54D1475921F
02A7E4839FFA7729FC7EF8D12888FF26D3263B094C4542817B56BF7DB93B51B7
0D52E4CD68E283D187A7CDB492B2E6977DB02BD25B136FB202B9A33D47AFA532
5438AC63F64DBB5F37704661A62B4EA3C37A8C2C76907C1D03F6AD78783162D2
80559166A103E42DBC25BAA1ABE59A48749A2F85BC358A13FA4AF157DC1D582E
522854FAA9B291ACBCF9B74BC93E6FE9450DBDE6163D43D2AD75BEA7EA869296
069D10999D32AED2E38EE1DB9B71071F210EFA8645A68F72285FB22B7A3851F8
2586EF364EB4813C18506FADFD70DE44B561B9619E81D7C144723F5403453E15
794D4217AD972F875078EC7FCC49DDEFD14523A181350D6EF41DC385640785C7
B52C4EEB47744E9EA33E2BFBFF85BB464CB40D964A87523F2617B1C3DA8BD0EC
8530230CDE952ACF0B77A4AE35ED74B5E419A571EF20685F5E2937C95B50D07C
6316ABC08495EF319E49D935DB388216355EB3A8B9C49DF5264571E521ACD459
34271B2E4563C66525BB2FE83DF8D829AEEDE363F0EF1F2373AB1DEE4823AEC2
819B9786CC218CF8CAF7E268A0C4919F974E5DC72B06FF9850A155C783D9CCBA
CC1F51F9849D5B7ED1DAC77D33CA607154E6B8741330E9CE8F52B884A074C4C4
441015E906C4412AAB326B5D8F7A51B5C32B93B36DC34FFF8A4CEEFD226373CC
09612D028DB5E261D06B1381551E29DA1D2427F462E1BAF114C6F7FF2FC24536
0AFEB12779E6BD0E2D9CD6E10F7E72AE23DFFDCD5D253FA3D3F64C6830522219
38EFECB89C6B7E2213C6BB5DA31DFB05876A64386E8CD4858614188B2A4F2235
6187C8EC6BC71173E3B08707D76E76D8864D6728D3C22D44FCB3FA2781F1BB21
78E8E648413CB77011EBE5D7FC1457362CEE70E875DB90245360EFC1548B7D0E
ED701398E6C3E6FB3DE62EC6025238A4FAA8CFFDAE8507334A5E1AAE17E74B0B
AEDBEF9CCF12931838BD700333FAC52B54C5D96EDD374600A6ACF8B429BC0E11
2DE884A7E8583F70747357357D881514C1F3495DD4C17E2EA58094FA7E0D033E
3331DEDDAB0A0D5351068D6E82F6E226B7FC5E70CF91121C3A871131EFA81E8E
B20135F258674BC5E6A66386EF18DC9382C46E2EDEC0EF5988E9A02781783656
5188EA576F6627B9C7CA2961D854D8DB963B20779451E47D73B4AAE308E6F1D3
1867DD27E49D013451A56EDA29730E5334C91F0CBA1B75B92BCC6D96B52C967F
ACDE5DE43B584F5C210B52832F4DC14A7C06BE7ECB087DD09DA574AAB9AA1A98
D911C3094D1671291B04371C07C2E513EC19FF640C8334BCA6242A61CE0C984F
B7E27232B6088565A93CBF6FD869276EAC3B0EE97B8D2E4784D54D2DD9823B09
FF5B87831453B33EC83725004EE40AB45D36C1A460B8CBC3B1DCD07DA91CA24C
27FD74F810571190D55DB3DBCA991A4CDB4C8C4FCE09C860D09EE7CA8E72B2F2
C943C14B7CD54662AD2784207636C9C175262535F96B63295DCAB0E1873E51CF
2A4100AC181BBFA4298AD8D2FD3CD554B752ED707AF68D2D0FA3C36614CDE564
41BF0C28D239352B873D282EA7E3D696B97D6C8DA2FABF26C36D42495C57D034
4103B3964DAC7A5995F3FA52517C274EE944E4E7E769ED0530F08365CBB4A12B
C2792AF3C43A91A4B3451C5CB9B2CC95EA7D1D5B5D541AF771EAA67BC7846B0F
7483B51CA9E48CABE77E4B7FA5E22275784CCF44F68C011884B312D091C301E9
13128E4D1374091D69A94DF8856657CF60A90F5CD5B3D0E3870B133F32EE4428
675A79F00252C8EAB2AAD9877CE555D87E9056282E516D2F373DC43A47F8DD84
4EC25258D41D439EC2812A5CB3A3C3EDDC59F381B7B1DBE02622261D73EE96FA
B6FBD1D63D53560F62CDFE5CDAC2901A7972A49EB2ECED14C314B8CF66D8EA05
B68CFFC845869E4662E931344B5B3F2A805F8FFB0190ED61DA5D2CAFDFEA83F8
370FB3A6F8A1B55B73558D26FE1670BD2B2D19E209A9010564BD374E2DDAA179
9576C697CBAF813260A609EA10CE550A678069490FD4F85E22D13DB2B5E67EE3
4BEA48F3A738BE37DD49FABAF46F8BB3337E41187E029C0A98D7C1700826F7A8
6C1A558EF442F70AFD4DF85D23C16FF559F073CFC9913CB9B0BFB5C8F3CE43DC
DA76724247BE5A812EA21E670ED6534E250D8A217C25B0519791B1701D849359
C19BDE2E0E61615F1F97EA071097C99256A408D342B81994EEEA1C185AE05BDB
FFEC3A08CFFFEFF227DF152F2C718DCFD541C21BAC182EA4295D2E38EACAE5EC
9E955D8853ACDE39ACACE0E820812ABD103F8C4FC4D55262EE924316BEC141C8
4E33F0D954F89EC75663D6656383D0EE938162A8D398A66AD2991F011A3C1F6C
C4697F9C93A1B0D25EC731D12F50131D7EC479ACF3EC5641249D0663D1A457FC
2A5EABC93CB144A2A7C1F0397AE3EBE52BB03032EE6B809F9C44BC35C633D250
4E9AC1307E931FF5DFDA9ABCA0158F04C303831BF13D82664FF14315E851E60C
FF0578E0B903D65D7BC3F3C7156593B26B02DBD109B186349066FC8C4F948986
0BA075DD107680320E5C694E4F8B3C4F1FC635E9308B554FA21DDD2C4E178F44
E4005265485C02E7EDD78651BC40CBB49F01BCA4D50F084B4A11F92A54C53441
7377993888100145BB8150B1F5A630F0EA5E05BFFCAA6D4DD847F451A2C3E654
9D2C53B8F088496F96CBDFFE4A1F7D01375B710EE1C838535A71BD150F134E5B
B4F862823F6BC3E19A8E3B69989DCC325AFEE8EAA2910651563133B8868D0E8E
AC9AE0296429A78F4A45215752B8667105CC60AA3CAEA92C153A7FC6F9830D72
C43822EDC967677D898B9AB59E0F1077F3C3614581245A7144595277DC645595
F4A4614985DC0C057BADB68E01E615AAD7CBD3E202151BCCE00D3873A1078D6B
C0425BF7D84597813143C6ADBB8E48B7A2124FF830D5BEEF56A63F2FEC07E4B4
E5A1B62216C7C45614A3B862315B55614A9FA35EB54EC6C9024DEC8E8720ED49
D0F6928B7913F6055FEC2057BCC84BBC13DD80DC0EEDB88E166F9375E4D927FB
9DF4F03C386ACD73958E4E5F71E06BA98640E53C93BFA7454BC798D48302D366
86509E0043DFA501D99AD24923FA8C54171E3379E1A8D5B169F0B76497770B61
1C873675970516A3E1E66B5222ECD29090FC6462E3EE79AE5992ED5442E78904
D9A57F1BFE03767CC4CA5E7F0F675F4D8EC33C7272CFE4E1B8E32F03E2D45007
CB5D6E6D50F286ABCF52E9E68E2BB45AB19662C84E9919096568B37D892AC307
3473AABD12B06D3BDFB40B7BE81C394EB783A2EC353FA9DA7A8CC20C9F606AA8
075FE33BEFF611DBDF1B20941510CDF9F59566E2F919DD8B77979C65CBAE2C71
9480CADDDC553BA857E8AF70F7B9909D58D6AFA23397364019AFE6671B936236
48CC270481F41F3D40995EF1556D529443E53DA89844FCAE19E20E6F7CFE59FA
96B79E1A14486A1DCC36F72FCBCD4F5213074BAF8E3B8882433E6661BD202F44
8A36EA52F8E23D2B532F7A2FAA2E510FE733D862A58C26CBFFA58EAD4F74FB2B
FCBA9DE8BF421C3D92D067C8E7CDD956ACE10D04F9D1AC4D8C1207E4E366557E
6E3A5C5BBCFF1EF38CB3D0C5B4BACB53EEA08B90079DE91BC218C5472333B765
1D9A6A5C06EA76FF2FE02BE4221B650082F515069ACF040F116F1E53F08A86B7
BC067186BC6FF6EB0050899E02CBE55E6D7989CC3E78BC66A6B03B5B9E74F401
10D72BABE22E35B766EFAF8FB8E86C11688D98EE9F4B919FCE80906416D39E9B
D242B4FFA155362264151B13276CA77348B0AFA5FEF145D3A78F550C52A84C03
620E0D4F918744CB757EC159AA030F55A1B84F964A458C52F39122F12CA9B646
96680EEA9D8AC588A68D12A82B497EEB89411511B174C7BC6996B2204EE04EAE
2D2744E7F65E1169B57AF90BCBA4015AC48731A75C8E93DA318C021876C84489
E6EE45019BA6FF7DF4BC86A4FF0D509D8AC5E5DCB734B995B6767B660D737952
B7B7379C3953B175698836066BF1B657E506EB8D8EE1FB7AA9101AFE017E63CB
4B29ED6BC20BBD183992E69FB990D003023F138F7D3BE9311BC6007C13890662
2C7FCD3C4D5784E10B3573B2411114A3B7ECF958E4215E575C1D7F6650F1B5D4
E18E274AFC1D5615C30A9304B5283ADC2B99A1A533C2A334DC25776D553770AD
B1E4F171F98CDC37F4B0CA2D12011D82B06FFB6FC4E1D2490EE6DE99B8CBDB52
FB645B5A339B4DE6AB47A75C301DFFA5977F734A39CC935C63E4F08953594550
D23F5BCA36F999F336812944FB17C9B9DEAEEE153695CBA998E8DC5F4972C502
B65EEE105367B0EEF3B9304A8AF71B3E5EC1A0FDCF4E250D9C24CBC939DC5DB8
9042E14B8CBD65AF9A93F4EFB3A6468436F2CF1375D0EFD87A933902467FCCDA
B52C53F10CA11279D42A8DBDDF3452137A7202312EB30904C43C098BE2A47FDF
35FB3EE97094E0CF554F68C461C852550117732CCD431419E8840E70485E2CB9
1B49A1DD8CDE749618E3A5CAE715522933DACC8AA6C0656DF4B2E78211CDAE2F
7C54169D8B12D890A36ECA59D24A48334A99F0B85800ADD0A30876548DF75E74
0B638927DBCEFB7754597453106FEAC73605D37EAE5765CBE551E02D21E26344
A419602F2851333F48FA8E3F36A68B27EA2A25B8C5766C7577E7824A7B021BFD
F53CD8B11BC540555002A406A60D46D4DFDF4821096DF5B38EF7BD1283988963
F2F62669887EF157FA486AF4B3F7167E88A1054A5165C83AE7625BA47FDC80CA
C985D8484BB73C9EF257245203D027A8FEA3ED9DE5889EC69C6BFBC4E9308038
8CB739FF063E2D693F61369DFB3DC7266FCDE9F3612A7B4BD383C516910D7C86
BEFBC7AEB134B767DFCA72C98A3A3F70E2B1B2B49D61D0C84DDE39378FE0994F
B37A2EB535A89CE81D4A0FBA7698F5B4FFFD2AF661FA1A4784834A94918AEFBC
EC22D36B3D8168DEFC2BEB6FF0EE92C603C1B075F11E8EB59B6733DA04569907
565E40A3784BB485B990475389A202D57CE92D81E501AE62D07F94659C81375B
5743915D9FA87EAD126F75B3756AEA8F1ECEF5990E65DA1B3B358CEB212B9589
E237781EA74BB4B7FDFC9305F21AFBCF2B3631414508F52D4F803933BECE3AAF
226251DF53335B64CB907112BF2C68F7305BDEC3E9A3065F80DF94DBF45B95D6
1B519FAAB8A19D23594FC04F693ADEE0C6EEB21CFDCD5113471F06BC88172DBC
A189CD4F57EEF9FD392FD4586D57A0652B04D0EB5CA4C8F5C414F1B79453B2C3
41A9CE98297E8BA1B9BEC89372A0C1348B63CDC694426A766E03CE74FC93ACAE
C89AC3CFCFCE8BD6E87888F82A01A3840674FC7569F3586E7E655B76F35B8E4D
871240DFA0E09A288EF04C3A3C100B5FA02EC33499F3D817E1E3A1B34AF828E6
E0D19B587A2261775D4052FA04E7AE9BD3A12D4F02378EB721D8DA6DC1DC0530
0B0CF4D4004ACAE7E94A9F6230992B8EE0B29D241CC9EB880831D92E411DAA5A
5233A9229C6833731571A13E905F251A3040A8A1A4BA6D0E7DEC816DFCDF104B
404F5FF6C52970FDF621462A6928FE90E53B69213F8181A4CA2B0ACC34D1BFC3
5CC62577F1DB371E25ED82EFEE917FCC262875B9FCA5EAFCF22275DB74E88971
C070FB15833FEAD6A83792AD200308BF121AE78CBDCD768E5697B99EF19EB7EB
B06265AD0657FE4ED13366B4C90E7F9CCC9FF0183882685B4D4902208E9F90A6
206FD75A589DCFBC51841509C357F3B794558BBF5909310785E5870DD04BD39B
6C781DB9EF7AD1959333F17B0D9EB969756126F67DF485CA189EB6A252D8438A
8DB4249EC96516EA42BA9456FEB4F8FEBEF49AACD85B0AABA737DBAE8FA877D2
CF5FA4ACE8FF6775646C9C74DCCD3EEBC6F9349D9F495C4ED2C1D18E78F365B5
AC9481C28C56FD36BAC2263886C21F670A1C70800BDAAA2BAABC51484107855C
933EC38C91E6C8578ED3345968193013AC4D8B8B9EDF71892F7374565F78EDA9
65E6DA5358E619A682D174601E7F4069C8A22DA7769320A6E220B97D351FDEC0
78E888B670D65BE7BB281ED678A64DF4AE616FA4166172BE5ABF5FAFDD79F29B
9FCFCB3FE517C644AA67E7FE553BAE20B09A6F215F9D0322185F99C366D7DECE
F4923213CE14CF07FD073156BA0EB692C59E2C6E106F16D7F3ACC5558863272F
333BF99CF8B084CEF2CE21D1B90A520DC6F51176FB2BDE6C1CC4F6DF7C81BA3C
4F874123F07F7C001EBF8318D2CFD004E88F1F7BE09A97AFA76D92B0B31C73E9
7321FB4C09F82A90FFCF5A3CDDED459EFBABF42C0CE17CB5C0CF4DED7754335C
3536DD775566BAB6CF5F7B5A2B2F3C172D3DE38DEDBEC295E3285D22C362DAE3
2F9EAB9894516AC5D1DD865A28384D9C3559B7E43888F8ABD1F39BBC3F4BF4AA
EB46939A570C8132C69C47201B00F83C5E4AE9EC342F95494CDD63BC985E24AE
DD79FD0F093FEB3B3F7ECB4328367329E36F676F942301846A6F3C54AF5A4D60
F37B7A4C3BE982FDEE76F0B8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI8
%!PS-AdobeFont-1.0: CMTI8 003.002
%%Title: CMTI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI8 known{/CMTI8 findfont dup/UniqueID known{dup
/UniqueID get 5000826 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI8 def
/FontBBox {-35 -250 1190 750 }readonly def
/UniqueID 5000826 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI8.) readonly def
/FullName (CMTI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 48 /zero put
dup 57 /nine put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 86 /V put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5188B8F2AEA89F6B
B9F27709B9A6F7FA0D2B5A522C8FFAC1E14B3F5FD04513BB94F52F432B304636
6AE8FADAAF2CD49830BAF2AB6E4BE9BD0BBB46BCDF190BD729750493D407FFBC
E0AF4FF2457B984427D29E386D7D003DE9F46C90DDB2052542599275C0B2AF3D
5782F71AA076172B764888EE754083308056CE0FFD39135F0CA6359948C049FD
63EBF553A84FB9B32845354B27A32CB1398F49E0A331193E0A858DD240483727
07F041E6D75C1378445A58E2B31F146BAE8BE3BBDBFAEF873B44F245604F69FE
376E57A404A743550B10A450B9C8413069E2E00F0C304EAA7CF987E7F4577A04
77F67F4B845BAE635E0639F6E98C3DB615F4376F878495FFD22D7A49FA424EC2
823C1587925820B548400B53B5513AE97A366A87B4FA8C886467766986F80174
047CEE583365F828D13C1DC83280388C21E7822EA28E715C1C071B4DCA6F19BD
1ECD540DE11C990D6AF7D52495E5882E8E4FD30B3C4E33BB91B30BDBE07DCE04
3DA11D0A2E0DE87AA3FC65A92B11CD3F8A601536AC29992E7219A6E21E6F6DA8
8B98EF41DBC1D19CD926D2888EFB42BBFA73C8ECFAC12E368E92598AA943FA70
9D02829DB25AB9A0109C6361752223FE5E054C1E21CEF35E48979979A0DDDEF1
5EFD7BBF989B7C7D3437DBCE1669341264E290646F2C8C564B6640D0DE9ECE1F
71724CAD66C37C8EC298848C43387CD3F4488229EE5C7E68668B2D39471ACE31
D502B7C9560ACDE008E84D99FD379D13C6AE62FCA484B7BADF5B8A92E69790E5
8240C3E5C78A83E2600B0EADEB020DC3A7B2066E895AEA5A9A1E606E14818DF3
56EFBF8876EDC25C14D6DAA1B7A80E8F667738D8D5040BDCA080A6A284C25651
40E7A230582EA0204276217571168BF11644A7DF209C22E3748AAD3A90A2BFBE
8C3BE010FE3BF7932B36DF91858583EFB3BB212E9F66A09F525981477AC03967
95C70DC6BF8498F80B7F92B748560C07A583B14D5DB2E48718E2D5B118386AC0
30DB1283D2842392655AD117A75B4425C51ABAE1EE122E68D24A35406B73CC2C
A839EEE18F626494A7C781310FE182DBBE6EB9AB532E32EA64534ED6224450AE
25E1C2DBD245F76936FDC8BD65775F5FB281330BE2F7E21E34FCA486106A8385
BDE975E225E68DCA7CE41C0A882075D128AD32E4D0B0E2E2AAC9F40D272003FA
C804774131EA9C190CCB741D688284EE32CD2C7790AA683F56E33D571100C12E
F753258FBF6749FAED4540FD7BC73429B4C9C93BC9D2D482444C50FC35DEAF0D
D65136129D220DF8B9CF961F93D4D0E6D6B8E0240B9DB73B2B81617E0A708DA4
F9B95DFFF22A1EB794B5C2F4E7F2159471F9631DD4B7959B8D87BED8B70B67E2
BF7D6DCD58A336E3A6E97DB53D94268910CC212EEBE18B4898A56E16F97C7C4D
A34EB6E1E6AA0154FFEBB13000ED9A4DC26FFBF0481D95F5481A72F480EB7A04
DCA9A6143D19B604F8502F25000352AE50C33C53657A4F6118EE324246191316
DBB6635CBA9047F911F0799942C5F46782A8EB3F500BCC68948E58EB0CBEE0D0
9BA12584C79AAEA795F4EFC3B04169FDB8EF672F6126BB7BA9497CF58CFCB0D5
CD03BB351D07943B8D0FBFB7DEBA03E833D591660F31EA7BA55A9167766A26D6
A156EAD371941D319D95FBE43260C19DD649BF80B44C9C695EB927095421DA01
0D422AE17F547FDDFE09D3D867AD4A1C79014FABF12E69A547B73EC7DF70E3D9
24D5E8012C5ED4917E2A5E7E830573F44CDBFDEFECDB5CD4BBE0C4DD6A458E31
A7410FF8C89E1F04775713BC812C34E4D22D375927552B305FDE786B14AC3347
6695364B2A8F5727B3A202ED392573AD67FC899007EE380485384D10CD55664A
A7D6AEAD020002AD45B46C9273D50BED3387A0C1D11F894004CBC61C6A8A3166
E68FF692B25063926DE2F698CD0A0141A4685DCF0FC0A785BB2FCBECCA57771E
7031DAD19207691B2F1A9F00485D746765B4AF02A9606522D8C75BC14998D68B
8208773F4D2635EB9502DDA4825EC7DD185DD098B953B086C9B9F99E0BDD7ACD
058E3D2A02DD2B2C6959BB3D961E27D234189D23088DAC6B2204C4A9E0F76DCE
394E2E4670346A37E7FA9402E40C20F3C40138C6C7CC90A5A8B9ED3104750118
4AA57EA814ABC985B0796C3EEB88017C0F69BC5F268F7BA1B700E75A851B79B4
FB5C715F3792340341D74B45D70D1651814D8847E02B814D47CD8172EB87619E
5D66CF55CF11D1A877276DFFEA9028B507FA173E1A846D1C42C9662D79766315
2619DC94A4E331F6B70E5ABA692A96E842D43B05362DA4546427CB890123AF04
93293AA38FE8CEDB20D325E4E820137206A23DE2E8E3A5663638F74A89D5563E
1BDA0CAF151F6BA70C4A22AF26E0AC3F2B9F8C45523A53AC4F25A2389F4980CE
44A118CF1679CC860B075EBE32E52489F75FD6C747BE2E6996714FB61498B05A
66C01A15D93BBC7C745CE0E923712BB3BF889239D7E9FA4CF6BFD3A48ADC1B62
AA0D91BEC7F7C836F2AF0BDD8967BE0D63C5EBFA9BB4545AFCE1CBDE408F5DDB
EAADB00BE93D21DCAECBC937212E64C17C742B77551A7486725DC5B6968B89B7
71DDC6FF46B31DFE19C5F3FF92CAF32ABA409AEF643E4D8B672E5A4AF5923B10
08389AEB65A68D4DDD8D8034EE1345D4A357E27A3A0CFBE376748764598912B1
D29B80102831F3EAF20A854F9B13F3BBD61F69605AEC1B6ED1AB066F8A13D87A
63A4008A3EEDA327F8541CD5F105D8A5EE4A79B9283820B195D8CEC1E00116EC
DD4276E99B39A38EB9EB7D2B6FE23EE248EFB9095484930A1B8E68FFE5199643
D9213A1789D8068E444F4814B88B0389D83C9F1F29572BDB7FFD034B33DC9AC1
D271CEA82F4EADA3BC91F9E5E7DA608D8567EB4D8A605130E0045F722AD3A0CE
CDEA22B9CCA878E88EC5E9C8D0B6142B281D99BF7F32D1CA8CED728DBE57C270
D3636F62D06A97A245B5E7C84BE2B15987A2A4AAAB7C54479A14669B47F26C54
034F20C1146AEC8295F995C1AE7C03D11F7257BE65803D8582ADA8257BC27F4C
0459D9B41274267D50CE7C88C42987631D29869AB4EFB1F439D8808BEDBEFBCD
DCE341F58196C6BBAACE9D924671C1B82E82CD6D394FB092FAEC820660D09767
F14ED82B17FC5C7AA5C376A63AB05A4B4C6E21FC5A76185D3038591334DEDAFB
D09146B80D3A0E5D0A171BD83313C9C49B569F42824FC8BF2E1C1DCC8B126E17
FE92C679853C1EA00FD376A7C12142FB7EBC911168F98BBB77CD5673D038BED1
677A498EFD3AF478A0E9F0F468310BB304E38BFBA27E35E329779BF4AADD96D5
7D83517EB68BF45DEB72327924F3DF5FB0434E153C2B4A01BFBD77C6F1DF56C3
19BCAF94457B781EE43E4F1D69434D96475880591A492100FA85E6AC6BF70299
3FDCC4F27C49AAB1C339A841A571CE65C1E6C1133409236C0B2AF151A423E4FF
7C84F42A41E472A5B18EB93DF182BBF8675AA3C0EE971808CC67B83E17FFB475
CD041D9F5C69F907BC2E1699B9A516E048F1778C8EC1C50E7455B9BC6802E871
E6EA5B6D6E92BC0048BFA7FCCE18DB433EB037D7D7081F00CF4020C07FFC871A
C486338D2F8437040DAC75AC1E1114569C60CCF03792360B420F195F2383E51F
D028FB342CADE9A8B13099A21C2603C7859188784D857D4950F4D82D15F025DC
6D015BCB9626AB339674589595384AB6CF067820E908493AAEEA2F16D0FC91EA
C797F6BCDC5963BA1B213CBC050661C84334FD7E643E978594B2E9979C25A9C3
AD0F3E7AE0445CA0B106C97F962E5B314050AB826F8D01B3C3CB08E3795FAE53
1C2E0D7A174A2A968AC06A53FD98F807C38CCB35BB57C39FA945D27153CF8C12
4DD344A2F1FB3F777834716CB86D96C11C1BA9E1CE79DC7FFC1520067CC76AA8
E4CA100D74C9C26DAC68F6E16C84365B8EB104CD382C5188423A3193C0BAF143
CACB03DC0EFE64611C71C0BB65C2DB29CC8F9DF85B05CE69C685F54AE506DE41
7225D2C3EC3021219C84392AE00D862EEC9D4FFD6E520E6245924A16A58D4B9E
7050013BCA1D24C5C9FC8CC596220BFAF8F9A58D53396106230DD64C19F561A5
462741FA6B99FC44A23493489E5DC251E63CF2A5629963F356789F78F3117F0F
2B22F7EFB47D93B92A16F5951DEE257FFFC7E6F8E94BA6E73B3F2216186F3612
4A276778340698C5C12ED370CF2D2FBAAAE66579A85351B509F73163C459C002
0D6DA5E9018D6AF35E978779236104086149F79B914111202708B4FB7558F098
4EC8C44BACC28CC8F20CA53726A73DF040976341CD72FFD434670AD09A62C5D2
873E0A89A16FB8BB94B25FAD9DA42549758FAE38531D1BF13B2D4E51585C8E9A
EFEACF6F368BD564FAC6784FB264BEFEC0C133A9F6AE59F53EEC61F03B9F6D46
17E615CB7AC40DE1C29E1DBF2515A6462CE1278AD5E7C7D616B4D1F61C4092BB
83FE68173BB8AD591B189106C69F30CA946AB505B955148A9C64F7E767DE1D32
D19A9CF799F2F005D7E3D912E8351373CA6926D4D9BF2881198F3F92508B0F1C
9E32E86304261D57A9FB7CE2CBB1DA95F42C728E876DAE97175B7684E1DED2EB
F6353EF742AA647EA82CCBB8213238A4498C652B0020BBE09DF9248D2B0D7939
D5D99B1AA7CE785B5979EE2E1EE199856BD2E03ABE8F2916C2A3ED3895AD6F32
5B3E3C46493C37014B6F339268080FD6FA8B5CFA5527FD21AFF7098021762797
3A3B7A778B16C138719535225E1C0FFD38E1DFD29E5128442D6FEFB2A9DC568E
CCB4F97F808B485303A3DF9A7283E14900FEB5E75A0359E9AC87BD47B4E7DB71
1D155DAB0441EB966240B3FA2F5AE8C5D6C61E156A959B6F0E1B104684A51023
942121A09D119F830D312A3B23AF98AA065BCD631EFA0BB945442CDA214FA193
995A49B79600D2AE25085BCBF58BA6A663037FAC029B9D75C7D3D862003DC968
285FE22C8BCA86583F305C4250442843B2DFF5CDD4736168C668042864DF6C89
F9719A52ABA0C611F280FFEEA603E4B9C8EB744D1542EDE8BDAFB30740B09788
E825C550291039A4020367130E66BD2B8E1C04B02C1853F37F07FF529394D18B
01106058E3C30412F79FF5E4DDC9CD06C77BEADAC904432DCF41C2667E85F89B
E980DC692E1E396514B6DD04CE197D3B6BF3B059F0F74CAB342B984BBCA7551F
A19EC31DF2A8F2923318A74269024BF26D7AED42E748B6B67721CE33B2B27A0E
04C1E92E3B3F97BA524DB97E9C6D3291231DE3D48F7D78A6CC2FD49E98117A1B
B39418F0DFD8FAFE4A374B337224B935E2827CF69102E30BDC6DE8448562F813
3AAB07044FAF7324EEBB01DD182969963FE036A483EA0B5EBF59A52200685EDC
B733F81996FF22E99E772495A82AE6CE4BAC947B819A9250C1E7BAB86C06C3D2
C9180763BAE247CD41EC46883DA3E98C2C947A2F2E515A0C9593CBC5B7D6CF08
AB2101C1209AF33851314D4578B0B711888FC3BA0EF3A9480FF16B1DEF59BAE7
3FAD030F9F0F81014B0960C2B234854FF290473010B011ED96016519D2A3AA57
5F40CD98C367DBA14AF270965CA1FCFB66295A2DA89F0FBB8AF87B013760D85F
BD03F8AEDB62221C29746B7195C88D777EBB552D388D79F98A8472615C06F4D2
DB9045B66BD7CF4A984C7C5A1642FBF92C821B9E74870C129F0E76FB23B27E12
E88EF9194AB96BEF8846248DE86F31E6DDAD25BB4F86FE0E024A65FC6FBAF2D7
E172453E3F9C5B5497C10045A0683BB3DA8B5A4EFAEEF4631E9E0042227002F4
D9025797967F9F143189F30F6A89B4B26E4D274EFAA19677ABE18F75358168F1
5D5106765AACB1F8338C0A221B5895C660D68EA1864577F8D3B2BD2FA3B7EA21
A604274B6937DFCE6EB90D0C6F87D987DF0F7DB37E3219DAEC27C500B705C2A1
D635405DDFD87C99299249281210DA7D0CF6C519389ECC166D99EC9C11EE000F
96C180A20466E4D9D3F803E0F9562AD09FE2289B5A0F72ACDCDB700158C150B0
01BC38D269742A8B62E8C005535374F10134162AADD690D40556FF6621E41001
D530D47D29CB33294D0CD50A4428B8C74C9FE425DF4455A7B283350A112C7721
565C68084184AA06B8D2FC631080885DA36A9BCC09F8C9AEB8C79D72C2DCBFDD
BAADF34FA92449ABAAF510196620FF6693E252D31A6C2A4ACB3A198FE3278A25
2ACCD4B665B5A62CAA65D60C1FFE196825927C922EED2EA130C945F1502263AC
4D364DF0476BD7F79A6F7B75E217155FB7E9E5CC967B94ACAE72455C709DA98A
0BA10E1F8851355190C17B6B6211D7610845B16D0FDDF9E12F55FFCAF2CD677B
FDF3BDEAADAEAE4CADD0334DF5CDA9C737C3A04CAFBAF6C002C26CF29895C11A
0C744C8738D1A720716272B4025DD975523DA33FC0B4EFBE48CE761B938D9530
643C26E779566314BD72FDE97A88C62A94B4FE5CDB88C14952F739B5030A2A5E
ADA78AA3EE7971299E4FBB93404E91DDA9CC799933E7C3B32DC630FCFA9C4F48
B42B33DD10F5F23B79C539B5B0B645F34DA8D8DF9BF2A052140CD52CC5079D94
33EB60C17ABE3756BD28A384D91BDF9D655FFEE546B49E98FA3C48243C291B6A
FC5E352B2EBC82E2104BF7FF5B158847DF59B7B18CF808149DA8C6E55F357E22
9B78BA28D7DF56A0CA7B55BCBC04307B5E2C811BDAC9815F70DC7671704699EF
59855418FBFDEF36AE436B74A4447554B39D9362E30D50597C0061C1E4BD6F81
5856620DC330EA0FA77EAEC9E087341C4BC808CAB056591CB4C5EE5DE3E6A198
F86A0081801F197142D986047DAB4677A862AAD48DD9EC4BA033FFB00DDEA8A3
6D8BDFA7EBE4743BB134B6AD5A014B084978DA46D117CEE5BBE5E0BBDF13CB5C
EFFB4762D2400E5C0E15DAFB986DE0639D7547EC244B38F93EDF3D0C359594E7
979A0E908E750C7C6BB9E65A9179CE5F2666103C493E84B165A3F08DA5F214A8
A5E5B1ED447635BF3FCBD6577968E01745F81983DDF961336F79A6404DE6BD1F
DC9039005742F0D3C45314A7BD52FB4E16727D439746DD5500DA19E0F89914E5
73E52CE753649DB28FD70F7AC5726BDBAD3F715FD3611D9D27D304E2BA58C32B
BFE69F9836D0AE72839A4B116CBDEEA9CDD5D6061782BBD53F7905B98A587AD7
31C6DF8F3673AB9D6F5ABB9376D78137E8377EECB661B6CC8418438D510E6481
ACC726178F7B86CB1EDD6B12CFA3E0AD19AF7096B7E75B753E06981B2BBC4BB0
8F7BA4495FF84A571BDB84E280EE393419343F2FD0122C2D6E3C5DD7736E2374
E41140B2B64EA6AA25D2D198799A2CDE0E7B3EFE8534815C7AE82D31577E8BC7
73645A02780D46BE9F62A701B585FDBE40A8FABBF35A757B181C4F3070F208A3
F3318CA3076C2878DDFD4BDEBB547BDBFECA4D5952491768306465317CB31A97
DCB565FF8391CA4E1FA19533D7AD57332BD149910417E3E2025C86CC62591C4E
F3C3B0A8C9CB69C788FFEB3945CD080EEA26332EE79D87259B08AD2CE83AD63E
E90DA927AFAEBE9CE84F7A22CD13DDCB7E75C282537ACE01A31AF410A6ED11D9
D2C6B6AA40D7CCAA092E955014E5F43F5D20A0A66B863A83D7D8340589046D29
896E8D9D7601A93A790240CEB41108D7E500A2A2B20C4D63C0E6038D184DC74E
2E983CB2A2D7C116DCF63631E2C3E7A3E50DCD355962158491281B90337F9AC7
A95C0832ED8BB98052CFF50C95D2FB0E5DBBACA112DD1B17A8E6A8B4195077CE
FE93AABE6BC419E754F9D66EEB371F0DB554C056A1DDD452A64878EDF499107F
B92EA2BA9BF03F310D51733B1A92210EE8DCB65192A32479E72AACF9ACC43C1A
7C962286F2B152BE1F52994BEACB3C60E857E518E942ECE647E5B8DC698DCE04
1594E0396A0BE13510E5180B59AD5C1B12A1E790F7809EB1DD887DCC63D5BF6D
01D8ED2B2B70E6C0DB0556EF2A22AD6F3316D66FF47B761B1643AFC0D49E4BD1
9BA250F18A13489A2C5B6798D6660EFD6C094000A407184576AF9983FCDCBC34
B1914DBD6B5D0FD73589F010C50BDD5686E17AA0CEF9AFA7BE104D4AB06AFB19
B4FB3D0BBEF9A1304050C9F5B329B24EBEBD0539801393CE877640C27032E69A
65588CD61115FC966FCFE51A19C05047AC1D5FB8AEBC648121180C1D92AFEC33
9E2D3C0D311EEA24CDA41A424E63D95021A87A5518EB81FE14DA4F79FF259EEB
F046D2D87AB593298E115787E2FA10F25210B99BBB1ED4B3ABFDC5B79BDF8B60
DA2445CA443E6DA70640E75FF9BD2690F2B953C50F7EDF355430A1B1BE36BE02
1EC56A0813532CEE1F9A2301E277DB881A0185C8CF2EEB0A33DB4A6A06C46630
3901A7ECE39370AF0A13CBB3B607256831B1378CE60F2B5318F513F51EF23804
F7DF186D5D33EA5C7B8C9BDB28DB154592B16AF9E0440663539A5B59F7F984A4
A1687C69C6DB454E81CD5CBE55545A2D0C116B903F0842BD7F06F1AD22AFCE10
4580C9EE95BFD47B40A59D76AFC77D98FBA1C493E72791A5460FDB045F9DE775
1F6F759E56C53A996A5B967142B635F27E8517EF38ADEF313495E73F3B0374A3
D1969F174DC7BE99D94A6A8DAC382F5FAE1CBBDEAE7B360EA2C3DEBEB9F65900
ACECD7008FF7E45102AD2A29E3D08310FF65D8960A839446C44E6501237BD2CE
C5411B2C069B2972384998491B7AD99DA26665B12BCB09C16E88A1A766D058C2
7583E0437C1492110208B9F08117AE1A1AB2C91716AD7880F56B2AC850A95484
A5FBD03651A4539CCAC194D2A094D1217894220A143526A419EA881B6B6A6896
7FE9A1552E184CDFEFB70A71C9C6B0B66ABBDEA8992D4D45EE54B1D3341D1E6F
95E182478D62606B21B08289877AE48BF7E9B86B13BC4F1BFB3AA57335D2CD08
7358D98F25A9EDEA060375BE6309CE855AC25B595A6E0EFCCDE7D7792971DBED
C492C2F81147485684BC41AFF04E53C067A3E3B122ABCEB789346B387133CC4C
3E9465FC4A8E4ABB4AD76A33A7CCC6C2F607808E7121BBF4A5CD8483F4FF9936
0C893128BA3A5B74869AD57730DC8E2BF509D21DAA561EE9A8769B20D3084059
757381BFD9481D29EF7F48E36B0B255D765E8BA1A68EC232911F5876C3AAE478
166FCE8E5369E50B64BE50A8A9D74EF35521819D0E70292F4D16ED6C78F32092
8547D1E80623DB396BF11952DBC994A3FEBCA1EF30502BC94A92ED819464A606
60A8ED1C18D38FA1BCEB3B9AACC242285BDF83F9FB1BE4588EF0E3FE3CD234E0
38CE35BA9B42C4168E9CCB3722A7629CEE90EF2B4E8C9558D19E87FDA13DC494
0C79941A5B9949DF791CD6218FEF2BB41DA2ECD9AF44C148E85D88FF532B5115
7A6360A3DA99B67D2DD1DAAB4FE586578B8AEFE4705F7B2BC20C941078C1A078
F656283D73FBB36073BF5BA17DBABCBBF38C7E0B9FCFAD974905C8AA17C31D96
3D0774224388F1455867753A4BCEBBB54F8C3462FF49E29B67945F84235DB9DF
92883D6F8C75809AEC3EDE8066C27D88CB2B54812FDA1F72EE0B33E60E22DCEC
9D5E243045347D6B96599DD13D1804CD12750280EDD19FFA9EB7CC76D75FA3B4
D38794215B6E8249B7B49C5294E70D1BD5011928CD892DE486AABF30976F13C9
55B6AEA08FB805B2E6B5EEF837DAE23DF0B25BD9F4EDAF2DE93CECE635386027
707B96485C9288ECDB56336D01024394286CDAC575A5A5C0155C96C2D2D7503C
81C88ED07C5738FA258BB7520670F5E293B0426F7D98FCB2A589E1C16235183E
E9A475936156628D3F922C2D74310B74E26685BA61D0F0B55F19997F16EC7972
787B7673280D5937A90C0B19C5EBDECEB1EBE4078D646F0A45834F06B11E53F6
848A469E9B85F5C3CBD9481EE1B810A258E0D11ABE68B70573B76711B9583654
F891D0E72535950F6C8AA1F52D77B10416A11B3645E656846CE0C79CC30A6307
BD8100A5C7BEE22D877AB8A03B2789D82ACB07963AC91CC3DAEF79A483C3B369
BC76F7009AC9ABAB13DB44B76E2BB2E9939AA4BEC6EE806A802E861C3C6EA0AF
A1912FE51F08DA93525A799DC36E7DC838C24E9D183AC438763126E89F194B7E
BA89BF6A3915D9407D406855039B2546CCA5DDE76709CA4850E4A3E59D01D04F
4BF25E73C8CA18A55043429D6CB454E9D27EBA2457035D8FDE88F9819346A50C
2AD3D77392E8D22A371B02BC8FA4B0ADA1B5B45E42E6C714183493219EC6B28A
78101CFB4073C855B6ACCDC5A0D1AD92B59E5F78BFE6D89BB0394FEE4649EBE5
3740E159EB97BB47C6C82DE75B97DE390A42EAD20244CFFEAFE2746845BD5A3E
B61FED7D3F9E14173D5B9895516213832A06FCE08360D4C56F5A1436494130E7
3EC1D1E16163F47D2C6591D34F533016C85F5E82A98C1085B731D73A60138E8A
C6C0DDA3730E3EA32824FFE7A6644823816CF03B814D99E1F8EFCC2BC6C39E74
E469BC8A0047F58E1EA6F235F92593F2EFB5FB165669EA6FC4F690C4D3A0FE4F
A262625BA48B4E2DD45EBC8FDD33D28A3B0AFA0EC7E2C03E698202313F279D8A
2DD32F146AB6CF71B91EEBE71561EBB4A9910FAC0677BC00C2172E8954FE7E4A
3A61A786023A062900223625062E8F5A6382097521095088141BE2EE2195DD4A
C4AB5236BDCBBD63F786B56EB5EF0670796F128037E531AD39210418FD66FE29
3239CF0CE87B3E8429667BD7EA61E1610C80AA41D66E2CBEA6F0DA15AB1AA71A
89A848A3CB27FF32383FF09D994D24FFF9A4C89CCAB064DF2B04CD69CB4FE88F
80D227742CFD2998C7829900016C09DAA3893779B84C3B7D1F874EED27838CFC
FDA54BADE674DF7C4B625E7DF9A74522910465649F842B6AACD380CC0AC60305
1FE4E434ED5C37EEAC5741B9E5D15D53B0D19953CEFCA8D79B22AD0243B0102E
27C64BAD6A02099091D09447D5495C18FD7987A4BF5249E8E602651C1C837E8D
B575464E5BB127885820DD9747B3F962D4403B59C5A609BB7E997D1106FF63C5
711889667A4E6609DCF444625F61317AF3ED1DF5712049731F1E114F6F18434F
70E0897CCE870B001B2C6B33A3BC53C4E3443FC729D96217F8DB949EEE167EEB
25ACC3B7D78624BDBB18F033B15B632E3150A48F5BAD7DA426A2D00EE28D9273
36FC7A14821D7371C03F1818589E8152DCDCBFB79261697C0E944D1061F97E00
97BDAE4291FB04C16D5CE960B33E53F8ED4F17AAEF29B1E846EDDE8AB36329B8
1F577069F773A62E2BD4B953A9203EC86300FB3184E22F49137E331351C1DA36
B0089E73605D3B1087BBB42122E03AF3AA6395D034E9D4798CA4FB675228BC26
9CB37D987887E1908B5C0BA5F9AD092DE625257C8D3D1432148C2936B8565A95
5EC15FC7C0BF4EF6C120AC684DE9ECA4B9AB4F09E2318A3D188FCAAD3F214530
897A7A43F93F7FD59D66189592801B10EBAE3340A0133467E7531A8C403BFCEB
0E237DCB7CF63A8727D7ED285C56856152091422280A03F739818E376BD054D8
DF7D6F3A68432F38ED6C9A4C3254F8B3D5D87D3E124555362334DECA487AC3A7
7B78231AADDEA465CDB7F23CC22328C6F5987E44D7BB14375096494BEF2C34E5
CB8F467470AAD462BA7C012007DF9D2C15011BAD4C858F203C39A300172A507E
2A13CBADB2EF01BB38883F1CB40145122AB23726FBF434351CDAA842F5DA7550
0162BC414FBEB6469EAE69BBA3B2B4385DA9EACF875C8395F2030A32A54D8FD7
D1420EEF3026B10F9657B702A2158688B5D554331EA348230DB67FFF088E536A
251EB9DE8EDFF604976111C0311E1CB0E559DEFB6ABF12DC8E3579045013D73B
A4E395C7F733D777BDB2B8D7D15792E6E23206D5C456F677B31B03C1EC029E39
C5FD69EC926DE32A0029FF789577B115DBB2E65E8158137C415FC265C8015096
88A6FDBB362D04A481233C5CA070877301D97091FB72C85E43BD56514953F4A7
8BE7A4BC2287DD4540409E8BB1F9848A58ECAE8C028892BF4118E10DB83037FF
4F015E6BF3608CB28CE5336DAC679F7CD42402A7A640F46F577B963ABCE5689C
9B3AD705D4D9C47DDE39D0D490F395938F6CC679660473F5B182F306A0F573BC
63ED45227975702ACAFE205EF7C5C2639FC99B1B05B4B1A4FEE131B2E8F358A7
1FB42E6D96C9D62FA7A4DEE85A5AD02726E23A6BFB4A88459A1A90327DBF502C
A74A5A8E5E2BE4589DC68FCB5C8403089BB73AA96D2F3D30E1FF7D6DC6989E0F
1C2C795E4986E45E087CB0ED56E96D093D627A79548B34048CD000435FD4BB2F
AF138C6F320A6B0C042F79B0900BC97FA57B95D98C2A36D29A1EA7EA9A7D9851
295829F29344AB651417A9B2549D7B42B7EDE932F093A5D89907D0E80315FB2A
8689AE9C0C84861F3353568F5F272A8E6F92B131C8D9506195ABDB2C8A71358E
6B8BDE0591A3DB9D9907A7148DF04E0004
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/UniqueID 5087383 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 86 /V put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF728D2A654E52B6A6C90A3A
725F86627D7C3EC5AF5AC512976D35FE42AACA3FECB401788D0BFFD9F4743BB2
EC5B4E7891F216DCA5A69E917A171E0069A03FB214ED307DE947225049D46E0C
4707503F09811A597A9113921AAC23AB1CAA9866F81A02BDF349FAB129F23E86
E384C043053055938D42ACBF9F0EE86CEBEB011BD5BB7D593104140E6AA9CFB0
4E0B47C91E504BB6A95B2CBC36EC03BE01897C3D498EB30FBE4BD9584B9D766F
CB3CC7C96FDA76A7E60CA9BC2BB7783E87F39D1FF9A601B901D6AE0E54F54675
F46D578CFBAB6B40389C2C4EC649A3AB02CC644612F35C621026D26A4428FA22
381EC4B61A6DE77764D7E99704A141EBF0A89C25646D758C723B42F1F538AFAB
EA9F93555B49A185E920F736EDD63B6B76C50E3B0C8A1307CAAC32E8F2626677
8AE7D1A95E6A31672CDD31719236C908FA520E1A644C296A389F4859A80ACE2D
2A8991A6E542056A691846157B47B68B1930135B6E8850E48B1774DF59374F3D
3EE8A9FEEC2E976A4A267E2861FBF0E240E975A7254F6BDE09739F6DCB4958EF
3E73AAD44352C1601FC60FB9D2A4D9E0EB687AC613F52C4EFD783EA3C96B1EFA
B3B5DE64211EA2D4E8D9208B5548853E56E63102CC3909566DFEA75DFC79EB63
30B957F4B596A44FB985
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/UniqueID 5000789 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 79 /O put
dup 104 /h put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F656
1DEF13780383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D
2E927B848A1EF2BA15CFBE57A51E3AF07598275195C9613041F71C1AF39E61F9
EFD5F6512FBDA76E29DE6B508F62F5CF9F73F5288DF1C7B0B82C92D3B6358BAD
EC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E88BF20588A39309C2B703
CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829A6B954D8
9103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E1
1DCF27EF743FF90BF918AB8C4E5AC35841E2F745480E5EDE1C1DEAFAD8D0018D
2C1F1CFCAD9F6609859DEDFD1648A6CD23D8ABB80747F94899F17C8F3E6CA55A
E176F19CDFDAA0D7C920B3A72051A4745560AC81978C92459EEE5AFE85AB247A
32981139CBE352B248F4BE5F73503A084A3E91F05328EE521D9669E44E202584
5407E7846F9FEE3D54EA18FFB144BF2D6803BF65AE402034B3CDBB40DD24217A
3CE0E95E2717CACD603A958187C42B3558AA38D6B6390EEEDD396F96E6041FCF
6F8888221AFA87EAD79F46E0E32CAED91E6C8500879AB6E580C581E8C8CE9B68
2BB5EFE2604E8DCB2432D39D75EE556969F1B2FBDF6A4BC72D106AA7CF22C268
464027898B311613E06E1584707F262F71D9F49D2149306A88E02BC60BBD6BDB
EF41D90F19197BA9AEF32B5E63D5B9FF41B5602F9F786E76621DA54D574981AB
87A72081EA05D6C6BA940EFEBD0904EA4E77BBCE17E20B42E1722617E0F6EF32
F1ACDE9D758594E9C81049CCC10605A27C2A06872FBA9F159CB155609B496ADA
4886F478E44029B5E620DE8319E257697E93E1CDFD27D560E2E4D34507020E2C
D9FF06BFA14E056D81DF701FAC3ACE4BE6C098AE116E079F0044391EC1661F6E
7A93B9320BD7F91E8FD2E8EB3F5CAE997D5CDD35107A1D35302260D1499B8B65
39625B7925F97D917B66BAFEEA992873F07220714F192839948CEA080BDB9A03
77B9DD032273DDB5629CB28B5D8797EDEFDBC601823E038384C90C79012A7D96
8F27784DA15BACE21501C26E3AFA5DCCE81B52B0ABAF71A35D33103EA86F2415
A39A830D559C5C6CA7423945BD3DFA942B20A06D7A8D8671F9831DBB52907AB4
4E54776D29C6085CD9970B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B8827109
3BDE64DDA024D67F098D6C1998506DDFF7907ABAADA1C39C759C850E0C6F8E89
A392D1C9329ACFFA92D361218D75E115F70A47C53B73B356D703E9C499AAD098
AA9C8119EE9E9708A9EA3049E976FA19AD04210D5F6092C7903FD155113F3A3F
269B746560F70970AC9F8D09956E0E84DACE4112C4E7C7F6B3F0B63D26EFF95E
2B2E9699D16BC8AFC4AD9113AA3A974C9E82E877288CF71E9169D2DCC61AAAA6
C536E5604EF0716F6487292BBB677518504B52C63822BED3BD5FD14EB41EE6A8
AD4B6CF90D39F98E12A765B645CBA3E8552FB9A986390212CE119E7C3DD675AC
17BD006144BEC534DA2A860188619F17589008409C5A309CB83FBA70F6446B6E
2B56991B6A03B1DE10C621591CEE45BECA27C54BC8B4F1754A9E8F660812710E
117850E1BB6FD89BB13F8CE391C43DA89EA67E9C3E7A4697790EA26B0E4E2E80
DCA508873A7AFFC11B8C02EF86C2316E8D8B6BCEA37F81A3A87546705F070C3B
9D4D28C366CEBC1EE485B8E2357DBE46E86C87B9939DADA60888AA9F1B92FECC
CC1C198DDB594BB70A8FE690ECAC21A414BAC89BF019F34D2A130F485EAE35B7
2A10C67EA3A48A4D9734759CC93AD85C6A570500AE5AC9973FC76EFA06BF5DDC
26E20E28D16B50957EE01AF2653F8D860817967AA5A9BF9BF7ABCDA710E9F34F
4F0EBCC32B3C9C2971F6225D2DAA6A451366B83F32B2ACB83E746D365B2DE38D
C1AB7447FE7B37F9630E410E5D8F0ECE74DF46C538947B3A167AD9F3E4A7EB3D
60F5425AE75AC3A27D39311DA35696C3DC7282AF1532E7AECE63D13DDA0296A2
01487185FDF1875AEF55A36C17D6A8DD329279D229259463A2F05CB7A874374B
E2320E1F6CFECB9C1CE62FF468C29751ACD9754AF1EABE8E7696C2888914416E
235B6766F20FFBEFF285277B639A51EA2F2E30D207BC891B00F0436008F980E0
9EEE7FB375BB069B9E0BA11DA951A99D8E60B4F920A0495C247FA7DE904765AB
DB5C3B2D634757E43EDD6FAA4DB3C67F82D6853E1170F0B2D8CE496DD4E72B0D
28277BEF172F1402959F64527F9B640619F04416DDB9D05FB2ACD019CB9C119E
E544D24EA6DAC5C69785394EA50E6EC9AAA9E14B904EAF29A733C6D7942B63F4
85729686742F26DEF78DF0DA1CA7CEFBB684F4CAD99021A3B3D1FE03B9C5A4B1
BD04CAC89BB91B11952A2B17A61789BEE0C54B46C03FE9A1AE73D17CF94BA30A
237C29D414C3BCE8E3E2DDF83C0BD59DCB66C4D2C3DE73DA8378F3C6C8035D28
7464399857E57651A53E9C4AA68DFCA91B2376CF98AC5290FDB9BDAD9EF1604E
9B0A70EDDA1E564B6D2456E7BC722454ACA8C4950FDD44B6EB9AD01169A9F845
B06A0DDB7897C847A5B1F42258AECF3807AE936C8F52C3A7A0A85D68160AE442
FE81543DA6702D76AB6E8701F80DFC1D87C961E350D0E52AB2A298B9E5908600
7E14D2A87309043CBF13F69AEAAB1BC239DEA88EB5176624F6046664B1D2691F
FBB2071D3706F97DCCA355A6DCC4D09FD35DC078FBAAF672FFDECEC61050A120
10B5A96629041303FD01ACCC7686165DED6AA712FF8E5E85DE33C4E7D877C49C
6C469A90410BAF60BE65ECD91CDC2EE7AC0CA8BA7B53865F26092BFCAA0BCA77
B80DC51DAD09C93C8DD8E43502B4B68F3D5918C3492196292447732BA90F5AB4
9F5E1D634ADE1CCAAD028DE5EBA9535F6FC5908DBD2D643E0A7E059C8C386FDC
E72659C0033F535C0D7F6B98D0335552D0BF3C6E302B672A5EAADFCEF81912E3
8F54E6FB7EC2B325125159713D0AC50DEE3673B9B148643727E94C80971A2E73
5E1E13237BE69C84FC039DCE02ECE2668AFD047F21A61BB94A9F498C9FE5CDEA
B274B40728B6F6CA9B6C15BAAF92F465B0D7311B46545CBA90D874839443CCB9
3110F052EB247B24B45A3D2FA6FBC7EB2A4BEC2A5892914B3C5EA3F4F9B9DCBF
6F932D95700E045B49E4B1F2C9D2A42CF39CA2F5A2654E6E8E6E92473D28AACD
5E35C6705EA728F704F5996D286BED433F976AB7E018621A577AED7C0AC0A84E
A032FE1869F603E6F20386E3A190A30A21EA886249ECF8CDDE2C33D73BA8647A
3DCA7A8DD9E8EC8D9A415D126BA38B6771C489DFC419303EE9C1B83FBFB3A0B8
97D64F30E4BCBEC24DF603FF3BF541E00D5804B6B6543D3D2B661CC551D497A9
9DFFF535AF424B2F3150BB39AAE8CDB306AAD37767BA10BADB031DC2FAB16955
EE78342CCC0E8B5976BF98F215461A8C6F63EBE6E2F1A1104662DDE53388CB51
8B44F3534853B8095F3B746A2459C2EF800FB1EF7F235EBAA9731E3AB3BE4369
1D3636E3ADD5BDF0C34FA80E90D8A1DDE770943FD196E0A7C5F1FAF6970B34C6
4673AACA6B2B5C12B9608521AE736C1F4B97209B063D991300ED5AF3D7F27E76
68E0B858FD8BFF86581E2B9548C691E3E5D9EC4D39C9715CDE86C7D22223CCEB
8A38C776A30AF14912390A7546DBECECD7A687D4F08646E57A12C80DCA022B7A
33399761A50B8E0ABEFA1163EDEC3DFB5DA3248792EEEDD894872D4E6814B4C3
548BAFCDE0CABBCDB97EC6D1BA47F2E77CC1389BF19D73661749AC33F46A618E
A665A85776545BF9662F2179D7BFD604FA8EF4700591AF3AEC647E27B24B76F3
133F9198DC15C1AED830E737909E43EB91C334C44BA35810007A3888E33F5DA5
B3B2C35481C648AFE630CC3E08F77744E401B2934E407D1EC17ECE737606B076
F8DE8EF3344F57495EF49D11580D6FB28AE0B1422521B320843B13467501CAE2
3DB93D7BB779F73B6AA30050DA74BDBC3F8DBB30F32EAFD07734A151BB2BAED5
C9B1F790059339B64BB4146470F30928C9A49AE88906BD6FDB7431A4B50809CE
0F67ABA01CDCC2320B0B097187B9299E3D80CDD7BB5DD5BFA7B28D924C5633C5
45A23CCEE097C41C3759C1FA8DBA0DD95034BCA89BD23FAC18C70093F40FF2F8
0FAC5DD4835F2DFD40540E9A9E9FD951A8AF2CB766597DE00147B163BACFB7E6
EFDA4DED594F1C746D8B46A1145E0E4058F5917B3F21E9BEBDE745EE72CDCA64
FB31EF7A2E55265F32559480E2B6726D3DE26FFC97EB4E3160F117E890C4B2E5
8DF310E6A728ABA85540F571C024F8DD58E1D7827FE97CED5EB31547EBC36415
02B8C0E10B7E37D816F01D56A364B8552CBFAAA95BC4BDDCFDE91CE0EF005B4B
7AB56FFB47A093AEDF0DE1EA48FC8103CA3CA1470864D2693E360006D05668A8
AA422CCCED20DCEEBEA5CE0DA1EFB00FB93E922B18124FA11A88D0F6E0F719DA
57603DD5DA42E1C56C2FD9E5415AA199D4F334C151C1157E75C107FBBFCEB706
5F4EA47A29B54ED8CAEB8DDA2F53D2A703B95487619780A52DA1270011648A28
AA64338E04AA5B92C1EDF3D8DA34FA6D227A0325EA6F22E9B38B6338C657BB21
CD4C582DC04010330F62923F817E4EDC6E5C0E6500F2A975A8A95BAA30C4A134
BB31B5AC45A2E7F6E9CDFC810D41344C4F606049445F8E93D74271C1E29DF7CB
5459593BA28AECF64D903D3E4D77CF5C04B06DE44A41EE4D9FC769854503AC85
69E4A5106E84016DE3D59865D4AB30BD6C9E45C45DCB5408421CC50CD6179C85
34E55CC70FBD8FEFE9F1D5160664981716E3BC7F24B6F54E0323D9BC4B692971
24419EE62D8B0BA726E2B4294A9A76F328B8101DA29E78BD5C4AC383350FE196
4D42DB1653637D19530124858950C22F1E9CF5BC07D46B7A58CDE19CC88DCD2E
7FE4EEFD8AA6047E919823C8CAB2EF5274F45E861E6508CC11A8AA90AED2403A
B2BF1315C2157B3B50A3685205D93E40906EEE9DE5985405974BCE0B84BB37DB
080A45C5237B269B93C0A7CF294A18B45464A41F604C494CBEF829A381155CFD
71CEEA54CC39EEDB6DF58A9896246B09F95DC6BC40BA6916AAB5ED3D24F66154
3662F8978FC63DA9280FF7ADB09EA5BA79D3B66E0C88BEC1EDD78DA93839073A
A4D7B0E627000C4ABA76C47CCFEE92E319315333A5584A951E34C55412049C4A
A5569FE65A006F77B416E0530AB6A8E7AD6C72340AD4CE25937158FABB2153EA
281E1D840206F5DA38E00815E9081F81DAB9FAA8F4DAB305867AC84735DB4F52
A36129929BD2084A8EA37BB6889695204BF7290B68D5E722540BF8A276F8BB6D
451D582EE59D2FF03F6B97DDE05FA00C3D375D2D0AAC8FE298F85CC067B15481
48D70B6A0354C705715B891915FE8EA45244677B9FCE81E72D66177E309F3F83
F744B9EA9E55C3B30DEC6E5E03B3988FD526A82A5E8E1DC79127FC62B2FA7949
B3AD3148868DE22BD4B5708E32CEAAE6ADEED1F463EAB9692411E18F8D6BF391
126B2700B4CF3B59D02E3F8795130C96285A63FCD1E0F647ACB1D35E9C58BD01
1DD06BABA00CA4343BEBEDBE677E053E9732B33A7495DF51782A07DA07F5646C
770C957AD915CC70BA8E08BE7A1F4E6BA5BB9C603E38F6FB0A2578471C4D02F4
283069856D926B9076EC73AA39CEB0A061AFF1575C7093FDAC9F89C3DC06EA45
06F3C2A3BC9FF21128B10CB758DF0F099B459A5264A8C24C098110D2BA1A8532
8FAE146A91BA7D033F591AB1A94B8A6FE0FFB610F698D216D58B4EF6C87B1524
8037CBB7E23D8550A620341C6625A1A2ECE7CEE2598D66277F857231A36155E3
984F147783E9B93975AC38A29F2FBCF704C8A04AD84C3E04A12D2321FA56811A
5B6744813CCC187968C5C26BB8D3E6615A912FA5369C01CCF8C0DB790593B190
1A90CFB5339B8771F325C5FC448D36C7312B11A15A8635BAB59CF3CAD176131E
026F6E141B2619EF7F3048750CC9291397F141591EEC8B612D6656DD34DB54D6
DBDD303CED74BE76664E7DC86FCFEEF2001C9DBA56418FB61F589566A47AF36E
C94671C5E8939AF9F4D53C0DE7142B7B63C86AAFA65877EBBB48C64589AFB2CB
1280AC099FC48058855CBDEB6C2D2A0D092267996591DC3B5EC8252984E9B27D
2E9EDE8CD8303F0905DBFCAE497DE1B755B924452CDE11CF4F20893DD6FF7251
427F520FE00580DAF1703FD968E0F8ECCDE618E1EA5820EE6CFED97C78864EF6
26FAFEEE194A268F24249D44829AA360D731C34DC285501E966A959180718F72
6330E4CC060588A2F65AE64A720DCAA818D49D4440F5D0B6C1F6C3A107E12445
F1BED2D3FCBB87A9597F01C7332AA79143564056219BF87D4B907A04F77621AD
054935E883B2B137D3D1C4BC792E8335CA08B6D83227F35736C41312A0BB077A
60FC6488C5E02FD51A10AC113D4EF70038C649C1677B2204A77F2ECBE9B3C341
F4126BECBCA61E3F3801F9188A3775924A62D30FB096B440286FA655EBA00A74
9A4162904BEA07CE68EE76018346DEEE20839C9A2FF71179B58E1D4AB30856B5
F5D97295A097174467010B15D733AAC5813CAA633746B430B1AAF9F997FDAAFD
436844D1A56B8E25A89D2CC4BA6EE7ABD167818FD4F6C747E07B262C99EE2C35
323F0B471586CA50F54C6381B052B15B0C58C19DEA82C0CA29F00400B727419B
2379979CDCBFA966AD513FA903160C571C3BF1BA239540B11EF2371A3880837C
6D6CA2F374280CFA1586427AE975A2AEC34244874E4D441DBAC6CD1828841C91
069AA87FAE849C5DC7C9EC1B9876E59F3CCDF8BB23D939F5348D7486934BFB02
CC5A22541ED352616830A510DE7732E5D8F7E785BBD31C2BC9D348CE5632654D
2C1740F89D57FB2AA1FD8FA3304EA03F757BB8F498ED98E48485722E78D97B12
A05F3A28438084D1CF90AC4C3FFCD7B3365941C45E1E02CB13CA1E99F7FA1D00
1C9D489D5C95F019AB4CE89FA3B6604473DBD2CE8E278969E0A0FCBCE68C23F6
9381882443D3FC16966555FC222F3FC4B1207522201AB7A15A7A6F22CDC9D392
360BF4C95DAD35770E0AC7E5EFF015F2C74ED7391F40EC94B8D1C163B5DEE5B3
911A20C2625AD3B24BD94D2A42405E655DA47D3F94F882CA2F479437B4E0BE71
8AFA4482C6FB270F8D05B4599A01403DAAA90C01DF3AA7C2BC7E66AB6AA833AD
FB6E5EE13E45CC7CE7E200FBFE639F9CFFF5D08512C02764997FD28368969BFB
0876F236EF6189BE73AD827332DF1B2EADEAC0ED3B939CE5BC3CEC78975FC636
44FCBC2CCF4396AC7343EC62E0E4F3DFFA2B880BF31D93ADFE201BE9CCEC8BA5
0B9B919E05B851E0909968DA259EECC6AA0743F25247978CC09C28C4F878E29A
5070E4023BCE95FE0ACCCC01D0EE219FA8344E8F6D7D4347563BF8AC030B9097
41F24D4BC9494915A82EE9FD37FBB6A46BF077B728FB569B1258CEA5F51F36BE
4F4D0F890D782E44748CA3FE8C8A515998371D9C7D2311F192B4B7E7C68FC6EE
3F7136714C282A2570FE591F247A08319CE9EF1E43274E4E57166E31A2ECA506
85350DA31AA4C33C9687F5210BA225EA1007C444FBFA2126769767E47A967884
9F6DB0D8239EF8B8D233DCF83C12C4F76EB951E69F5F24D03D0568C53E2E9A82
E4494101BEC6A45549EC23DB8597361619CA03EBE2F1EEE51A5BEA7FB9C550C7
8230F9DE2484D0B292DE482C8FB5537B05712ABEB67B7D62B6143DB7A1C8AF41
206F504F14DD921D63C229C8B7CE8F110BC4864D18C4CD499B20534D33C82222
6FC199D261127DE7E6BE6909BA17189DF98F283DA6EFB0DCABC645DB288C6C3B
3C1AB46BFCDDA190E9E93C8DF81F764359705D20D906FC7C9E269DF5AD446380
59742225F177F11CD02925F5FAB55B0D23D72E780E254A13EEDC22081E65320B
CFCC7AAE822A4A8318036949CDB4BECE0171484C6B5578C35B52438286A4519C
93639A20BB9B1FCFA982D1C6D7B1B80DB129B84D135959A86628C4F4CFB42C3D
379DDF2C780EE306C09795C5CCB48C6893EDCEDB5D32CA23A2D864B4FC42B391
76D2E877C9D142A35C8E5B121337090D126B29C5AE826FCE0D9C97D03FA54726
D9CAB16A21296165111E160DA65043566EFFEE1B7CB378B6787DA64A51411A0D
3844E66EF1E98347F5FAB94C07381C121EBB673E1E3E1735209D08BFEC8BEC5A
056B52474FBA89C9067198DE7E2834AD53B228B84DC7D13D45F4CA06F8DCF32B
8DAF6879338C7CC4B2734157D91FA598E2397780EA8D021B58F613FC2372A8EE
7CBD332EB57640CAB4C46AD8322AB2BD73212A01216E64F345B042B0E8FDF159
B205FBC46F8874EAFBD613354C2DC9A3985EF60814D4FE8C801ECB8E960C9A59
C64A677622E63EF72D499029DD3F1AD0800152EF4CB90D4F2EBECFB4BA419849
98FC765EA89102F7B802410ACC2F5C6F59C477C97135FD71B4E209445C841BFD
8B350C9A16FEFDBD14B53D540809C57BEDBD3AA295C33F0CE91444AD45241FDD
0EA9F35919AC76D0C2B1699761BBC786DB122DE2C7A12C6071DBCA67F9BD8367
E957C5322D69B3F7FCACF1E4FB734A624A2A41770DE51B29DF4DE2B882FF2D34
3C0A131AE7B5D711215D7108D8505E82CD86B7F54BCBD0DE09B132545B25D145
7EDABA94C665FCF07D12984A9DCD03428F7BB6604B6EF4AEC357D2A28A8A2495
36885042D248CF0E87885DEED799CAA683602DF269DA476D5EB8802524568C4C
34A133B30EDA68E2D511C5E0821B939DB21CEE20FB6C25B59577A0BBEE83908E
20D93A9BBB477237EDD1006B661D036803987701BFE89C7DAA8E510BAEC87101
343CECF9090EC3033AF1A238A5F8DD3F0C6C949BD49185698771229C3FCD922A
86C792DB2B7E99E5186AA5E7ED0DD916247A1A5E18E68DDC9CCD627543E5B20B
C50621709AAAE0E9A48585E8C9B3D5DDFE73628F85FAAAE722B0F0964D1FFF7A
C9246A0BC45E577713CFEF7454A0766DE6719BE0310CA593464D93210AC822AA
FF17080C130EE53738BDCC0E1E3F7CB70B2855D79FB310AFD4ECE78B4B160F59
3EC232ADB685C543CC7BB1478600B1A87AE31E6576594DBB1FC83506E68F5258
AE3EB14EE184FB2E4A9BDF8D82205940ECE3314A6426C8F74E2EC84410C908EF
01A9DE3C940EE93CB0B18169F047617F6FEE16E71AAE3DE19E06DE24B467C1FA
1043D3F503E135EAE63734D0196F4C6618F2B78DBC0FCD025492BD3D8EEFB28F
9D7219191ADAD6C57DB6F8C1EC55D93632209BA9E1A94751A52843EE90E5E127
B7BFE4EB2B83C3251D080E7BB409A6E4FA4E0B744AD198C47E91F85CAD3B8FC9
BD24E4EEF29155012D3CE3B56C2E88241DF08EC15F5C59E4353C929A0005CFB5
E5E32533B70D1EA0167C519ACEF5084C72BE4A72107808D487A510D8E1B94188
7F96DD3CA51D318F3D76BB39D979732C00FF7144D1F92EFA0CF64D518DAB83EC
C061975F267C1A8B9D479FEE7DF1508D48B52F151917C90F98875F287C9218BC
8DF73CF09D4756E7F2A8D94BCB81A759590638382DAB3926726E97391DF1FABA
0AAD468F21554AD8419F59815A0F5E3A3FBE40E8E9CE97E4120022BAACE29E6A
F217B522AA5AB4AD285296BE6E520FCB82047D585CE6FC23456FC32027A090EC
0B7F268ED889E80B7A644335B5266EAAF1ACB85312B7981267EAB80457216798
0C04571DF3B24F1777D002015FA81BF65E31EA4E4A634EBC96C2924D4B4D501C
BB928375C6A5DA29E6031F0ECE09D462C0E1E8AC70EF11652319CB328CAE9130
3DACB0235367EE1F50EE72DB1281379FC2AD33246F4093F44646FA2A9AA2FB3A
D61041ADAA67F6316653E3146E505C4CB3B0F357AD420EF5AB2F7C01EBBF7025
7ACBC824467B8F1AB2ECAEAFEF85CADA3B92569E5D654955823DCD666158DF10
78E3D79F35C0E98ED3DA3EEE0113CDE5CE558A7463C316B41DA86C5425284E8A
B73910B55DC0B288C8CCAC111993076C265ABC941EA21CDEC42BC082478C3111
90152064E4CAC14FE2DB841146C992B22FBB0F98E92B7CF8790604ABF0972B3D
D31E81A820B3D31BDFD3D7D36CE47A383C91924393E19E41A1C23001A415D697
8EC8BC028EA86CE1C59A10BA7B657DE842AAC535FFCC9DA49532719798E205C3
095D223B59DABE97C5109AE0F1CB7DF64C1ECDA0D4FA3A32225A841F775F3FC3
29F0508F08EB2BB336578F0DEE9422BAC1DBECC68F093B149C7B01ED48586AE4
5323A96C03B7AA2D91215844D28AF20E98C993DE94B0A092BE91F8D48FAF807A
9FE9331B2D4E68D9EFA6FAC076224B8FA4EC590BA29F188DE1F0437E59573054
DCA728D415F2E2527A821EF5AE7B5D4F8C2DE30158D394DE50BBDF3B48A29CE3
BFFDEBFB654E58E80B874DF6CAF35FBF18B35AB04BF5B04C046E89931A0B5CD9
2238CBC2A416AAED1FA9528565436A8772EA3C9838F898D5487D32B07C66D0C9
902EACDFC7658C361EE32ED0A78BED8B98F467DF574B05043CEDD701FBCEF718
293CCF0E03E5B9E695051D217C4845B63769310A0DF81BDB400CFCCCA3D89DA1
F67C9A49D1055309F4D4071A1528FEDE2845A80838DBBDA8CC982550C4099D72
9B1808B5500DCE3A2E4805BF092DC7286832103AF5D67D71F413524EEAFC7E7C
811A7C03D015AAE4F8ED4E39C009236D1026E37FC5A72733DBEA39337F24740A
ABBC2C4901D274D3DCF49E37C577AC62402208645CC0F886392E8C6048E24E6D
B1354500DBA01839CC972F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2AED1652A132D66117071CADB8603969B3A2F97270CF2AA8EC2AB890662FDBD5
00EDD53F16FD0CE199660202373E2EA28D29245A4AFD3A63695F6178406A7234
AB0C0FB1B19CB408E047BF014BBEAF4C9C19445C7819748F082C19E6E355EFDA
BF1C2DC348AC0AE6777F679E2F62A0A3EB19B3A5D086186E1DFFF295171B38A4
C8C604EFCC29A76055C6764C6176E2B23333ABF27FE159FEFE89CA6E88F43E2C
8BD92C3919755C48B4F711372AE3B7BB1090E9EE6F645318CE9E4426114DD821
D76C17C8DEE7C01814EAD64D2956CA4F5F287BE397934F27E5BC8072ADC6E6DF
8DE856EA8C28BC52DFF627698D5188E6C53D9B4DD0308D908D7B6FCD4DB7B906
1FE8EB6D5FBAD96B899ABA41512B3919755C48B4F711CB9BEA9C503929754D46
A6E52A0F5611CBD81BC119BA46731DEA1F51A6B8B34129911EFE4715987565B6
0AEBB01649B1EC2C98500772D1B72B841C1691C07BEB2428FC6620FA8D49CC56
ED7830BC4B0C52A3A0E98FC71CAD8DE69654E76C73BFC3C79DD8311101317A71
126DA51FC9DE6D48E415F460780114F9922AADE2E08846100ACE0DF6C8A5F1D3
A018EBDA0EB23FC58F40B8FA1D9F0DF626C7CDC2B1B037709082441C1F660824
F380EB7C076D56D599F468223E890CFC41B35628FB85163B2E2D8FA3A874E3E0
D7AFF8C1985D3E84859784C43B8945BFFB9682307733EA5C66278BB2555522CA
0A9A323B07284EC86E9AF0940122E026C40C801B250151863694616796F40B62
B18EE106E215304B3817537F7F723DB71C007992DBA8EB7505D378E7A35B9B2A
0B3AEC38928431566DCA04123C135ADB4B265A9CA8F5246D4394F5E7B6989942
BC614413A5329CB917586239310B26689B504B0811D58534035F86D8DC90118F
B900C1C276595EC53C23E5613341DA06644DBF9DD6EB00E8A4A5DC654AE6858C
AA6BBD148396592255B9236F2F772A931DF5398D8963D992814FB13FB3CE66A9
649B48F3C531B9E7F0A02114D2DD2FA07930DBD2415B9E41AD15D37A7B46813D
CB6DFF83B87817453473C1A3D62F01674F76D44D8B3E26800734EF95388C9A9B
6D421F0A8E4FF39CDFE2E07EA9A09F37AA4ABF2ACB9F99DB14954EE15E8878E6
3EB87AE86D01731252C235A0BD5F077D6CBCAF81DB6C4741C1AAE031351538E3
FDF1C7C041A7AFA6E07C0FE6C20F78D9DD4BBB4F979171028B07EDD4E6D233B3
ECDE34A0457AF559E7ECE798B2C0E98EC83E4393F1A4CD3D5B2E50EE59D27C66
3600211FAFE2E5D356A7D2FEBCF8747E9C902924DEAE80B6356A4F1B01317B6E
BA40ABA62CC8D337CDAF603A8419121DB3F27C3C319B01BBC06199C97A4B04AB
706326F27A4CCE4E45C986BF23EE65882C1A6F56D28A1337003ED3511AE91C2D
DBE92CE6AECA2793EE0720A46A3C405A525B890CEF87621AAF86D94F01E680CF
62C627936B7DB42AD345C4AE4B9848ABC12CCB460E7D37F4F3372D997164237C
BF81B19C88A90DC989CBB9CBC9FCB87F33982750A0A8166FCF517DBA7AEA5697
39F406C62D5FDCFA52190AF2F29AC249EB028D3ED2A22F2F1753149A5B95E3E9
C8F74C22BD2C302E2F34E74A85BDA8DA7CEEFD9F117081C2403FF0174F3C59B2
A879FE85E2749B5635D8B74BC265A040D82FD93AD94A7F9E941AF83903F23E24
659FC52CD8409EB18F6EDB196FBD0CC733EDF3924B42E9F4BCCF70B27EA99E3F
F89BD0C4AB346C0DF5E0FF230BA0A58BBB4F9B47E76FFA83F66A05539E57A8E5
DA0E857FE5C615BCFC7951F3DD1B5B0979AF7699F12CAD17C1ECF528FA549CF7
273293AB153B6EB6A90954B3F0109D300963C6A558B3AB2327F9F81ADE51976D
086E2F8897B804F4582F33B2E19893422BF29EB079CFF2935FAF1442E04BD06E
F4BEF5F7EE872293EB7FF1CEE81A0B2AE7CBA9B441A993CA6CA1A8552714D58E
55018A126B0CA16D819B0D008C88AB8BFACEEDC1A6AA5369AFA3A06B9DFC3762
72F27B376E1925814254AA3CF8774EAF0F764C18AE62A96BEEC1BFABCC94B994
B20123088A90B808BE954876BE250F27C3E6B1E4641B9518C240CCE4E387BFCE
3AC84734E4812956947F06541A91BB942FF755C041186A36E19DE6FE1864B09F
3DDB3865B415E37089E55385675538A67C6E381376E0DFF4F77E0EEAA2AFA8C7
A873D41AC9B8D4DD0497D5D25B495E4208E6F5921E3BE1FB84A967CB6EF8AA3D
390C13461CA595640FCC07C0D076CD688F6BC95685B7EB209B1F7DECA7B3E775
5554273438376A4CFEC4BE9EB45D9E9BA2BD92FD6CEA20D0645B9C1A7CDDA7A1
02ECD80D8177F46D402E381CB34F5F1F607D193C7C2BA8CC0B06F82CD4752268
77AE32868881F2CE08DA57F5F05009B59039B6F283E93EBC9DD422F3A76806FC
C3EC2A3E2D768CC9305D97131317B56F28118FE068999DCFC6B530F795D7CD9B
3A48A83345A5AA55B4501870DB47ECA249B9A48E29F20B13A8E7361F1CFC6960
D8A714F4B999DCBB094848B0FBBC592036FA38186FD3A3227A14593B4E7D8DB6
B847233F09265FC8A52C814A5A71375962DE5BC0C8CE3F4836105E7596345143
BF5881B76F6B9F1680317F90BBD89075BB572FE374E13D6D0D2F8E673125A3C4
0EDBE5A794BCA1B143358C604EE50F2E1601A80300F9D117124CFA8AC90603CB
22BC8CE5449074B23864C72BA4DCE071EBBBBE7C6F0110C4492DD2FA13124611
DDF7E2AFA021A6B520FC5EC5E2E1472F8173BEA43AFAC357572172909F83A188
FE8E96787B486372A9BEA6F824F4791CF09EAB3049FCA571DC9B9D7E703A91A7
74D02D03081ED3A2DA967F679AC36DA3A50FC727256EDDF7CD6538E5C6E61442
0D48E29A5254F685DE0658217E0709F11DEAA8B6C9EC5C3EFE3CC89647CEBF27
2B8097C583993654F72ADF61C319D33C6784A68DABEE37B40E58730340A63CC3
31EB0D2323CDE60592E69B016EF46D105D23FE61653450393E1AA953B929D71E
6143968ADC99877F21A60D08218CABF4FC0E75360366630D8595A479136E7E39
F8E11D0073512563B3C8B64C271FE72558332D74314D6BDCE22F9E6DC2AB4134
66D9825F68E8EDA46CDA472A6B71EA991CA8266EF0082EB835F0CD531C3AC57C
945BB57494E515BAF73B0629D84EA496F5A2F07DD632FE2015A43C41B8CC4995
8D04120528EFE8DBD63DB56487D0E51EF76655943FC83B0D40AFF05F398CDA6B
AD1D1EFAD567A9DCF881C15F296CB47A951D52DFD39D39AB2055CC55CE36C3E6
48BF26985985CDE3EDEA57226C0698698A22B08626D4256EA14DDE19D11D1BAF
005D697AC98EA52B03CAD89C2B329FA2DD1416B90DAF47D6CEF380CBD87A9191
80BB1C118696855FE3740D2EF75E07A0995332CF19BC795443A79C2933D67812
9D4126D6EC6360061975E9C1BFA7CB4B664069A222047F85261D9C8411828185
4C2D997FB6DF7F2062014EAFF8A7BA0D99B6D31D7F22CD84CEB845B9E641AD81
B6E95CD300FB8BAC14BCD363F00EF7BF41DA1E9064D8D7A3BD60A09F99A31C07
00A1A9CD40DCBB64A09AE0C70F71EA41B09265562C5143579A5DFA9776E21346
2D964ECDA76A6F84CF8A31002A3642A14D75D58C07262CF9DF11A2D8D15EAAAC
A5838755BF76940AC18B510A38FA9108E45FABD792F1650C9DA892235AC787A0
45F42105E2552741E00DF685C5F4295B8E41954D3AB911960DDAD57E2C15A29C
57560495CB508D0BC3C6980FA30A7BA508204BFE91BD974691905DB7DD7E2AC4
06F758225C48CF4482F8CCE48B16BC3CFF661C14EE0E4E636D118C53B8834047
6ED1702F2BE6C5D3432A609862D008021BEB961D5E557E0549EAB28261032D93
8E6733E4EAE1373FEA78D1271B67C142B0480D059CD584597683FC097ABB6668
A50C30E9F441EEBE99ECE100EC962D6169ABA4068C02DBF434F80AA0518C231B
E351B24BBDE9FADDFA6506148FD59027E58BC8599B794A46D5BD374DA3EB8C90
D78FD7AE6E169EE35FB2F2526471DF9BDF4FC6606D4ECC2B150D6F7F1A36F6FA
6812D6AB1CD9CE461C4A84ECDD3B1ADECC6F3035CF98F3DD0875720B22EA855A
8E1DDD42E0F4A12EAC51D9F10ABD5173C6CAB947E3C8949C19C52F175E1F7BD6
53ED2B6396390FD4EB1C37AC63C01B31CDFF8301A71569DE1A7F8668B1CF5949
6CAC0FAC82003C7AEFE83DA89BF1D0C97E8851C7B0FB3EF77C31D0F12C8E05A1
4D1013AD60C23DD828627F6ADD73F104ADC6E132FA988AEB57191B5059542A3E
AABCD41872ECD6B2B511870DF086D08676ADD2C7B16E252564EEB2AC00BBB7EA
ED7ADA520ECA003A7F2564C2588A42F97C89601CC55BF96AC8030BA58ED40BD1
F17F088170B20AB70C3BC6BFFD59BDBAD8337EE7C6E208FE350CAE8E3C7237AC
FD1B7D7E8A23213C2EE333FC96DAA5F7CB1C9928F1BC02738EF49F41DEAA1CBB
1C98173F3971F85DB2638D0F8ABC469B9DBFC30A70AB03F32B5F735270CF75A0
DF243BD46AA8A623AD7EA181F7CAB10C1A3B5A46516E957F7B6949C31B89A918
A8EB59A67192BCA9ED39AF602DF7C20F7A3ED744A159631B5A2636E1430BA329
22CFBCBDB5F3E82B66EB64D4253F83423ADC8AFDCCA5BE6B772C25D6C2C47F71
F12CD7F7739CFB81D489B18A4AF92F923999FABE4DA10289D70CAD19C54AC639
959C71C943AE700CF1B850573F3C482F0670CE76C4174E8F9115E7343418DB14
351918A106A09916AF83CC04157B4A03992D365D3AFECE3C81EDDA3FD60364C4
43F11A0766537EBCA1C9962AFA0A2DE9C068B4F5D1DFFE0895E0545BF4815264
7CC63F1E204611E2DBCCDD76577B8A05D99892A3EF2D0C087123F772A797A358
7D0D8DBBDB5BC504772142F4AE53EB70B79B743D739404CD322AC95588747C0C
8D32DF346A8B719E3419A963E1E7056BAA1540BC374EDD4DFED6DBD462A77566
75492942036732175D1FEDD742647331A3D0FC1FE5E95BCC1D25FDF1C39403F7
C94E859D327C4F3DDA6BEF4D962463D8C8D39C7C1BFB8C8A73E8E7EDD2E28AC6
83AFEC522B9E3F0C10D27AD83B0F3658307583389437C38FD147DE0F4651EC93
45C49A4CAF3FED3D4B61AB3F414D47A4767FF9219C43E1C2A0ADA07A6D362371
AD334161BEEF673FC1C3554DACC0755ABFDB6F1D3EBCACECFCEA078E8AD95585
DF8F0B1D342FA4D9E87AA8A75ABA229336A0CA62A32E1ECC7D82C0701E590D72
B0C60C94BD32ED5C38FCB1B64DE999EF9E73C7A24D0754D363CE33E46ABC370F
F98D040E1FD59AE6DFC960F9837B0AFE83D316D92273F6A4ED8D7094F906F6E4
75382737835F20F78A26CDBEA216264532BEEC60B47668324396A08C039FF145
E6554D786B556BDFE4EF453FC1F7FDB34BB23B407579FBB3EA700D51492A3C6A
7F3247A48E9A4F9E1360DB3D4A0177E1E15D64FB6D735C1C603B2E1372F50724
72D0ED10192729D80CB87B8D802DE14B6E6526C755ACFDD427CD58900F37562F
B1B21A333EDE226E95E9EFC8F9369BC12D12358C700E45C0B245F64D28C98CA6
003E60D68EDB8B0AF2094D3FFAE40DC70583D90CEEB3A58131E2639286740A25
73CA01920455728926202CC84D5935D59D3FB609D548465CF04166ED80392401
9F6FC7121CA18C932EA516B9F11D88BBD51099CC265A34B78CE6039457EA3259
5DE739EF60A8769448104282D70316EF26C5AB29F5DF158606D3BB45F7229061
C3BF0D853B0FA15A4D58626CBFA2E95E844415730D9844A3EC91BD018AB6EDC3
8CC0C7DE962B098B8A412803911E55C0660A201783EBB77B398A2E464E5E234F
7BC082C16A28D35033538A9C8FE5A365F33F0E63FCABD727CF3CE3DE874155F9
9EEA29E4C3944DEF6FAA360C0C92CB2C0A4EA2A7E31D85B24C4836EEDBEE9EF2
3AD1725890156B0AD8B1E9F81AC088F0FC67D0A2B4E5EB08FFE82E51CDA25B72
1147D117C1C81FA995A156DBC3E2F3B5171DB0FB4D766E299DA2EBD3ED523188
F2714A900C8FC54A17EFCE28D4A1ED9011D8FBAD3A616A04018397119441DA09
A25CDA3222D218D7CA2C2CF48AC93A4A9829310B03F4F1E8B3B3DB9AC9AA3C3E
5DF82BD363418D669E2DEA922E5012CBF4191F762730CECFC8BC638E62BD24C9
DA69D4B09CDABBC62EE4A4226746710347FF1339AE85EA72BCBF619926A228F2
D867E0922F442B3953983869C301B9B2E183772B616C212F12B0F4C876EEFE68
EAEC4269F846888316C2C2B2954835F31F09B9321538F67D01830788DD1713D2
1AB62F79E8CF744F0A87350E65FB9BE16BEA0C49715F0FC692025B23846EE9EC
D0C9D88E3B538E857290518697656D780DED73C1345BAC63C8B7CD1791268BEB
3EDA524114389D04A0BE04397FDDD0B0573055DB8FDF8A6088AFEFED93F1D7A6
F1C8DA67F0E93BA471487360F8760E53EA4387F0054EEA68771D21B6AE0C2BE8
C08C068010981C5AF4A9464370A7F334679CD73DD57D9ED1AC760C58B028110A
D8A411C5AA17C50F37A1D1795C3B50FA8CBCE4E80883BC1A35899FA186FC0FAA
559B73EA431BAEBE7031B1EEC36625C05DB704E8E57DEF86C464B4E4EBEF61E2
0EE49103C536225F1BD285797E93467EAE750F5C321AC0F8CA354B9453BF27A1
4C92AA3E8E4953BA5C5CF92CD71BB1BF64DB44C299DC47B409439C8018E18ADA
14BAD0E3EE1D5C9736DB0A54DDD8D680A5357DF554E9EE789A01DE7AE677C787
5D3052D025B395C44F55FB178A9E9C9561EDAEB7C97ADFBC48F228557065A896
98A6460DF97E7B1BD1608CDD70120F2ACD4A19AAF3F5E35800FF380788EB45EB
846307616B4504F3FC6B709883E165840B7019A6647005B2D139C3C73AD78FF6
BCA3F0F0A30DD0D1E3334BBFEBD747D032BD62884E1E5E79442544BA88AA12BF
DA7569998F2BC44D716E671BFF61A58E6ADB5CFEBBB85C8C091FFAD4E072B768
2B68774EEBC0515915F9E62F0F1E213AA07123EAA4C9CBE2AB269FA25D9A1FAF
4D886BF6EFF5CA6B04F32DB3B7F483753C33AC52A68BC65D49F80BC1D072F36F
1842AE90E2A2D8384E91A4B32A12891EFE2897AB11AD7FB81C17A5D467C167BB
B910F4CDDE47E12119660FA472D59E8CF92996A9E28973D2EB11D361042D5DBB
100EF81C85FB5D0B89CEFC684CAD63275B57E5E378DCE28D1A863EB76F8D3168
76B2DAB9E1B8C85FE9191F52A914AB33C8B20FA18BBE16F4AF702F6197A42205
EBB6A57659E71B54533A2CD8B6A94026B5500888EBD47386CBBEABB9AB7AE452
218AA0F640CB529DCFE071496CC9E12B10303B627EE2558E792FC8ACB8AA0300
69A643D1C0F96F8F37ABBF42CB8EE1F13B03E50E3E7CB70B7937B73D990DF549
70C32E97668F61DB6379F898D5FCBD792C86DDEA4A4479A96D6BF58CDCEBD3DF
5FE86035B309562527875F0E2A8459F181103CBE55ED9762A936478793C7FB1A
DA3752E456918C731B36D2C26BF8C01B781857B060816FA0D1A94BA6D5DA9969
CF30C0CA204BC5F45424A33F3D2EF6803686BA901035DF5FA763D8FC3BE87BDF
A494766F7D2BD021388C20C67AB55EE7A24BF9CB66AC1E0BBACDD601B2EAFE1D
5DBCE871FD6A1BD2B71848AEFB0B755E50D0916EA414DA0E75851DE276E5BE50
D8F4DB4925210E36111403F34EACFF17E976B3DE3B68619EAC161C6DCB11DEBB
9418476FF717768500F89E41F2AEFAE22EA35CC0BBD8593EDE78E8E44E327234
F4EEABDA5F804F8CBC00199B1E26E7BA6DF53882AE73D48F92B5A7014307F7DD
13C31F12987A86EA06C5541DF0AE8976714C2DED156D12D7777D90B9299D4EA7
B89762A397AA51BBBFF6DDDDB6D90D1852C6803B1A3108F9C409B63D747C80A1
06AFCCFDECCCB65B86C4B3CA00AD90A164551270349C0B074107DC1DD9422B93
FCDEF9307AAF83C586AA62D5486BAE1009DFF826F08E85F8702773E963AA035C
39E64C51E2B9EAEAF79F0C139550E0E11D97BFCD7FD07158CECABA1AF4EE405F
A94297950D7896410A5CD9FAF6983A9CDEEB399D59216476BAB513042FD2053D
54830EA144BFCEF84A92F4A18FFB143DA452488EB0C5A4B5E8208BAEEA8F7BB4
58070F24F319D2766752CB975FB4DC2CC7FBA9E65D2B01DE9845A991D66EDFE2
2FC391BE254535015DBBFA2795CAE85FD6300D6E3B5F05803082A52BC2F4A1B8
55BC21C6290C9D9043BE9FA018450F9F9C13AF2614DFF6A273C8A6E3DB318005
918BA5F943078BAD56BF9892499AC1EB7F53BBB8D7AF4225CBA39DE6B8E09DB4
92916E42113D4862CAF27AC0788879C29DABD4F0099B6000522B9B9F14D6C6FE
76EE9697D9C5745AABA2204242423CA91E4A20E2504C5ECF569A991CE225F05B
6B5D931FC6C71E7BE09C89484860DCCC00076D10EBBBE1AEB1C408E3D41BF71B
83D6388AD8474B79984444803F62F5F458FF22CF0DC49BFD7BCA8C7CF6F93840
AAD5128B0E01696E8FE1EE6113A24D97A021B996EC9656895CE52E6515B3C05E
0910A33E4CA08708DEC61B57163F54099C5F36A0357007E6C7619A32080D4DE8
4E052DCF456C5B7DB7E6A42D4788E50966C5B389A4CB6D8D7CD65944B86D2508
1E5E727AD04F76454ACB8DD4A7B6D83F99EA755AC4B79FF95492643D952069F9
7966C5527D4121CBC6B5E4E00EB4924C2FC3B6948E545A58F05C607AA30F5E73
3B2A015BBC519470DEDECFCD1C028C39C9F455E5C8A00A4AC3E65E671D250A8A
33FD6B3AB2F38A0AB8FBA427F884B238553E3B4A060752697E3773AA6CCE391E
31881FF016E0E5C78BFB8F020068C0DF4B83A1EB775861C67F94DDE84604C74E
39E2FB8107C8E3B13CBFDE8FD1427DB9F56D9A1DC390C37E8507668C0DFE18A9
F31F6C24A444DAF675BA6DD7C4E943FEA2081CED3E04CECD47A1B64F575ADAC0
A09806A74BD5FF99807199466535E36A32AE916A9B8A32EA4EE3656D57EA4082
AE5372C817344086288931277ED96E88B9D53C5C600EA6FD7F46BF5E615CB87E
F63D64979E7129C746C0C317DF719DF478ED11924184DECB4C9CB222270DA3EE
6EACDD5F1E7E9221AABB5A8C5A160DBCE5144AD39230533AC4FD7C2B8E3EF47C
E73C2B3D5F5647B7EA1BDEBA5C97FB6F1F1CE32F90745AA146B3A5F5CADB411F
2BC2EE28FA47214B23F62076C1300815DCB624A248F2B3FB6CCF3472F52E7D6A
9F89A560F82E504AA55CD984C398767F90A5103C79CE72A9C5974197D7F89FF4
72F0520FF2B93F49004A0C6BA822110D2D3FEF99415C8F704AEE5978AD0026F4
C77E514AB5D39270609F60781A342660B58199C35D1DCE788DB3275DEB10774F
964A8691E4AB597092B01476BDDD7FBB934C8B8ECF20FB69543481F5D9105094
0D0749D88ACA3243B6685AA5289079A015A801153BB8E431A2E0A89B62E5D668
2573CB9EB3D76ADB3CC3066393AC77687F3FC96583845F07977AAEB7F09C01B3
802EB30C931C8D48A35751344387EBA978E3B68F338228657C255BA0EC94D7DC
91CECFFF94552CF4F8362AA6CF517A4ECE39D6B0466F32F370402791DA19E42C
7E98DEFE10C2EDCCEE7E4DFD1D7407D993DD62FC32B7D30B624D619831DA9D7F
B8829617A183A000752F9E0EFB7CA8A2F8719FFB86DD05DB3702A66861865CC5
2EE18D9606083DB6F319DD0AAA8F3BDD5D5AF706F0A30AB04A6007EA7760FDAC
2EC6CC46DDD64C1B0A6B0E9A90A9D2520C5E3DF68AECB6B10E4EC12B8461296D
A026903733CC2AFE28D4824F07ED247F9FEF9198F6E791688F9A5321CA27BCA0
CA6C0DF9FCD7810848BF73C306EBE151B224CA53D7831E4502F9E272C2244316
AC6A151DA17F243328AC452A7B701FAEB5A52B7889594E034D0AACE9B705BF40
66A66A7D35CE19C7691338F1350777C30819BEFC0677A7533431CEF0B63AD35F
2B335B8B8B590E34F92019F65C33A90156C5BA784FAE25D0D94C26A785533CD2
53CED3A9DFAB5055859E05F514F0C711BA8FDFE1701CF4F233AB8811C77DD43F
E6DC4BAD1B8F4E916540E66EA62E0D0CC1353EB34DC30FB9EAB4F9CADDF4D5F5
A59D7926992399F7151E5BE8A5A47E5C8221114DBE379C3F63E47E54D3809A57
CA311C89832E3BC8C7D6022E10903F517AFB909D9D89BE6A3B2751C99BC6B3E3
82A70F97C16D3EBD82C25C9C1E779EC6A3A49F0A69621E4871F44D404EE8515B
30A3AEB46DF0CB12341F63034D58D205EC840BE6FB4D17BBDC1735BF58DA9D71
B9FB776E47DD5B9D32175D24C08C50E640F142635ECAE246EA8F48416B3827D2
115BBA2AE79343887CFC2C30F297FB83E3BB74712530D00737B9500786B0DDFC
759A8E4A33D47C08C740D3E37B4AE9B920F30DCF7C8C5427D3D8AA776939B4AD
0B6CE67978F7C54DEC1B12E02A9CA43B05C5DF7EE470118EC07CDEF52E3D7822
D3E65FD188F6692385F3FC70ADA65DA5466BE97833C49F765C56D886A1AB2834
01F84123AA55AE5CC689D58B7EF6EF14D88AAE81F9F78417FBBD28F30CD2EE32
FDB8CD92880150A674E7ABBFBBE90B4E858978CB8A889915194E35E532976755
AF4C96B1BB30245B5D09FAF5012035693738D6D5778AE57DFEBA3AA021F855F2
7309A07334616CF09FA19844F288E7EE5545FF35D9FA141C320F0EA49A6D0DA6
028D43D61CD399E65F8F139E28B42E0B81525729AFE9F9E1CF288299E67000C7
6D33923A3A45CE92737E9B808401B63FF4E3C4C373A0D8651D66630524D6557A
D1775265E2D3204BEE66D1394959F75E46394CC1EDBCBCB3ACBB1143F7EF1619
64DF85A68A025DB834A8F1297FFFF66DF099B9C0B438091CBE525A87671F432A
6B760E4BFC597736CF0F3671866169AD7371B11877AF4C7AFADA5B9300EAB16E
5325854C7634D3C6F92F98EF8A89CA70289ADC405C5229F8254ADB76DA49C305
466C94A8125A57AD5ABD38C513CC756C595F57F0532AEB4A78282D626192FF2A
604B81B8BC4D8B7A079A25DE2575EDB2965B6121D0C839ACEBBF249D54583FCF
80F36FEC46B855A31F1F24CF3A108230B907D850B983ADE420E87770CC2B9F7A
ECA8F899EBEBFD5DDAE1628476C4629B0B18CFBCFFFF3FCE0813308AA3FC3CD9
A83BEAC661F9CF287CE995474BFE8F65BE4CC71CBA58BD2BD310BF6D3EBA3EC5
F4184628E60B207592704845DC76A382BF55F37379A412C9887A62AB3FDB8507
C5F4218471CC31831C15D36BAC85008EC43D9EB8803B3FB57B054A7D8C4DD1FF
B902A2A5CE7917CF82E206127C6F006AA347C399673C342CE07FE2EDAB545F75
F253EDF8F4E82F0E5CB5D15A8BAE52FED0A5C66E050866D8E755942547735A18
859D3805B311987140A8C9F5DF271782AFB9562F013581A38AB555A8B48CC61D
68EA3BF1C747E56B443A5CA09D59631C5811D0CC797927334DA4B5C912B5AE10
C3DA3E39276C1B805F87EFDEB06AE8CD380764AA5BD6568FA6D74C41075B7561
7AF04DD058BD9D08587033B45D1009FFC2D8DE4E7ED31CB57DD34A4A15F79E2A
3C5868967CA3F072A9365581BA67A8FCF7D56CA6DAF19347613BBE87BA8B0EEC
47D6AF2C27F47159E9294BBAD06C85EACFFA25D8118C6B75B5191754AF8471F9
CA6C8EFC3A475E54D20E8F33BA78DF24F73468D70FA2114F0B75C35519638983
E741C485E0E842E98453B4DE6E88624DC8637579CB2AE575BA4D6E6A2F947573
BD45CBBAD5DEB052CCA688C4FE67E5791652CDFA248DB6ECC1A6193197DCC58F
35200CC742279F127D2341A4F5CC6356AFEAE19D81DD37AAFF3041B76376CEA0
5E9764500204B0849EED22AD243D5760FE91C11427A923F4358AE474F8CED084
77AAEA6532C81E5E742D0A407A6A891B24BCAF37492504F0102DB2D11FCD8E97
A57C6C1CCD8BE2D948AC18C44A482DB1E97FFC65E852031E28306D2067AD2F9B
62E5ED42F3C0713364804E2B2F402DB5503C6ED30A3558A4686F340631FADAD3
B622F6E33282849BC5ECB12B28D3D38302FF7B2D0E583B394496D92AB9B7789E
D78D6A6DB10A533DDFBED91745EC170BD17365B80B14D1D5B79A09E28E17DEC4
E613533B409575B3E54022DEFA09B84709D1F4FBE97B3A3D0A1395083C725DEB
147A2CFEA796C2E2E25085097B3F071122E1224711CAAF606E63420CCA6B7FB4
2A9F0FB5C5008B739284295C99192AD3F0E078B8D484258F73E10DCFE81B069C
CE647EDAFFE860279F8AD0C5D4C9343FC7E6C72759F109F373D0401235775277
1FE5D26DBB07CB0BD259926AD26B41A842F17A112D498EBE5DBA447C6E1DFB78
BDE183C5533491D6331778E12352E387DF3A93CF6B4FF2F80363BB5520485034
EAA6C91F153D83E3CCD1AA4E733D14DE6823A3E684AD74B621082510EB21C97C
9571E1F76F84C2284A752EE8BEC4EBA9161179BB5D9BDD01799AA9EEF5F326E6
7154E5F251B4E005B181AC44F07AC188300EE5FF85A4CEA883DC83CB31E4D8EE
718E77DC53F4704DE007F7049395A7570B564BCA5CF7E2A8E7449093FDB9993A
0D9088B3D469023915AFBE60337ED85FF4E9C81CCA88E37829231DF2D3424563
D4CACAF3D643ED1A3D313E1AA64C0749292A22698FE929130928764C23FB0A47
FE7671D0935C19B64E2E38F15F1DE32B4567BFBC58935125C92F4DF30E803B04
6115909FD2B457C7EA73C73A29B095B2CD6C1AD5DE3ABB4BB1834685623D8DE6
EAE2D13831B9514EA545207537C5CB6B9807692457D3A316C80870FFC394EB43
B1A286AABF03C7D5B699363BBBD94FB3CA83A26B366FBF2C05B99D23048DA61A
0B62A47F3D936F105148A94BE496529152287EB07071536706F003057A015CA2
B1C8621C9768A573A28ACD1F07951F58806A6B47992EEE6F6F245F917EDA7F13
A87E0A0A585DC6B2A4B997CFA7CED5D1055F348B1980C73F1A6B568F4FE1BC4D
9109F8DF3F5CF1A34287D505CEF9828865DD1F7D4DA01C3DC479937193C476D3
74448477FCF73861667E239A64E31C5E20101BF5EE87B7BAD8A9A9A059E0825A
DF85C9EA06465A14F8249876982AB6253D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/UniqueID 5000769 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 67 /C put
dup 71 /G put
dup 73 /I put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 85 /U put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AAE0FFD5C119D11E5D13743E28D843B0F2EE315A2ED05A510CE53A2D06A7
0C076D4B6BC2B6A928553E7F0FD472760167DB486A777259FA74245EE37D0125
47314DEE4B29E5D22180BDB1BDA7D33406FD340DC3991F50800BDC90F7678EF1
1064986DDA53A77FBE2EDD38E20C41EF86CD50E8EC167344A3F3B3C3BD83CD80
87BE64CAB701CAE55ED04E201294267029C013BB9AF45C67B2A446CD03F4E77F
F280D7E0747745A81F5C07C956A0F02BB0720A4EDACEEEB3F5F9B82BCB01902D
3B404F96479D9F204E8AF06F4FA2C0F869D4C94201B1653A3F52D51E2543BAB8
89D73344A6976D3EFB3C47CD73DA21B53CE2357D6D45FF5CFC82DDF0898DBDEE
10B47BDBE7DEAAB19FEB39D484DD0437B9EEE148E4201416A2625597B0B0D6AA
03BEF3D80C29B43B5E86768623ACD5657A78ED5EF7594377D24C947F07DB8644
9DB4B64275AC43D82B37F6914137DBB2776E7BFDEB47EA8E3062B3FBE66E6E1F
B87F36042CAB1DBF3B22A1147E91D2AC731AB2C128BCA7B06BFAA2268CCD56FC
8D214953C20CD3EA06A63224CBB094796CF35B02E38BFBF4EB4EFCA3E19D7FA1
53CDBE47FE6AD6B159F22D1740093BD188CD1BF4151F00C307803FECB06E3896
EE3DF77C20F0EC81167D4B9A0BD3BBB795E278B1EB4511F9E6001936983490F9
0691B45D1E94F641CD22218A451CEC4627F0AEE9E672BAEC5E86296AA6D36CF2
58C7DD522DDA4A403B0249D843FF9AA924F041E26EF61D4C80E4D6146CB5F5BC
A1E781BF0C874C4E1AD8CE988CF82293FDDB55BD8721AAC2F00DF496EAD537D4
E312DBACDC100B5BAFA55CF289C6EDF2FEFED7C5662F138D571DA0C331049B5B
C38922C88B463A7537BF47B39D18A6D6690FAE8D68234E0B222C5AEC9AEF0B56
67FDCAF384AC66C90843A057D9D6845D247E411AC8D2CC2EA5FD96CF79DC4DE7
3B51A72BCE86EFF1846F6C76932C3699B68AE33B1C90648CBF1CFDCB5FE6A10B
13B95275B705C6ED1080CA1FC41750E03674E0343207F0FA3EF6AD83A5929151
666345BD46D96CCCCE9AE65784C78D5E88A7685512C52B5D6AA1326D04CD844C
1723DC08D67BE2904946C02BD063152525B2A26AABC235BC863688B43EE4E22B
ED4793FF715EBDCDEA077E5C093A86EFA44F12B2ACE2ECB23609EC87080F36FD
1E37132FDFF7DEA052ED46F04712FFF4A03AFD4D150B9A8494FA53819A50FBCE
0361EA71B2E42BEC2CE295E887338FC5AACB2D343BFA9A9F4150BBA0B2A27264
DA98203AF9CB5E93482D38F9E85F549F0158965D4BD283E27AE282A763A08C97
28B8D6FE747FD1FFC76141C1F59D6B27C19D65B3BB2B3360E04E46FEE1796EBF
F74F56382777816D48AD7B0F0476189CADE8645FAFBEECC16294ACDFE5C95820
C4EB48AD648DC78F12CB651053C57DDEB7356C6A4F65FD2A7BB15919A6145631
6DA47E044D1E6512EE35D97BD1CD9D2BF47025BE2959354ACF861419B1C92A73
DC4312582842B63EA09D5DBEBBA869DD5F210D1D830872F618590C9764BDA706
9AE1ED6C7C2A4BA578D980378C6C10AF7537EAADDC3B3626A670B8385C585EF5
52A5D6B8DE90C761C23F1C07C7DBA3E19527695AAD0DB6425DC679DB830A52B7
CCE043E0B279D9E86268E6EF20A6E14D7FEBF8A5F13ED3D57530576EFFF33057
6AD1F8CFEC09B89BD943B49ABF5434B74DA83882DD3DE3793EBE240439F5FA17
E30E752296D349AAB43C232B54F3EA372B514594F541B502EAB02EC958D73723
D6EDEA6A090AFB64CF5724004991966FAB32BEDC92D7B4A5883690AFD8E4E896
715B51956371B6B3E45B40B9105DFD5B1FE8CB0B3E852F1525EF65DC47DBEDCF
C392B31E4F584AEAC64554596216909566030BD46541C632168AECBF96737530
D9B2B3A4310DDAA4634C2D0ED5C87A462FE9B0D9DA07410BC84265B163C84A86
6B3262F68D55C024E7BCFFF79F005E5B1120AAEEBA7B2A1A397D0377D5E19C77
358426738A78768021881AFF92D56E58713ADFCD7EA2E166D8971F4C039F3940
1CBE261A3E8FA17328E12FA5411750EB68650B5FE5828030958A6656372F932C
8A5E2A4873E50ED208CAC6341650232F4DB4389573B0B860C1151ED86E0F0E56
099362DE2D2177A8F790B10CE040280F4830C7323DF0A8F237542138AF64C4FB
E8B7159EA825164586245EA2F1FBE5680A4013CCF4A8885A962CC6CE427F3EFD
DB0A5E66D27560146BE41E444CCC321C27085B7E0F78E80046FA3DFCA1A42591
9DE81174FA65BF8EAE499A19857064871979F87D08DBA2DEA3F218ECBF803C80
D310E21C78BC4401B18DBF6CB1BBBE6EAA891E88E6FCFA1F876F21FA831C06FF
BF6052BED2F086E43313005B7A5A42602801C064069C7C50391B7E4E4592D777
78A21DF7A03E73248110082B6DF0FD38FCEFF48F51AAA6FB0E51F12B6275CBBD
49A1A130D0FD2342B21DA8D3078DFB922B88193C03B1DC23B6765E214D22FD21
174E8B40597373C612E87B27975B9D80F72F52A5CD1CB395FC7302F1596526AB
A8F5056F32F0C65992E8F1F4592D61D9AF85F2091CFF8A98C2AC5FE3960D3A65
A798CDE78C36D8FABEBA8C87CAFA2BC0A1901DC5963CE1E43692A3A7762E1655
EBF7F91C2A03576EBF870A90EAD1E0DF468E5C15908B1C64F5F05AFDA8F89FCC
8DC5C58F9DE5787AFA60109B415B6E91F24A9D0D89E7AB371DBF35BAC624A73C
D47479D6ACDA9B159BD9FE75FEA2F03229EB22BC03B7AD879A9541A36B18ACD5
0DCF99119C8F6C1360346859E7BE9D859A8E37A29B58402BC2C231A5D8E3E371
DA5008452BF8EAEE30006C3F4A70B7156E14CD441D268412185EB19829D1D45A
813AD3192CA6B5483EB2AE326EF8F77586FA35A68E32994BE1D83381609B339E
BE55411D9D9772B56791F4868DB5F34E7719202C94E02B6BEE95368F2FE432A4
5158D47885AB49AB692A294B46AFB2A4EDBBF58189EC58D4D3641D1FE747F7F0
EC2A9DADACD5348F73E75AF694EA8C62E0300559793F224369254196EBEAF92A
BC974C9DB3E19CE7D1F3675D37DCE43195E7D451FAB047CB70EBD3BD4E37D282
8DFB197799AE590B92C475DB3F6C49B03C6DBAF6D629FCE9FFA1B5770F839A42
5B19F1B16BA788A4B937F5ACBE3B0A48E72C9284FCEA865D000736965F7BC959
9890C661BAE459C76FC8646066941941E47D7670DD3E388829BC3DD4E2376132
ECDA1070F5F6116291E454187EEC90EF10E45A53FADF56F09424BFE03376EDC1
21A9321ED690828BD9947B46E0C01FC71C0E654670460C4AE944BA31F1CE98BF
81276A750D0F74D96994EA2A0505A071457AB3AE04875DF66B3247E9F18741EA
7F520526E4B53083FBF0BB303C171B1E86CC84E97F135D863DFB8D967DAF76F7
4C31CA76C9A63F7D9FA0399EDF18DB3A39021A9C3011F936A30EC78BDF174185
704CF109D04B1749391459BB3BD8E8BD8C7AE7EA9BB1CEABFE54A05281F76BC0
CA2700082EE6B6974B682E6EA09868CF0F79F3F8F60BD4C91D65AA1DC360318F
5AC56D256A22B7B8AA7714F741B94B4CC2DF3015F71E5155AA386166434AFA93
AA8A2318AE4251F657E38CEC11AB63C199D5786A4B894EB458AAC26F043E33F8
B27EB7CB7B3174B44B4CADF7B5D34A23F49CBA9B809968E3FAFE644C5F97F8FF
16D4D47D3757BC101BA29E89EAC55161EA97E641CC31C99FED2847DC8569B848
341B0FD4EB70058E22F9D8FF9376F158DA83E621FE381698D61A57F62B363D32
0455FBD5E23426EB18EF8CCFBFA5598507227337622D16A708FBCB0C33F38A5E
6CD3C8CBA40121BA5F35308F72BE72F7F52DE1031321820491B82C2A5B63978E
50C7ED5983B76B2FE376207DBC24B35D7F224249EE08889C20F5E0A14CA6EC5F
AF3C4E1069ECD82B65394EBBB4F926553DB299DB8AC6EC6EF612777FDA805388
B043EA6B23DC9919429B406276DC4A4B2311C2437F41A8B7472568C35D4130BF
73006798F848D907E4734A03E1B2787358462E5DAE83307A760A0F42808ECF97
B17CFECB3057D7B7DE7FF432027A3F484031062ECC5D906641D289ADDF24576D
14744367405F9CEB7E76914F7E9B41725355FF21E5D7B995C535EDE59FD86C9F
DFB5F75A86FAB991215A388A16455793A27A5B11EC73367ED243F4A732DBA634
2895ACB88AD47098369A7220ED4019CE7DFA1EE0385B6DB0274CD1F4D67562A8
D889F9B1E02CAA433DF74D36EE148AFCFFA0B7A9C33A79D5E0890407EA4780D9
B43526FA844930853D90BE54207C89F57476E43F5B70A9E28A2826EDA08D8080
D079A2E74FC4BB5C395C3C7694EB4FC02B4900D08A1747700E27D5B661F51D85
4125FD6141B608C21FF3C78352EB1A2A8D9D9ADC956DCF56BAD44DD4962315B8
25987E7491F005B3BB2660DB2C815783491E3D6478BB8CEC0EE206DA2C6CB86E
D4DE187E263C09CD954F681F24DC7157B00692736B9716B24DF4ECCFFB78B67B
1BF264936475C49D8A19097B711FB9F0F23B10593DDFB4C9908B25EDF54E4A99
1323BF359A972C6DF412C643EC280FBF37A2D95DDF51E0AD3F4A26B5FE115FEE
979AC7261792DB0B89249E71CCFD2EF70E3AFC0EC4ABE1A3FC4991B448D8470E
BAAEAA485305462209D64A666EC8C166DFC91841D1FD98429EC9C00CCADB6995
354A51CBDF7C0C9EFDC2E4E061969F86022E36CB26B06542EE6CB6A4F0EAD32E
4994A7B26A8EA165EAD27E2668EAB9028D360EE17FADC10B7ED7A18FE3B5C264
4BD896A2DA022B3537262FC05B495ADB1F6E7C90293853A54445FCF95286309E
9AD1794B4B9F96DE7B47A0AB54BDCCE9315EB8B5A747C993928D9A777D4B7596
B621968B8E916F9E679E014BB7127E27E93BA8F0F5D8D1D3C9BA251FE6A031DD
4BFC0B431B0486657C9875D22373802023DDFA16D715CED4C1771166580D24CC
DED7893945B8959B50CF0D38DAE128D69E8471FC0867D0CA5BE0C3CFECB2D3ED
3B04EC80A6FEF7CE265CBD40ACAB77335FD14673F5A940664682AB402592BC2A
A703C4EFD0AAB908941005030521CA7E37BDCD510310677C706CE148FBD4381A
9E877FECB6CF21447761C34D1759E830C3077A2428BEB3FAE26390DE1B3B7899
65095BE7A3BD5D2C5F3260D7E0B53772B107325B249CBE75EB412ADA7387BDF8
3F58B4AFA70C1B531CBA96F99C9164533688C98C95CF1631A4FDCB7BE22BF39D
DF3C64314EFEF5765D6EFD915F38046169954683F2A641E916692ACAE9C6921F
F4A8CAE55D625AE88F12E38B9ACA033C41355EF9FA621DC052BEE03339C3E1C4
F1CAE60DDD24284E3EC4C2FF61A4AB9B545EDEA4325F22BE1492FF3CF0D123C1
663349946E9ED172F12CE1C91B8DE5130E6AEB5CC186C6F22393FE68E74AEEC9
83F0CB26492CF5C6D10DAF15ABF74E09D93570B0CB3A534216D4EEAD97085976
3548EF6E4819515B73FE645B8714FD2A561AC3F6954360CBF4D4E8B1BE101E23
170213864E68C1B39892BEA16D3C1FF011283BB373BE2BA7256E48C8EE468FC5
ED70049138602A4A6F5590DC9D0F034F9D9401EDFCF1B3326F11FBF7239421FF
2D1DF7A53ED9AC6E4AE540FB3B6C7F58648660F6F98281730ACA32DA47ECA424
9B67ED3B31D70E9B093B86CF8F3C41DBEBCDC538FE0F681A7A1D4A955AE9D9A1
EE99CA3C12E6DE72CAAC4E43DB6D5C5916742D3E6AC7D6D5F27C852C97CEE163
AFA02895F7C09ABE93FDFB4DD2B4127B09D410CDB6B14B51A82DD48D8A64B7EC
57545E22FDAFFFD9359E51670A7BF16FD8AF71365F8219E34EDB7D9D183C3826
C72CF26A2272B0BFF8B7EAF65B2FD4C97C3B5E19A108FCEC68E32CBED4AF849F
9FC3CD8C733E7B1789A7CEA5CED976FB384AE1759999C60D94D3D04E534DB47D
4E2C2D7AE83BB44694E46260BAD6531A2632E9DDD7EDEA7F865F9CEB7199287C
8557A7607D8A89C44295BFFA53C6CA6B6291424ABF9C279F63624A96A36D17B7
E68CCC093D855AB76A95F24AA11343302FBA7514AFA0E741335E0688BA43B3E5
9A75494BB75A146FE81830BF9DF9C94C9E10948215EE3A6A64B56F5CE443F7D3
0F4D95E1815F33959AD45C2B4C8A06FD68CAA1371A2A0533DDB6FA6E8910F868
81A0ED1AED4A3145FF7D8DE3525776AF746517EC070F5E3D8830AF19B902A038
188D6BF6443153DA82B8169A8BF11AACA17061063A31B226AF22FDBB0230D97F
A1FC5666C61817D8E899AC1F356F9C8DE33B00B609ACD67009BA5736747CEF7E
9A9F5C6909B0D7EF2BD30F308853DD127032FCBE3FC0E58BAA2C488D35039079
94626DAF890E13BBF27BDC7C90C0A4627794F78E2EBF79AD721BE90772ADBE89
EB2229E8FB7E78031B0C147FFBADD4409370C433452DCE11B909F7681845B4B9
387AEB69368B2B5C2429E09FC850A924E960CB2CD0D44D54E9A194CA07AB4D75
054E80CF52380DE4C95099FF1FA1C9D26B9EB2605B12F51CC13B342A8C740112
D37CBCEF2659C2A85115C183245F1B733C177BB5B35840528E2E1F38549AA765
81F9B1E7EA9331D09329EC5341DD1D83A67282A488F48D3647FF2A4088590E56
6F2586E29E3701ED18CC645D73913260B57C12082D7F9BCDE7B2704D057D2B51
2532CF488596ACAF2535061A71F03E1BAEFC58E7D9FC3044874011F1A7B7E161
11D954FE492D886676AC78D317ED7DB869F44B80A5D4BA84F8BADFDADF717AC9
5C1A4807A8461FDDA172EA08DC15AFD746EC3C4441740B4B1CDA18EB40A3BD1A
E7C1518671B8D6440A28BEB55DE694E3972527A120B24A8D7CEACB0EAC6FBDA5
700EABB8810690214223827795903132CDAF0F730ACDC2A2590C71D2D248D5EF
7AD8230D64F28380523F92B950FE43AC791FF90E39762494D109A5A4C1683C23
97A9E6CA012A7A0531A5C075F304F9F31B9C99D515E7A818372628E9DF726EBA
923410CB75CAB0AE539102533DCBE15233AA99AD7F002F711F85693C5796ADE5
B14DED11E338596EC79C64A51FC74FD1B3F9EB3BE3605A5DF0307F5BDF3D5876
33F683FEBD162C74D64A2BE46D73AF1498598F5B48884A82E5BAD41FEEB7A5E6
AEEF9D53FA852E6890AEE0BD0064FF3AB16413BB6D0998EAE04ABEA01C70BE65
66FADDA3B1E1D24887477A08E0266295778EE60494B35C777DE830B301380380
1A95A1BFD937AD192C9E7E38E9AAEC0E9056D9F810CBFF29E7C24A7F0B0D36DB
10C9A72598F18CEED13755DD4B9242D03DB81DA7A84BEC7FFBD14C594138A202
FB903F81CCADA25BFE90FEE9C3A824A279EC1F5F7CEA196F6AE098E06BA63B34
43C8CF6E67
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 14 /ffi put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 53 /five put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD699
CAAF267EE06D621BC343039326854E4F5494A54634314AB366DE27190840E8F7
2EFD964B6294870255E4A960FA6C7DA031D6B683E0113647B27345686B6B47FC
9A546E782E9AB39DD2A3F56335494ECF66B95FBDA7EB2FB5896563404FE61077
9597A25E678DB4EE7B616DD99080BF793661236A0C03309EBD39951A398883FC
919A711E8E89195EFB7318D42CFE278CA6866BF81718901D53F6E6B6617DD00B
951B641FA734C93E9A3DDE30F01CD0131335457FCD38003882A66A4CF8D7B1E2
803CCFC1C9FC2B4B7752E461D1634D57CE39D8E1DB5CFB4C451D3380245635FA
140CEF7FB92E22D07071D76B34DBB96A5A57A7323AE9C2D18348DE00561777DD
1CB32951C3B41629720E21956A2E0336865660580AD6FAA5A61D994DC83E3B37
D07E571957BCC050B841774BC20AAEBD46DC2794D4A9A330C3E2E57C4477049B
393313827A43EA94DA0BC73701373BBB6375EA7AB2ED618FF3D6F45623D0AF7E
21A589ECF73E8ABEC3C69594738A42EC58B17BF3510521588C8BB16860D0BAAB
B4316E572BC8FC881EFF28DFE535D60FB406D50D759D12CDF589B9E6CE0D765E
96CBD0863A359B68FCBAADEDB4833E3558698AB2A4E7319B1F72397529484A0A
531AE6F494AC02883A7D08EF1F5A33B8BE57F3810977DBBCB650C95F7B748058
9E5BD1EE23FD1F4B14D9B0B864F9304A086EF5132EE19BB147F4CC3E27A784D7
657DC828448814EB159950185ABE396DAABCC34C0670E527BC95332D13B39805
49FA02073BC65A7C13214A79DA8062B02744A7B28A07EBCD3D9C9C2CFED765BA
27EAA6EBFEBD16F5737C7B7FE2E7C825292AE9360DC88686071FF45FF489C28B
63536009CD404634588559DD35BC40E7E6B0986C81098ACA6C8E1A94F6DB5B13
2341CAEF0F022DD19B9B368B0C4FD93AAC08FBDE67074624917E378761B50121
7E0852031A7D7F31B6D595041D0FC126AADC040D9212923F8948E5A8C9479E5F
85685735F0B0A47B75F63DC4559D32A3155A4AB410CCC9D2D480917571300552
57815D95644A1F6EC7E6EB24B1CE1E87CAB6B6187D2ED0CC5BB2D0066E8CBED5
1C8B271C03844BA0C2E035968BE6D54D33D88ABE642223D82A657245105757BE
84B599C63F29A672B27279036B72C900F6DCE1C04FAA4D893D3A42DFBD004DD1
920351A6A59B6E946FEB8F2BC224D1E618BCE35CB6D949F4FD9B13B4C057ED56
911268DBF04AF26B04B69FB1E640A4C09191F2A840375C3B8974B9279490402E
BA1C517C4D39F288709F39BF4475313F7C84B6388A842F52A16C3549B9CF47DC
ECA8F2FBE993592A6CE609354C2D51A2321554AF2252858B342A8DD95074F992
A7870308170C824F87DF893154ADC74D662C3886EBE89BEB89B0BE25E15A812F
E7B25D9B1B174C55498AC987C7573C1967F65C12A0BED1D3DDDD5DFC571BF080
8E5891F3A57DCC221CE80014F88714BF89BB29EFFE4FFFA20A8EE7B0911014BD
480F1A1CA16F2E2F8CC6C2E8124FFC39B550C5F5D8570A48ED5C632EC5EAAA03
0329A6237729292056C7DFA6247D0DAE07B0C348E16201B40407019A2846DFA5
2CEF48CE418758B96A72CAEE1495C40814C603E891A21E56A4D5F65F13730D86
C49854C8181A32AA2168526846D687D107E3E25139A05F0740082F569027B729
6B94E444B10B4FC04D741D6567FB070229C30877B40378154D5D01DE5990500C
579A5F6120E3F7E203E783F022D21E492B886DD05DAE28DB6B41B62566A7A513
A6C11F56B164F2798145A1FCCBE19B190A95FBF0A1121016C5A721202E4F2CAD
E8E9DC17182773E69F41DA6F3E09EB15624684256A310CA33F36DF5FD7E36597
E89FBBBF6727D408E3450224A56D276D6FCC1AB6581C25522651E8336D79DC01
1146CA2890959F30EE9BFC8713A50EC1B407F80BE86CEC32409D8B678572B933
865552B6B9F998FF85298CBBAC78BBA0A5B09E4132E2BF7FE56CF6503EAC88E8
B4F4DCE65155E65CA28B6D4440488AE7C9B5F53C6B7D2B196C19D5D0C9FCAB4E
FDB55516F44B09EAE1A40C7C944A6444BFF43C8B73F4BE14D72EE772A04DABBE
688CB847DB91EACA515252C5900D2A09727DAA92D0B63B3BF3D152898BE2F406
53E139692FAAA8DD10B4FEBC7016E5CFE112EF09666E9DC322ED0B66E954B6BA
29431DF68BAB821CD8636B2F07B51513CAD20576568262B2289B53CD9B972D40
8D98061CAF27C18F6865216840EBBC0D7E4421D35B8F1CCA226FC463637218A7
66F1C0D80B7D0BE7FDF955D6092DF84D4F68D408ADA08C95ADB3064AF2C7A8D7
ED624C4DD89EDD03764A03273B9555A5E14D4FA1FD5E4ACBA164EB95FF677601
A35722C36EB5BEFF34A6DBBF4E4BF9A7AE16FC334F2590BCEA3809CDCBB02D05
51596DDE2E04B2FD887CA074CA9832208DB69F8D98AA894DFAE3A14819FF079E
C2B17923142EC92AAD6136F1AC06A2EDF16AA86DDF06A183560C67ABCC01E443
2BE64E758C05FD384FF45C48E5C3E4D2BFA1F58FF9B60E1189D7BACF8C6DE257
8F32549DB4DF0C90A4B1D7332022E833AFCDE75D82341DB59037886B2318DE34
716DD5BAC48655F2324EC4B42F81DB73914AEF41B28FC74A248D37D28D9116AE
461D90585341E3863BC0621C9447600E90E6AC7243F385974B730FA6EC22C046
AC5C42CE84083C0C491C18CCDE758F39D1A3BEF49DE2FD4E98B9E987F29905EC
D40873F747B2A8C96CDEAF8149919A14ADF165C80E6A2C0CA9F9E39B9DD0305B
BF875D7087C7DF59AAF4C15CC8E2D85D38C5C26E8D63D5F535AAA48746AF37B2
9E8423737E06B6F67734BE74237F60CAE36E35E6CDF137DF04F1FB6EF0596E9A
931055ED0404B10E0EC8C4617025CFD3A13D2D1BA728E21BF4F8919D0D096D86
2AB1F5D8F6EB0626B1FE459E1EBD6857D5A88ADCCFADAB531E8301D1D4D1EE19
21F52675B73410E59E6C7C4ACB52689F3D0B5B858BDB2F3A50DA6E3F51043C10
462B2F87D21497C8E72738879CCFB180F8017A843A8F0B4CEAF7C1FF99465D35
0B141CE1CDCE78101C0CB1DBC3E3A1E244FDF19780A42ED36A33E9FF1E5B3032
3EC6E5E3EC364440233B905CADECFF5045C4FB6AF3248799F89E973C3B209D8E
8C12778FC8411D01C99596837FB64AB8D22107B371CE5B2E6B633AF1254822B3
585BBE9B9E9DC84F07773AAE78038996603CB2DFEA4506FB1CC2CF016E6BC705
C44D6D8E2272B3FEECC7E1B8F29C4FB1FFBD94DDA5DA91CD413D055E78EBAE17
7F44787B394B6FB8E0A1DCA3B1B2F74ECE5DA87B41B68945B75F9D8342670287
E52CE9BA4EE062A428C78744582EE532B0BCB48C1C475F8895C6DDBE3DA359B6
FCCEEF5D41105583938127C49B4054DE71A9EA8D54B4973F5F747E13FC843742
144C46BB4545585A18A67D32922E231FBCFCAFCB1F00CCF8D475BB24FA373D75
F55ED104E4DD2ED7D7BF39049D4EEBB4ABF97366B4760C1F2D7CB0657B961955
371E953B5020F8574CE0C83D60E2F6D3D178E03DBA1870812EC9175764E68AF9
FE2FF2BD0C5FCDA71D2F9FC755C47905D47ECFF210362AAFCA505D7FE88A4E7A
3EB215C17570F6848DFDDB808EFA961ACF185D4AF1C9BD393EAFD05B56FFE735
A4A5651543A11127279FF4C2160635641B0CB2CFBEF10493A8F32F0556019E61
D86570159B9CEDBD9496769CD6DF3B85FB696C84881BBECF840080C51CA6FD9C
78AC2A30963B33A45B38CD6A223B219D9978D3B9FA37E805843E62251D029F7F
2F3CAFC7DD736BB0C4879624730EB4BB1A96F23EBFD6F7D9D461704EED95B9E8
73AC74124F05FE4F113B620C12F1168F0CE7F78E6ECD00F78114E72D508249E8
46A5F847D20CAB0B16AC7E69EED4677D07A555D899E5C1A0400B85C30AC444F6
050210D5336E939EB40A8E21124166AAB44F2EEA849803EC5CBEA9000E5F0E83
97DFB7DB1649ADEF796DC4900268C4C8AB7EE9277418AE705CEF291677E744F5
48C19FB247A3BD3A4AFCC51198C18FCEFF3FA6A71FC346A1436957D782416D66
96AC8645E10FDD80D52109B4D00CD5932DDF2A34CA9CFBDBA9CFB64E42502908
F9F64F7077150B37FE1A3C3AE7C6F8B474C13D05E062FF90816FA75A7E07F012
02FCB8C480223FFB73BD2C997631093C64E5F9E5AD6C0D954CE341DB7B455E4A
937B08CBC2ED226CEF4CF5245911C212BFB4537240268A788B0311EB0CF132A9
A4001CA24A56DA1CA78A8AD61511F8DC678BF43D83CFE102C3825BF8A50E6F0C
48860CAD4DC1846BF0211F73C662D8D441278758CF3E4489BAFD951FE669A45E
CA9D3BC838887FA76D0BEE819D2E724158DFF9CF3ECE422F120F2B318499DEFB
D565F1F146F41CD2FB9B1BBE5F629B19473B47C8CF842F5F329413F443E7DE0B
BF8EF47EA4714993F7289BB15578246898CE04F0F8CC6D2BD2985C3264D137F6
1362CF6CEBBEB6247E53A4783DBBE6DB3FD0409C8A27C4ECBB0EE28F29A8DC7A
A37F4915162AA212A0E7CBBDE784393FCBE1F6E4D197BEDA204CE08ADFDC2C44
6BB01BD34D94CD137C23A80AB96C76DB3BCF5FA56B00ED8DDD482A5CC56C7B05
19AF27A2A5821550F440531D3E15ACCAF87D4E34D7BD0BA16DE66BD82506D55A
FCDCF990DC636EE285DCC003DD36A40517D530A1B05E7527C7540AD18C57C5F8
3DA9D1D8D4449C2BAB187234C4C9AB877EBA193EB868D778F6ACDD744433DF7C
1CE680949AB83D61B5114196D2C72621E71D5F292C7AFFECA6689219FEFB4997
F712A425453F9F07C827C558B78C828A5AE9B121E77D83FCFAA8C109CC6E38CE
F6CAF62B83752DDB81EE5DD00C49978B1325CC654EDD78FFA1AD3856BC2611F3
EFDC027C012652EF2593B196D07DDB11D5BDE67842255CBC7B527114DDAEFAEB
7CDF0EF7B4B43C61E0DD10D1F7C178AB1FEF300CC480C6CA373491D1EAC544CE
F178954D3D90F19D1A51CFC0D51BA89342D2929854C90B956974E28278A58F44
AA55BC31EB89DD5BB57195220CA0DF41894F4F1D7D77C3D0EDB0FFBDFB0D48D5
6668B0B1A978810CFD85B38148B895F1093B1A94BEA5F6178AC87191228CDB75
F20D738B6AF67791203C8263E0B257828EBA47228CDC16734CAE3F27D3181DDC
727FF186A10D7D390F704A132FCDCE2CABB3B9BD1496C7787B759B795D1078A8
0C3E02DB7DC08A45F33EF275504E1455750F4CEA1C6A16919C4DBCA6FBD08976
C70ABD7C7236295DB4A297CC04C5B91FACEC6CB218198E77E96AE031FEBCEE24
8045B4A1ADF92D04420CBB3F3B52F3AE89DB421D148A683D25976123C3094D1E
5046165597B5F9873C39990332523325FBDFC6CC020B2F4E61E319A6A33920FA
D9A7F743D24D34DC8062D4696902AEBA6ABB071185D232A7CBF831EC4E8D9734
078C07EF5717E4026310A825A3335F00951F1EFC6CDA5470BCB7FE5538C7F37D
712508860DD0EB8F6705F7AE1417D063D39BBE78F193CB604D9C0D3AD065E415
A34A08C36F1AE871096B37117533B9C58B49055E4C485CF681B692B3C81DCA45
DDF8591CF4472484AC4969B76D4717F12882BE058814F8536953D4ED67038588
AB7B64042581FDCDFE86934D19FC5678614B6A74BAFC3A480FD5C4406A785D93
F01D6180CD486BA4B02ECBFAE12F6925CC8928C9AB211EC89DE7ABEF6E41FC06
F5E3D7CFC990D3EAF0F4FB7CAD7C5D9FB1612B9CF8587ACFC3009B39005F0E2D
2472F91620466C700519187DF38035D3A53E892674B409B847D096D8A86DE4B7
883EDF969AF8D692CE06D9EC43B49CD6D1E825768B004D99F8CE9345E9894EF8
DCECA37A3C0D7D8B38F344534418B2D545170681789253025C0A22BC18F4678D
9FC1536CA2DD6A6C895195882E488C0E2FA7ED2410E1C5279EC9F825FE6D72CA
54E007A2C3A78F5C13614ADF6898EE5C9F70BCE0B92F94215FCA6649838A3B70
8280E7BC03A0FA4376EBAA7FE602EC8D1F263B23FD3B795598C3342681594A7B
965774C0F3474460A880FCECFD5FD8788E3D81C15192DFD5F7894CD65EE9D425
6BB06D19AED6A8C2CEFA375033BEE5DA50AF3290AD3F6C8792BD8C009A230CA1
3841C20D4CF179E79563D41A3B56BB16514E77E8132E674A76AF8B6E84DB0082
628288924F27F55417821445FC582925396EF97CE6D4C8CEB613D7321FBF99D5
2D2D89C688F21F4F14EBBE5F2C259C8A6E99DB66995609B4D5A29000697DF032
D96D90C76269826717B366BBC829F4D7284120AC806835E3599F8506D71FA874
843BB4A569B06086F267FE89B298B3AB92C5652E50CAA9B9BF93526E42C4711D
47554550DADFB974ACAD2707BB2D183DE9BF7C4C41A6E24EADE893DFC7CE4CCF
C2A3840C7A209A9BDC179610866856D9CE093F65AAC6188B128E96DD76F8D9BE
BD5FA7CFD167296D20DF5C156D93C1EFF9D7640F2A0F83974409F86C6943B9A5
470B7B5A1288F897FD80A8A5DB3EFBC4AF12550DB992821B51FF60930A32E6CE
1047F5B6C7190A069132BCD1A9096874A408C91C3683AAECA2238CF28976CDB1
DA1EE160913734ADBCF015955386AAA72B928BAE9E6C97A86F2D88DCC67A3A56
D8E917257C9926E166EDE0FC9E4FE62A303F10E08E4D4D8909CA6FE0D5140321
87519DD4F8717B80F42A92156C88A6E006097F31F7B91923F051BE1E011F3EDE
31A97F46226CEE30CF4E99C15F90A420D56449BFE89A046045023D71A773C788
52C38FE45D92F35D21EA6D99000D771EAA806B10DA2B3D44B80C3FC6B09DE117
1403B33263A55431E154F43A2D2A201EDACA283E4B1BE1C2D0D98F14F0CCA3CF
CDBE59F44F751EF1439DC5D54DB0ACA52EA75EA57AFA0B008DE26AE124673AD5
B63EC59802F880DF58B3BFFF4997349881C2283AE2BEECE8E71AB3237FC0E90F
B87392280EEB6EDBC5AE7B9C9D83807C8AE30A505E37F791B7857FB7F4633897
EB1E91A5F7DB80C3FF747459F6DF675A42A05664BCB5A71663B878C4E11C39B2
E88F8F53250434C7A23F94CDA0908AFD17344E31D68C292149CF46A2294A7475
5F47DF4B4EE50850DBA6E6CECD2381127F65562EFEBF47F2789F95F395E45E2D
3B7D68F9C1EE59EA9577EC7A94DB37CF46A57D35256D57467D09D7141482FF35
4713A7AF8BB899893772BC64887654B962D94E678B2F4B73F29173134BC5043F
D6F7FDF2FDF4017F947CCD694AF98196AFC7550107DE87CB92E86DAE3727DEAF
86B0876106EC37ABF91EEC257C5C3669ED4037D19835F358A381666B3F1F15E5
1F79DFD2963C2D214C7B3A3540D446D8102C2C1ABDBD7F1A6701E9FFF00BC559
BBE8633EDECE3BFA6A9F424BDEE01A3CC2D7D4519E5BD2EF4BDCBE8DEC05BCE7
B59C9F92D67CC04B549FA1A623A7BD8858B063E5A93B01068BD4C5B0E84D4B03
7C6D987085E4A777B9D1A4EEF6FCE0E326C37E42F9370A828C3C743F8DECAA25
5AEC7A05127F25E75F8250586B91C3E792E5BCF1662B4B8B8BDBF8EF99F35933
98AA4B402570E957C22E09DF449B3D0604996FF0295759A11799260A1B6D2206
3A121B4F86230EB1B4DFFE53033370DC4B784C77A157E124BDAF7BE85209555A
B000B802AA1DFB5747C677E3B719169E67DCBFF8D8ADB1116E4FB81DEA63C60F
875DB684CC0D72FD42C41A47C4AF8C819B788DDF5AD3B80E19A5B66FC3F8F1B4
8524F85A609D936448E078776EEEEBC3BFFAF7D3A228B4407BA6B45B1AA7D427
B44A16C3086D8DDB257AC7F031A5EB81A73CD87F250D2272C376385A94117919
F6D448171AA56D4CD25B71BAEDFA28018846D70571C27DB1D5A3FC68B72C54F0
7B2F11C0092B75B0EC9256D57257D1C6CB2F9C3B4DFAEAA79A607600FDF59F03
D49A151FDB513582C5390DC73F7337EF583E4C5DE9E45E140F4E3543D1B8FEEF
48D4AE05E9A2A4432B7BB6308E7111A37E9771C101F7C282CA73D44FBD79AC23
14B5D06ECBD520D1BD98734B678C9B1AC0E5CCAC9F792B24E188BB88C063467C
6B96FECAC9C5C144B78C14F9574DA5F97B6FED4200194E3ED8B8E0926F89F5BF
7FAEE259F7503F65CE21B21A4772D76E0C0FA9C0F46A37E36C6CF8D033012C48
2D37C85D5781873195E4BD409BD45D3104949D616CE89030AFDFDEAABAC3D2F4
D7EAEACF875C83B1465A7360ACCAFB470469798A7A59C1D00124EC51220AE52B
28FEB3B07BDC238C75081A35BDDA2328A6349B5231B3AC4CC2630D902B97999F
D77087F4E5B9EB3E1DBA98A93907760CD84567E4A7911253FFDC9DCA6F04CD51
09D9477EF7F0640BF588148B108D7AF8CBAAF82A53E64793639E878EA0DA19AC
1DC941271FD298134DEB6B7BD8A5B4B6D6128EDE9C5555CE501B74D509B23340
4FEE9BB55DB76BA1A1AACF49DBE905613031C73E6AF8FED3EACBD369AD773E5F
4FE68566961C3DD2D7733808A821C15D1AE98438520132BFADA34CF7F00C5F0D
EF2F6255D2B65C2410CB106B90D87A4EDF503EB6826B33991197DED446D90490
F877453796044F1B2768B8926368A7AA62DAC8C7CF728FF21D5E4D980374CCD5
B1078BC8B9DDD6A37F92D26FD7A194B9A80631EE36C05F8ED8104ECFD2D95F8B
257210CF3777AAEA2AB5BC5CAF1AA3E70C23F14E97DE6D40066A75277DB02DDB
9F4F055EAC7A6AF8BAE4B46C9722994F7DC73C456A3ED1B9064477659DFF67D6
31A7641569FFF5AE3B2353E251E2479754CB600002D6FF6D162963C698EDD15F
96AFF97EC63BC188B40B444A3081A30ED3760B261778A03F06891AC0248DF3BB
E69B9AEF7F92EBB5A373930825BEEC5FA023958A9A2D64E8124286CABB6435A6
C4F43EFFC35BA38B0EF5EFED19E61C2A17AC5A9DEECD4FBAB1A69E6BDB154B59
53F321745EA8D94A43401425BD57CB796BC5574FA7E4400B9EA9C34FC221AB81
008DFAF25083864C35E65E3A02BCA7128ED8A766CDC5593BD144E3B11F635193
B36FC630FA532469274320D243B5942C9141B603A5B48C7319F48B5691B80F69
C926AB5A938EE7FA89F7C3E656728301B5D4E184D99328610FA046D37267F3DA
BFDF7B4E8F4A8A5B482482E14282982C1AD134B16623836C6C833B0908E50635
A00AAE971C20FE66C2471DE61A6652B745C16B474B9C652DC50664BAEA697EF9
84D1F8F97AF2C4F1CCBAD1462EC6A61A014E5C74C145912370D9F0ACB8CF5259
7A84DD71A4F2C51357B4944C03EC2D75083D6916374FA98D7AFE2D3A7FC4D67B
ADB85E2FAEAB2EC33291FABF510198CDB785A7FCCDBEC2A965C63A7CB0632D42
2CC92AE047FEA195076D5F5840550329378EE7C564795B68ACE71EBD572C7CA3
EEB69F9F5FEC4591CBC878A6B9ED5EAACA9617CCC9D2D48091757195A19B4EC0
F9E94E4CEEE36FBD90F54F60266A6A19712377CC0504D148BD37D900B0BC480E
6474FFE41F3322E74EE3A5145E248F2F5B4A79F515D53C6F51DCB0DC512DA9F4
56CAE66D9BD34708AF7F7DE84B47D487CDAA50AE6DF49065A071ADE2ABEEC44A
6370FB82BCC557B7206D600680316A237958423A72020AED4AB1BA513065BC94
18397D23B899DAC02FC93543156B822186995A50E065F054C31E3DD6C584CFF7
3E917538832683FBCFEADCC6F6375B7AF3713B770B004E5288BC2F5F292BA789
A9A966D42743088074CE29B109899624A9BF6867922231C5E34AA89C88CF10E0
21B27915CB454347271637B4DBCA28386D76D0298A2B0FAF2FC8903F6C1C53AA
83F6A6C78606B29A1FF1931B26AB48B25E41E5E7F68B205AA9A74120AE8F4535
002CB5590619F0BBCF065AB21680B44447F2C63A94B6FC2EA20FD1BDDBCA9CA9
8B15FBC3724041D7E3552171B2827527E0813471D17C6C2BCA599A5ADE6D0CAF
CAB02D63CBC2836DA714BB5CAFE48B59AA3B13239A1EDA62352914D98AE39F00
B5BF9DE4321D6A8EF5889BDFC966E3068E0F5298A235E394957371F211C41173
F6407DC296BDD24B02DFEC2DC71F9AD2E11AEF151F68A9DC8D361BF5750ECE1A
60620C3A2A5335EA38E5586ED9D3267560D72AB7E0CE5887D8C84A0367D4DCBA
C31C4690CE40282D793EE4EBBEE43044EB16DE5798A1DF3470836FDD8ADE877A
D2CEF9948397DDA59C6A6BB021FC8546C9702284721F8BEEDF9E0C7913D02C79
27E89CEB8914C008508B4CB4D7844BE95B80CD2F76B003BD4953B658517811EA
3243860E3F0E4A34AF4935B827434F776985E49E23D72C7BC064C35AC586B33E
12469A20CE3D0494421A77FBE066E5BB5DD0AB97E035B4E0CE2A23125C98BBC7
3301A422DA82A1C480B217C192C129BA2BFD393F14E95ECD67E0D277645FE7E6
AF5D0C450BAA7B3E063774EB4C29F36030E3716F9F9EAF7451F70D98E72896BA
438E61F2442D87F49278E12E97C0318C59B3726C66CF105D8880F88B1A839822
02B7522046AEC90F596AAE9160070763A93ED1DABE16A34347184412C7206B8A
6406336B800EFC3D95ADEB88B6CED0CA0DFCD0F5293740561F566B2C5FF4F8A7
C87B58A91D706DEA73663089D9994E963269C3DD67E57BBDCBE8030AAD69CFEF
F700D0195376458CF451291142B571939E08F93E0FF0E34D524E477968B16D53
E469AA712EEFCB72DB003F02F344591841265EF1BDF99FB16B32DE4D41C55678
98E2A0945EF9537A91577F5FA8DE433A8CEDA979921F91D263F3B51A519A6F5F
69BD8FBC558CC9F8BB903C5C10CDFF42FBD1BA1A3B1AF5318F065FBEA83E908C
18E4D8D4A8A4C3185F3E429229E5A01BFAE3EB68E010A9D858EFE62D24444B1D
09C825C93BBAE6FEC15AC544A5839632E669C4399D0F55B648490E787B902A77
A6B3F9B730BDD560945B886DDDDFBF20F2A777D07D56FB09EFDAF06984A45322
F6FEC725F15A2D27BB6A903831C3E15C2227CE4EA809A1070F6F1F76A0BF7F8A
D96B0043363D783956A645A6AF4804B846B296571AC32265B2F205F58E73A73C
AC5262D450F5CEF06323E79A483B84E46C0FE1D6FF8F9BD4422DFFE3B676ACF7
A93BDFAA1FD9FB36CA39ABFD5210E664568E43C09D4390E91462D98E4BAB8E1D
A22CEEEB47A1A30689C27C2993AC0B73A2EE44E1D3D5375BE691B2DCBCDB8BCD
FAA812E04F590B653A2942F97BCD68B82F7361459CEA16C887F471320F0A4BB5
CBA18D9A2E2244193454E64C3C744EC066B707F6CA1EF1F500E4A343346F9A15
8B4A7F828D5C48A9B17D7EC8387EA5E6A0E8522330ED5109CF1DC617C04C1E5C
A381B59803B8D1F53235D2B6B1D051EB67859532D11D0883A9976A9989669A09
2C4929DF84DD19ED82821F36AB6F4838FBCF9244364E2F5360781772FD4C40BE
B3F7ECAF404A8414DF809E95267131D9C7E13356041656F5C8F3D02ADEF81E92
9B948C11A483770F8AFF8BB824EB1817BA3BC1AE04DAE6FF92FF2404C9EC5612
30D0C8E93E95DE4608FB16E500BBEABD8B7A01964625E64D3FDA6834E13ED6BD
63EE2F414D46BD043A2240FCCFA6434BA8F4E652218D752B241936C9241C6887
1CFFC0175E6D876CF794A66091CE81C207FA49C06FCD0BC54EF3C7668F1D5D2C
66A60BD644594D5B490B03ECAE5CFF5F57B97C5E0E577FC63205000022D98444
25AB26E7B72B580B916AFB4EE4E89AADE5DA589DF1D3BA57B770626FC691C315
7D6C08D9B74E368E51A05088F702653E902BFAF83D543A62A16AFCFBE9FA6F71
12BC0031222DA5A5DFD369B6B4B864170E63DEC9250C603439EBCF16B2318455
8F1B89F4D625198EC92B3EF2566EFF7F0CF55C6FE820E80107245B0B58360841
93FAFDC56927D42BE829B5D6F98500B4BCE4AA37D72069A3AAB4A7FC6F4DB6DE
2B2CB94DE1A60CDA40F36A752CCF1FB4C110C77347FB4549C423CF54033F809A
EA100F0D525E4C4B7D3064C36693898FE4A1887206B70CF151BCE8A8EEEEA5D3
014C696C1A57DA6420C2957DC741B6D309D7273C282E7BB3730B86DF42FC8BA2
B4F858A888667CCABA0B692E4BA32A2026B87783588E6B3977C4AF388A387FFB
4CAD4D2F70F76AB72651FC2AF2F64B40984DD38406AC81162FE9215494A41B3B
7A53393E17721D9616E70116D71BB4ED1EEF48CC974D8315E8DAA396BC2E8CB9
963F21F7F9D726CB2CD81B490F6771D0A73255086D713F574ED6E20623BDFA18
C85DBA1467CE97D2B76ECB24D2DD63E3E3617A831200A1161EA00A6073C0AB7D
1C1D97C742C56AE2F403264F51C6D775D0E5C23CF3494F68E15C424889476AEA
3317B8BFADC87CB86E9F9F991CDDE22533AD02521BBD9B88DEFCD02E53AA7E2B
FC9A383E497DBD2D65044B57202220000741FD6B088268FAF8BC430DFA5805A6
AA0F9C27F31BB31ACFA0785896371C88D463C9DD6A8B378E89572269A753DF4D
F5EEA6818AFD71563B0E7D733E24916A04452D7A80F32AE3890A147701DD884E
C682343FFFBFC3E9AB4624567B1A8075721155C3D08313B88D1DCAD30BB74CA7
600A8638D88FD2A8FE185ABA4971A42BAE37808ACED43F1D872C97B5CC61C9EB
26AAF4E263B4B521D5366B85A143DDB26E61220DC06760595811A0D034C869C8
99F0CBEEDDEDB14F380E3E5C392E3FAB5DE83652F4B5D917E1F1281ED85ED68F
DCAA630B61D4961C2971EFFC85927D85BCB5E8D888A755BC0EED34BCE7739C38
EE14FA1FEE930C30CE2C0F185E7C3D51C1C3952799A4ACDD5A21D5956AA36F9C
468587F66E3FA4D293493FDCA00DBC7A9A4CF62F2CD8EB14D8A7A01F4AE25372
EAE088D369993B49BE728AAB48D8D37D8F11CA00E33C63CFC06A0A7A3CF014EE
1464BDD627F0312AC9510C6A9C0C8592BBC04624663F7FC78F76EAD08FEB8986
C34E69F7E5C9734E38E3D8825C7DB9DB35A8F6B9B99BA5F621D4E44C37EDAF29
16D80B972B66FBE7150D01968087BFF170A793317E52D141B776AA75851B245C
F48EDE1DBEB6269AB3856B6FB7785F8C3EB321A8B83BD999279E71F5844F104A
0CC603767DB3D29F0B44685EE925F456823B2565835C978375D365675A4A157D
136899D90F9CEE6129F36D43745165737F078258DDD9D307397460D869FCC68F
95B53D004F860A42FE9F6B5A11666D406F3DC3FFB889F6CBCB354A5F9509C451
13EC10CCE15607FC16FE5616C4309919470B8E104104444F2374E6C8ACE8C41B
95570128F6C85C8AA05101952B3ADBB9BD3CCEF7BA3154F27EF36550DC77ED28
0F4754210B6719A63625E77CAE79519A4F478732055991132A767249947E0FD2
D75E90F9C5472C2B2131A0CD0C5F7FAFD0B336BC005F8395C713531EC439E5EA
BA0E234EAC36D41C4B534D93B74367C5F0B8F8E64C0E763DC883B5A216863040
ECEA1252DA4946AB5501340A41DD32BFD65882E67EB9A1226C35E7E9E723D270
626DE506761C8DD4E0F66E11B9719E66555750A8542DC8C6ADB63966527552AB
121ECB2F040914451A486AE4D7B69BC4AED1081232B96DFBB4279E15659D6C44
22B55C5BB676BD8F55E8D0CA6606B141534EC8761703E7ECE0D6ABCF29ABE596
9D76BDE4FC97082335F5C4CF0EBE6BE20A7A617763C95D41AAEDE384339580E8
ECFB634AFD9A343CB6695C4BE1E0F65403BF30A37D853002B712C1DEFE63961A
10226D6F99D7A374ACFF2B4B31C5D82B35D02A089C52212298286BCB21B2A827
8B356798916465B785E9BB977070DC7EBAB42BC802B8313039ACD7FB8777FEE4
7A8FEAE98070B295731B87DA18779BB5B3CB1F96D7BD1E6E924E58C167C043F6
A3399F0FD3A66A7A09CD9D761220006C46D884FD0CF5DC5456858F82CB8D1E1F
3839E68D60019A24C55ACADDAFA404B29CE0810CE75C3CAB1640E680DBEC561C
28A738FFA60922F5D0D2652F02E0A123D7C904C24D9DEFC4DF26C2FE6847B0BF
4F0B5DEA01299E48C07B1E929BD6A3FE5C869699275EB8C15CD050DEA32FF683
4669C301A52F395AA5680F3F937F6E4EF01D1C5C37228382E6C9227F1AE97927
9BC1E60D235A896E6E5CD3389F76B065E4AB6EF820BBA65F3BF0AC8F3E505975
15777997D8AE91B1B77ABC997B1B046BEEE1988A408A5D247167A58996AE29FD
4EB3D2E89D3BEC6AD11029BEAD7D0018249A431DE073E18B891752C03656C66D
AA1AE8DC401FBACCE06129A26341AA5AC2DCE246C055E48A48EDC871E66A85AE
0BB8452C4A3EEA053A6856E6CDBCAFACE4644914CE5E3B5189AD5CAFAEE150EE
39B770DA303CE77846C892947DD0C2732625C3FB4490DD6AEC0AC12FB6625390
B988319E320514F60DCF5FA34EB7213BD945E084109BA89393917B71403EF942
21977C4A78A2FD89543ADDC8E7C15D36DCFFF127831D0FF468DA741E16EA3C54
9740A61E977C8AF941812CDA6D2CB9CAB898A75D3DE85673AF24F103E2D3FFB0
204041F0354EF063531412BB9C5F250AFB1202C257538927D46F0D763F56EA9B
01A8DCE0957A6F0F9353A9F8086BB58528815BD209D31036CF1AE9133118E0D3
FA3474C48B904E9A2A99F89084AEFC0332231BF6E0C266842AE6A9ABAE47D2D9
AC8275FC95957C6D07022FE913FC0E810AB9E8BE225001F06B5D1843FD266807
1D7BFC18C0E8C98AA58734C07B98ED4913C78ACD4B497A7F0862B125AAE256CA
6C551D2594FB61F306E931575A825A30E8414AAB38AC5E81E9F1E054C334AD5C
D2F38E884433E34AE645A658359B8F30E4F4D2DA817969A40E52D6AFC73EA957
1AAC0A8CC4C76A73421B452AAB8C39A59447D3F575C1275891B3A5672A150D2F
6C5BED86EA49CBEAC55DA502C3BDF093773A1DD433F0B495D578C67AB7CD2303
177DABA810BD68B70ED2E0A0ACCFF238421234FFF330576AEE1A4B5AA8CECED9
2235FEA97B68CBBCF4EB7AA829CF49EF2F01163ACA2725F72F6AB4DC674A6D8F
9DE9D3CEA398B01F7BBF0D9995537D4EE01C627774687F6D626F3558EEA1C02C
41EC887FB1A73AAF8F8614168937CA34C015D5E717F300E8A2FFF09F025CC5CD
CE3BD1E1F7017121DB6BDEA357946509FD48FC6B6C463802EE31FB5575462E08
1ABE96AB101C8EBFE4A04D66E8E326627E8DC624940B120681AF107F407D8875
74A25ADAE448DB42358C836734A2FD0F3B61F7CA0A9CC046AB3E955568379BBA
554DF85B40642383344406107157AC3394121C0ED142B27921CD4373DACB8C7C
0E5937FBB8401EE2C2B2ECDAFBE9D458AF3B18EEF81F4BED1ACC1841225940A8
39296719FD5798FD77EC130BD64B916FBE72A1C43DE1C919A627D4A0F0C1057A
7CBF206A853DAE3F63BBD470C078245AC452BFB32C5BE6CB7B27F851B432590E
7B126DC20C4427376C45D612C9E94F83AE7BB4941576A2E74819AF3E0A2E7DEF
9DB3A66E0C3AF1C94238BA86C67FA06DAE8663E65B84DB644242F92B3F1BFF55
66856A468D47A6B0D7953300A5B8A93CBBAE52194853F5E506AE3A2065975793
E19ECAE88BCF1B3ADCB87BBED52EB3A384D65831FEA30D4326031F90E5B5FE91
45D489F99E881B1CC7BFF9FAD6CADF749703F1734433257FB55D1F9A22CE7DCB
2CE3F411E01C0FAD273A055113753D000B13A9201B643BBC1C72AFA0C4011481
5C869115AD69DC41FDD977E590D6E43C0637C979C97BFA14096258E1E33595C8
778721FA6846B81BBB34950E8D73AAE27D9CADC862F1B33EF6E297968A5D3080
6070F2A3FAFACCBC365D644EEDC2DB43BDCF1E33ED3EE9C61BF4A5CF8E1043CB
F3B6FB133CA6512F5B5FCD2D6289B686362984E35E4FB6465FB89CA935DD6BD8
168D515530FCD29A22747851AA44975855AB3AF85D55E4C61A6ADF631259517B
45DDEC4A1C9BF98F74C0D19C8EB0D17E3B7BF2B301737B6EE7ED1855DCE3053F
6B056B296F1ADA91FB60FBF808F3384FFF2088CF859DBA004A1BAB3FE2989E13
2A0D65350042B5259D92530E5F6D627657D2AB81101D9CEBA3E8D2AFE1A48FEE
FA56BB6594F24C79AE6FE1CE4DA7FC6185E847B11E5470A806E87B2071A47E73
B7A6855F0CF3DE0BDDE99FC6AB282604C97EDF33ACED529DC1B5B5A3505A8B2B
C17B6B34C47ACE0B5FE6C92112D60C12CB23883A1B390B3B0F41F62EDC515306
9B7EDCE019B5765D2EA3571EAFFAA4B819ED1C3FF5708E4A0351FC80C4587AC2
6CD7641432C31E974835E7F1E48320117EB3AE501C14F57EE1853E8E77FA2763
F6BFE2A6D800ABE7F620C3C904DBFA496686BA84078FB073C4D458D0ED266DE4
50DEF1FC22254FF9EAE69A58B49E3885D6E1A8C00A372FCA4F630E0AB0D20211
BCB329D3F0AC78ED2DCFB425EE31FE3CA0B8CC5AEC27CABF3DD5E98DE9D1C0BC
FD1BD6FEFBB57B5B3583427733477872D06E18F54F5CD0E7FAEA98C6C7EAA284
44126BFD7625B80223C2A4D5D8F78F787A0A595A23C550B8EC45F4B20F88FAB1
C260FB5496436276DE4E3A60B10AF59B63225AE549E7399F60E9D3F5B6B093CE
88D2280DA4800554095AE80BD28DBDCFDDE940AC989A04749424A8233C48F3B8
2CA9B50AB92B3E6CD850D39EB0E457D9DFB7F0E487A5F1101DC1E69F81C7CCC7
5CB1D4B5CF19E34DF0780BC66E4CAB72565FA357C067122FE2B5804A5F7F11BF
C225D9B21BDB57833F1F63DFE22F5E7713083E9D605CAD41FA0620713F6F1A80
AEDE9A860475472F98644C803DEF447E008ABD6C9C978C995FE4FBCDE589229B
1083A9D2DAC8937BD3810DA4C634FA05175CA25363E12C010924FD02F5884041
0D1558EFEC510D0C96CF4D4321190F740E03EADE4F29BF5D61C509A1859573E1
C93F30DDD3680068714D6FF98A6DEB693F1C7D3FA3E4A5ECE41A338A52965E77
134ADCED1008AC4BD28E9C0AFC64FEBD9B0FFFC03B96BCBF5264FA34DBF9DD0D
C2EF99CD5842F32F9748E03C7ECF954D8F2EFBD682477F2F12D0E05E3D89459E
C5E3FC3D7458CA3B092B90EF1DC9BB7969AA3A66EEFB452970DF456C9C8AC69C
6AE31BFE166416B24831223B96AAA7828999D5EF385814F082DAFBBCACBCFC99
314BE8304AB5E5028041936EBA896C4343BA0D561DB636B36E0D96850323EC8E
5E3A0750883CDB935756934F5CDC13B1332D69734DE645F8DF4B5625A242C4E2
8D9D387798ADEEAA1954124A078433DB737175293FD5F51BFCDA70D14929B9AF
014D46ED2D5EDD856944F2F696D6323275B7F5E5994DE918B71A6DFBBDA28E31
68F7B2BF813DCDDD874536310A4FF7FB99CB8922E3BA3FC44801DF66D708647D
55C13EB3396F1D0F3A178AE44AD3559892BC11942BAE016215C8C3E2E8ED12BD
411414B79A5545A7E970A20E538393B16010E0F7E53E4CC8A6648BBC7CF6711A
81016679C88789166653FC4B5F52B46B41AFC613BD140078632E7729426C75DD
053220F66DE9ACB93A1655B05A33B4409C10BD45D77A7845C050CA5495429162
289F3DF422724ADE9316067DC45C79A3D22348B86122159F748DC7660FBBDFCC
332638DBBA3433ABB1295A03CB57A5F0A81D702940C2B73AD87862ABF17384FC
FB910578C8573F2B63DB9EB021E78C2614AFFE7FDFA853D4EF817D6143BCE159
CF9E0090A755E72E0FDCCF8ED7702F7D617B815C08186740C94120685B935C2E
A220D6598E8BD6746967E9B4F56D20AB03F187A3EB39D0730E4C65BDD09CF2C3
FFAC7C1AADB10E8BC8D47E551802E0C827E1076B16E4CDCF88E27167777A6B9B
C65D17500B2CE842235C258233992265322ECA5ACAEC0785A1968E7141F079FA
052E76D0BEE9C7FDED83C3225D95D171706A0E88E61CB51A0C3724A561FEB04C
D0B18AE72CF029DC490E9AA0B630D7DED0B54A925E8466448F1A46BB5773D0D7
D8CBD5192ECBAC334F64CA5D08C99924B307E82F03AEA85E53156DCC59B9FD83
ECB3447937AA002AA4582709FC75E2F82EE48E7FA345BB5782B2825C3C7F84D6
864E5D98F857835262055B889245BBCA359D8593B45B737A079380CC8FBBDDE0
4AE42893C0932AC8307A005D9E08B2AD8DDEB7E71E3706135DCE7A21BC40F0C9
AD5B4591D0796F4FB39D988068594288BAD94E14B39CABF7647E2D24590C5FC5
86439325A8A59210C5E69DC406ECECA20D31BAB8E5A2CE0587D4617241ABCB2A
E2039CE1EEBE3CB920E9906667883B57300F45AFAEF615C9792E79F92FBD7E68
2A319FA4FF3E2DA5A97201A4147027F8BE0CDB47CC82CAD33C7375374204216A
0F6D09EBB21C3AEC030D5EAC516DDD7AAAC3B2C36F051F995FC94D92082F56EF
07729F2E825736E752362B7C38AC7EA5A646A115639E81869CCD59
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT12
%!PS-AdobeFont-1.0: CMTT12 003.002
%%Title: CMTT12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT12 known{/CMTT12 findfont dup/UniqueID known{dup
/UniqueID get 5000833 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT12 def
/FontBBox {-1 -234 524 695 }readonly def
/UniqueID 5000833 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT12.) readonly def
/FullName (CMTT12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 64 /at put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 115 /s put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57D05DA0555DF933BB0
7B42D264831116C06C79335D519461E7B0E870A6715E3D74A08D1BCF86E3BCC3
A43FC6BAD1C68BD9D4AFCC06D845FD1F1E70D7A47F0BBCAECE8396E04591E5E3
4797F646AFEEB7DB548183F0B74C9BB6BA2AA04E7F5950EC8AE97C741D4B2C5C
A8E7A8DF5A36A30B5A7592D95E1DBC63EF33C92FE459792CED29E2B8B6919251
75EF62089BD7D44A6E1F9B62EC802FBE62B821DA1C3B2DDED45D27964AD29ED0
9FB7868F3A8FEADA87A8E42D52C1EB7229D7C79B60BDA263F2BDB025AE14A507
098FA274206BACFB4A0A7257D5998EE8F0FDCA79CB61DD1FC59DADD11E16BF02
ECDFD706CDA1E72054D4EB55AF7BA9F19955886BC0BD6E0E3FE3769C94AF3581
DFB2BCD67FE2892AF07E858A01280194D8DD7332B3D0A585C87FAB056C2EAA9B
5AD48D1C9F00CEF8EF0D1408DBE1C03D04B231D7B8D5D998FE0CD7EE19828EF2
F988EBF6DDBFEE00F04A4A1F4E1A55DED7EF3AACEAB5005F1962C724A017C914
2936E2E0DF26A55ACD7DD836C6035CBF07981C1BCE3615064F0540A1034C69B4
E3908E76EF8925D486DF0B4A8E1F02D8AA99585A7C31847AB9382F83880C1C21
C496AB2DF8E7BD4643B28B704B5F6B53429D3EE940A79135F5BF0396E5B46F23
42AF406C26D12BEA7A41F332AEB75DF43C15334CF4651A99F602036946B1B91D
4BB0D2E51C20216D892C8173241AC8FD15A37C3CDD8AB4FB67D8565AFA61C068
95E3D6E46D7C09BBD09428207D506AD43C693F3C3D787F6A5C39084AE45E81C9
830900DB50DAD10A17E118FB5E9680B5194716A788FF7514A1167DD1A305FBE4
8A4DAE2CD7284E912B80B491E822EE84CEC0ED22BEB736389C419C5FBDB9140E
99A33F94722F0A1B4D56F2D280B077B8A35183620992F3ED4DAA665F1C31F622
A6C3728DA48021B70DB89EC4B946965AF75BF6B1AC7A25C002DEEA0A7B58F0B3
A71010CE8BC3CBC4698763770EDBD04EE2BBA631A61C5CC3289354D143CD1A9E
DCD1722EA62EF9FE7CF81EE3DA486A5876941BD639BCBB37778D1CF1806B1DE0
81D2C9B995BF1EE3842EF993F08C5B690EDF00F3FE36C9CAA4C56E41279ACDCC
BFC37A265AF506B75CB8F498914E17C88A931F7642D8C77E55B9E967CD057C1A
EB9E463700DEEBA3B41CDCB55FD65697FF0B8552B6799722DA1E6382EEE6DDB7
26C4519128C47CF2EC70F084A5A742824638BDC7A04E9387E3E188F2F5C21CDB
95994F56D69D6C7F54D5E00966A059B1636E4BBD2168B4E86736E4FDDB49DE78
5CCF03C097EF1558858595438EE78EC3DCD7CC250520FED1BA87C7B3ED993D48
BA78A041717B9F90A4FF9257972241633415F4BBC567D056F8D9096854E4B42D
C455BFC6F0C337A74CC4C9D8086D7F9D5D3D827200F2925C2F3441C2E4E79D4F
3AAE44F66D7A4112D5205FF3470CB5B1D28A5324E0089C79AC532EBEF60BC65D
91A0ED4F6FE29DA796BA54830BAACF845DF00B658735B450C9AAA5694E38CDD4
66BFC81D794895F02DB2F442E6676BFA471E326D4F821067927EC467539897B5
C2D94CB368115B4B05F1A26A5FF58071CC3CFD1136BABD32EEA22F39D15F41F7
AA0AEDC1A893D965C4D4BB1939D9343D59751443BFF3ADA411955AF861C44041
F093185CBA9B0AC9770E70F3B2890882D85C0A70CA0463836BA8782D254A71D9
6F268EF5B85C4AECE951A17DD0E3A0338B8B72C1470F67DE330BD68B7A5B2033
21D84B9DD38B4F1E8671CC249CC14559CA4E8B73A89228B2E82CE016E0BF1B23
BFC62DE3A3321291719FBB62D3D31A3775A235095C14E9ACDE068CFA72007778
306D6BE0FEC70C07BBE3B7659B13AEA47A043B50BE26B177AB1264F5B889E6ED
7B88C7B86C3C7CA052FD83AE702A7E0C8DAEE5CC68F3214F8A83057DC089B591
26C0097CD34480868EF7AF208C001ECCA1561C90BF497890980ED50A17918247
FE8C2B4DE70A5272E87A821989248A082CF528B7EF9CC32FC4EBB8EE5003C0B2
E72A26FAADB4CADB3DB95CE2C74D0B9D72409133A42BB48ED7C6E5EA9A1D77E5
80CD127FA9E733C3C45FC7F54E6D31FF6A1F90F684630AE3118CC1B89EB3DBD3
6F8E78B66540E490DE83A5527B5E2196047A2FBDD771529472B8865FDC2C0F91
F8B52B2F0D522645654F38B86E4D9F75E231D7C48A836DADA7FDAB4450FAE2F1
32C5F319186FEB07F0353A6118F6FB3E6B2D764D2F51B2393A14D59799D8FE8D
7B9AADF0D0492EBF7F9B9316FCF9B04805FB5B7845C3D0C78AD2EC0AD07849BD
4B551D62883B85EB157E48A65EEF29A6733C321058CC5B14C2FB7DBB5215E99A
6C6756953390FF9EDEBD23F30650DFB41D9A4ADD530DA4C7340499C473FCBB1E
FEAF6E02F79A96B8FA9AEE13A9B4017D9A660E620DC71BAB61C003538BA2A8F7
ED9E6EE2442F8650A9B670C40B2A292BA080FB5B5444B568BD2D3E0C2D82BE10
BBE607A9800766D8BC1F068C16CDB044FECA0C9D54F5CEC1AFEE5D1D87E08FBC
D1B144E3F2ECA02CD065BEED55B4A3E38BC074ED6D506CC4BBCBC68CEFE64DCE
D3B2682D195A2A1B81B829664BFD11D737F0F511E5550E576888A22830050D33
BDD7C1CF6533B852C4752C3D6EBDF8B95269C99D0656CDF076EE27A8AD39339E
CD4F1861490AFF64B1AE18FA76F6D1EDC5BE5A8A8252B2811B7DE7E31C8FE6B0
1CA6F39AA68F59BC62D706867C071B8DE29E79E41B797A6B5D294CF4D47A1787
95E47DDB2453490AFDEDD13EBE7127A7807DD724E93E5AE454822C8FD5CDBE0C
D32ACA9E2FBEF9271A7ACE8CA6F3B5C9274F3CCB3BD19BB302E93FAAEB1A156C
98C8675A6CE712ABC2451698A8439A86EFE6256AEBF70D020D12E5B7BA401B7C
66DE65949D2BAF03DB58E765D7E821C381ED95F02B87DF392B5AF951C3892D78
5B0FE3FD094C2DD303221E8E0941B328ED67CF81EC0613A754283644A089400C
76CA6E57DA4AF067483DA7B98AE0B754937DE6173544E3B1B5F8E8C5B876830F
CFAC81AFDCE2EE4E3A1DC6DF728E0EB37535549B23D3E15C4FC501723D4CF93C
AA76B7C5063D5DE4E0500D9ABD57EAB5747378AF12FE2198E8EB0D2D854B649B
CC033953C0807B3E840EDC7FCF7227AB6646CE5B5BABCB6F98853ED733D2A158
2D0EBE47D15829421A366B50C4E0ABCBE07405F5DCCFCB33E2780D908C92E192
61417F97021006FD14F651DD1685349EB0A2A8A29B1C8E195432FFB3516D4C3E
C4C62D25B1ED56BD9373973D520AF90F258476B89DFF32935A196604F249C144
7519952DE1A34C5768E5297F785C93DE5DB986EA244631362E984F9827C2B4F4
A74F04A7A061F8C373B148CD387402611164CC889A47906FBE1C0B20B77A5028
0193781FD8DA32EB460F6419D8439833B610F0FA07520021F9E3BE6D06AB662F
3285FFFDAC39574B7F9188C1A9A487413207F576A8AAA05D820259356FDD4AFD
2BEBEFDEA3BD798F51AB815164B7036E6D59F51C143384C4956414F762AE4984
292C1307A5CCE24DC891EC3432E8E36F18648583B91D42F96F55FCE122F08574
F6516977DEC858621564156599CA910EAC962FBA1A8D9CD48A6B38759606B5E5
1EF631015CA7660204F3B0CBFCCD9B0A5A0220AB35808BEAE0B70152A2AD85CB
745676F87833157C6FE384E45A139571E25EDDE0EB0A575880634802D01BAFC0
E77E3D5E02788D09D2BB1EF1E075F4BE13092E13FF390F6A91CD11357E24C1B4
AB96DB5AF0C62F8C37331EF0C5E4FFC99C14A37805C8806149A6F1C2F59D6D2D
9319760AE21227E7D550373102B70105A460259E1BD6E5782EAB66EF0620FB7A
0F1FED9CB0119E8C66A75531351D01E9BF9103CA7A9952F6EE74E5259C436484
44EA27C47EF47C5D104EDB1AB1195570CED5FC0448F6DA8EA7067AACB0F09764
41B4171ADA45A4FAC88E4B7E5C79B7AB133FD76A2F9A09C6107C5C276CF095A0
D3F4B4DDFE927C90520DED6157B78221672D095B50F0A652CA653B3486B62780
836BC0BB2CCDF55D5D805C854902B5EF340A931B4AC811A99ED20DC3FDC3B8F1
6BA9F421550219E9112847779F98E6DF9AF27AAA3658B8AD58435BA52CD64EB4
E1631ACBC4D0E1C20F23E63599360C07AF96E8513F897E5EEBCF31A7C9BA8718
C54BE4B3D8DEBAC8EDFC2FAD781BCB942EC639C78A5EEDE26AC7827F30A2721B
3EE2352F61318B3EC44140A4C557D5CE4E3721FBBE7F037F32AD77AC66BE474D
483E11C561629D7FDE8EDB13D078F0AD77AD7629483FB8D58261AB1C60671FEA
A3D7AEDBDFB21811940B368B687981D6EC2AE1DF1912743CE49C028B1DE639EA
85D24923F2192A77346C86A5D1E78A200E3D0904E7A2E9CFE27CEA621F01ACA5
83C61BED4E5A945D511FDAC88451451EA9D7431494EADE50074A9D10ACEE2556
33C816F04D60CAFE395AF689A06BB54068F414229D0F74EE89A202732D1F250A
85EAC1DFF394D82A1488B3A90771AB84A0611981956E6D88073EEF11BEA58C67
554F200F19D690480D11231F3833E83C99BD51675B58EEF3BB783B52BBC9FCAE
7532C483B00ACDD589E71274B5CB35A5EA3BACEE350AFF93B457C0659CE84478
3EC57C26BFB35CD43EF81190B9773280878F6AA50BD9833F4D7DB73A8BE384A0
8C9A45401E6FC9E1E3ADF70FC5A0BBBA001A2A5ED51A820ACEF131B5EF9E21EA
84945F9D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 67 /C put
dup 75 /K put
dup 77 /M put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 116 /t put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD50D9C98DD94332DB4C7155F8A52013F9ECB7CCE3CFB3E667C57B022A0A753
A45E41A9D8229D5198031ABA3DAAC142AEA5FAB6694A6433629E15AE45A67FDA
34DE10D995ABCAF45FBB3B6B73E80D05F4C51F8C29D4B0F67C8A86432A6C5E86
F0126AB25A5CA2875B48C61CB8112A4CF9AA08F8B0157396CF63CBECDB8867CC
AC10F060630C9BFBAD84B1FF01C814878F0C177F552BDC9BB181B14581C6E968
DAAAB2896FCFB745795C4D2C87CC15BAA041EF80C5BDC12EC1F5786BB41A5A21
073EE0BC436B346E014DB4099EDC67BC432E470A4B779FD556341061CA3F2BE8
EFA332637AEC878C2BB189CA3267B2BE5B8178E6B7889A33771F86276E6F0B8E
8E93B816AC7005575762EF4DE45E2794B7322F9B6D8E634FB8FF250D638EB502
818321B3C46DB51B8EC6C2EF1D05C716519A3BD6B12A67239898F8A012A2E728
A6AE0A939A05EBF8642BF7FE7ECFADD91B15EF15CB9FD9B189A89C673790C29E
22031788A4DA48F9A59693E02266D9BC8B7521204E23A07F6C0E136EA6F70551
048C10EBDA54D02F35584410F89E68B496ECA0D6F3602661A65465936B3849A3
F45992BFF8C1F696925CDF10DA8A623BCF47D499B18A437798C4F983118BB757
D74070C071E50B0DCB915B923EF17F84D02E4F01355CFDD7C81232ECF434EF72
4DF451A255FE3D2840E034B7BD065D388B8A612E115547584790AFCC5163771A
738E90F9E5E7173E7147467AB33ED275DF174B527BF565D116B0126D4CA943EA
4D96414C12BC874446765347947167851DCF6152F8AEEBB9D3B6CF52A2820041
19FC020CF4D8CE1F80B435FFA3C452B395843F211BD21BE2E4958F041FA2952B
8ACB22F3B62837AC7C0DD16F281E2BB36EF26094E22E7A18620C92879C9C51BD
38A7E18205B66BE3A14357B7C336291FD1406CE997B4FB1B683C8917B5DE1447
8BE8F75DC77CC141B96C61FC89945FB88D2FF5971D60ED3C577A0ECAAE5BEF21
FE17963DBEF3B009DF4BAF5AFC10C4A39B9999236CBEDEBA47174511A0B1A674
6BDC9233367F309789164DA337862FEB02FA412ED2FB5DD02300F5D6B34AC7EF
69AB22782684208142C75D14AEF5D79892A8E0B851D910BCE278A85981364C0A
B2A09606AF88EC907F9C07D52ADFD3BB35DBD09B41076BE0D97BE4F1136DE310
60391C7DE81EF167938CBABC0974B33CCBB060F696835E74F5699920E9DDED47
6B0F9194D05E5417BF8213C35D27452B2A01EA99B3174459E7BF3E00E54AF518
71EF53302D317726386762D722B016645970B0213F27A0DB18562C35E7A6FA10
7716B95965FC17596807A500EA9382988FFAD8358570F01CDD34C130D922A130
1A0F018157640BDF872467FEE36B7EE958CB2123584CC715C4AC385D472C76C4
1CE7B57E596AE8B70544D311EDA29933C3F8E2113E73F376A6C055D1CA94807A
05DC27957D7B102A183AD62490277A20186201DD98C8B892C02490FD5A521C3E
1DD908DE080E27087DB4190BA7CE35F9672AB0505742B59CCDCED431F505C2A0
B3B11FC162C8695F262B27ABC1021E27F48F4B1020BF5B1E6F9134126A912BD8
0DCE0A71D2BE76BDD07AFBC9394BA931A8C6B530A6CC7094E92D607B1867B05E
CB8BF6762B207CDFC74378303917485E776A064A096757232A323442AFF2F2AA
DDDC3EAF55921BA69C276236D7A37566941D3FA20DC340AB33876EF29AE34A08
C87F1581FA8EFA81E14AF1BFD4203FEBF0954BB1105DBF757BEF4E2D701638ED
23DFF9F2E00B061CDB1F269D84A3613D6565E8D52B62F0A56A3226A17A059FC5
5BD1713A2806BE9C8F21DBA080481E2C07E4AA12736217529BD80BBFDB599303
9B241B48AEE935DA63DCA15C7089F7FA2DEC09EE320A77E3975194FA23133D5D
32CA3FD760DDCCCF2F548F0B3D19B95DBF210083A244B84F56A8D974D5817415
BA842A67D830F0A58A2C85C552128515FCBA2C295FFE2BC5796797278F0AE936
F2897ABFAB98329DBABEC4C7F7F5D995EB0E57EC15FDD5BA0F37D875ABB88F84
E87321C7DE55DC385B2E920421A1683958E672850BF4C3A48C12C5A080DD2C47
68C587BB7DA7FDD90151C4B489897EA6532E763C04CA081A97ABA5417795B6E5
F8BBB1F2B7D44C8FAC0045AA2A64AA619C12B52C6985137A9FA6DC44EDD12A92
8B5BA5DCD49968970662040410F5CD4105FEB6105D66889221F1B8845ABBA7D3
AC16F84C1547B795556EBBEAB9D8572B882D976D545B805C11CBDBAE60A1F36D
8BA18D256A57E3D19F2D7E79600688131B2164031D611A41794333F92C03EF05
07F03008AC00DB2FF213A0F6ABF207C3D21C5063DE7B9665974433A3A372D745
5649CF54E8D3686E53FA867809EE12C45C238502FB45A206730429D1FB620EAA
74B4AF4FBC2439B41986F355189AFB1EC6854CE99E90D6F22AC3D5B71BA9A018
56ED0CE5AEC3A4F839D5EBF0063E9D7F90080AB112BB84B869F498466CA50BED
4547A14036B025C272A790D4A1D3D828F25E9A4A8DE9E3BAD41FA67D0E354F90
42713FC1A8DEAFCB4F4423BA0E95C443C7AD60C6D06F0A7D6A329B015E263417
1B2B250DE5AC208CFF02F1D28C129C94FAA0BB8789C0558D5CDED3CCEF856767
C13490FC8E4EEDD4FB73E0D1175B2DD0413EF71C3877448F544BF90B22AE21C4
6EF4D10F0D2D1FB0D7A365FAFC6638976157FCAB15501CC48E88E821CB9CEDAD
B8EBE3A5A43650364646AEDB0A7FF6AD1662546E519545B393B17DE1D24EDA52
0B894492D25D0A508191EC822D3F00E13B6E026D23B4D097BEDB922CB9D1255A
3642E19BD2A2E5F89BC8D104D18AAC5121CC397B3A15221ED7CCCF220022B350
0875A3F3A0D6C564139419373923D513FE8FDB9F4C5319037B66F74352EDD190
9E1295132743252DFB3C4A1391757BAF8C188E055EB6715C20724C78893E74A0
41D5D08A9CBB3579E0FA79A8933204861D6EAFDA78E319EDDCB4CBA5C4B67FED
B5AF25B8DE3FB354853F16B3215787352A61F46A9635DB451CC7D48008792640
EDE59C563F6AB52B0E93F8A9BC93EB0540972C6C22DD5084CA1DBB7D4AADB30C
FE8139296430C0E4211BDD966460495F207CA2215CE4D6671861D9F6B55FA32C
DBAD8BECA26D954EEA250E836141DB991915363E9E4C8D8653E15F3CBC85B0B7
96916A5B24AF5E89E57C62F29EFFC70F0E6935375525E22472CDA95D74A3988B
5D58A8F0979CB653744305CA393BDF25B6E6C01A11B5104329861856E01A0E9D
C2E2179D79AED0AA8BF0084F18153E7760560D7330597F842FCD250482C55530
73018CE7160EBA311E3743FC2B8527A95542E73259A177647FFF8E60D5EFF73A
406DEFF54B04F715E732A3CB6DC13CE417F8FC42F8E1838C20DF75B5F2BF53C6
910E238512BE812A7064B363021EC90766E8DB17CFCCE87D2F58411689A3AA88
12A5BD8D6174F970A42B7D5819B3DA5D711428404D2CF3C7607807FFC9133F94
5740E26E8CAD9E11B197D6C73D370AA9969C466AE4AB6965380DBEA7AF22CB2E
FB7EB6231E6BF2929026FE72CB4460DD13BD2C925046E5A219464BE26789B12E
DD6E57CB7FD29C891B8F4244C0BC38AF26137A6C7AD360F1D49553FE4A1D0EF8
7AB94615A5B410FD8F22F0C6119E1E86CA59F18251A21E645C515868DD6AC7B0
206D59421EFBB3D08F4EA44C935F8CF34D056A477856CC5BA9F3F2F0BFEC7511
D034022D5A27011BAE8336D31C70CF182C99359E7693E3DCB4942EA26297EF0D
2868AE51FBDCE6A7B72430D7DECE1882B4DC648216B2801B7FA6ECBE16D03993
66053BDED03B91663D3F66E3F7B04B81A15CF23149501FE2DD4D608484FF1ADD
B6FC47C95E0E6CB617FD7C96172F2DB8DD18C481A439972ADA1EC8FC81E3F9EA
3287A9DC3002710D8BB675ED6076DD5E0EB2058F690AB98E5D6E0EC15420DFF3
93C1E38AA28D46EAB506DC36A17BA56237939E40FC2967ECE8A069C1FB31E738
6CF5600F7852A6EC2D1802E93AFDA1B4E5E072266509802C075CBA9B02A8BE15
3B69587F33A8957D4A45BA86FA25EC694D51DC8C091443D37A510ECCCA5596CE
C0BBD16A5F7734A0E7B6FDBF81AF5C222757E6E3EB541E0BBA116CEAEFFA924B
620D8AA23B7B9A806674734E73B20C9CF2BA4EB46042DA01BB4E5ED22B45FCBE
54E8A85DCD49236C2B091DD1892C19DBD2CE1801B556D2CCBE97E459C31CDB75
2A288B69E4E22FA5A2FBE81ACC4486C4FEE1720669B801CEADB18365DE37DF13
43E82038DCEDF9F7B308BBEF974E842285421B7F7E82215A10E0707615DA0420
2D08B5731C083FC788928F45E8DAE1C3D8FF156F5C1FB9562F2695D73DE83641
829CC93BCFD8116412D89C7D5712869EC6624EF65EEEFE026ADE11816BE583DB
C6CC504CEC50C37D9EF185D5EB4E3723AA3F20D9C2D7A865681FC66782DB8CA6
B8D248D88A48391785C36F9FFC665EDABBCC812C5EFB6AC1F988DE9B3259E660
A7BB891993EDCB2E06DADB1F66A0CB1C1FEB6496A0642D608E5EAA9243C3E0A4
F938A3078456CCD8D62D4903F8DACD21245A901C04AB5CF4B792198FDD2C62FF
B4117D4BDA3C7A1B12E450ECEE2C28E016B81A61816310133C85865215B7718A
185E14570D14A6F898306254D03681B1053658F37D5522272BD26869D8B911A1
EA1C9008CB81C6E331A9CA6E7D62057514FDB8067FE77D44D2E77BB5E1ACDB68
37E431D640D5176A7B9889EF3E9B74F5AC0E3FF013C84716CE8621E4AC2746B6
338D9342A432D201D3CC72CE556806649C3DCB438094A57371A3E6F12EEAA509
CF7EA54CB1240BD1EF10EC8BB948167170D9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.0: CMCSC10 003.002
%%Title: CMCSC10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMCSC10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMCSC10 known{/CMCSC10 findfont dup/UniqueID known{dup
/UniqueID get 5087402 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMCSC10 def
/FontBBox {14 -250 1077 750 }readonly def
/UniqueID 5087402 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMCSC10.) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 47 /slash put
dup 48 /zero put
dup 53 /five put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BB89566A9BDEC70EB4F2
048A6EB631F05C014D372103E37FC3FA317EBC9973565A638403DA02E48B7D31
CFF6C241DC5CDB470561002FF46437C06EF93BC99352DF04393C661FFFBF4BA2
0723ABD9B3E9CA9E63BA57EFDBAE684655CBBDBA15ADAE43E1A2C98A3CF060A3
D16AF8FE3A49B50A24C20EEED716E49AF6013D4D38CD9CC41A91C17E4D04D79D
567E1EF49110AA9C34464E95D81A730ECEB2C9AF38FBA6B45E253288438B4CB3
DC75B3A906D4357293BA41E59C35223A6C9CBD6FF5FC90C2D07CBB376C7320FF
435A6251822BFCBB612CE630EDF826C37E95F541C21B93FCE127591D5E38165E
2B58A34AAE37712BC58B63FFD70AB80F4F24612CFD2F1466BAAF3CA2BCB45148
D0DEA0E9B8FBA4C4FF5B8B3CB02E461355051842BD1C94F41066B9B909DB83B1
DCDCBEF7CD00A43E4C0B8191A29600CA197F0BA227FB8309BB539D2A620BAC70
8A1AB2DFA51ADC9873B8E5582DCD3ED154E5D727D1665F99BD89883D69E6CC2F
DB3A57AEB612171A88E22F038461DE03FC357F771675E34E90D4D19B4B36891C
9D2333960400E97494F4FC4DBCE6A73C34A0409E433BBDC0AAAEBA7D3555066E
1CFBB4515C8B573C9B9DD12ED5B6ECEBE35AD0DDEA9DB004FC6CB540B5117B49
59CABE5FD74C6F5B6482B42C20B5FF0467D1DBD7CED2CC651CA57852B6FBB402
A6764DB342889132C911CAA713A7F2FDD8A5E849345D6C81025E02F5B8B682BA
90CC9B467FBC37362436EA6BF8EB62D784B01D5430147945BC09D1F49EE89F2E
3E2B8E6D439248A56F82F2E03EA5C7A922F2813BE6538A3A423BEBC55B345AFB
3B3C125306749E137C647D78028AE1FBF3E1A82C260132832A9668F454D39C41
736717DED0A99F6B11F005F0E1D07FE84713AAB4C042FDC166AA146D7B5E9198
E4F485BE5B135EA281FF1C1E616B5AAF02771F58C5840CB5A427FF9794F93E94
17FD799C78AED1DC4810BCEF4C6C51D3C1504EA2C6F2B29805B7ECF97B5F637D
FE92E168CB9029E90404CB54FB312FC7AA8A9F2F524C03E61F03B1E31D4F061E
1677B39D5D30C9FD4673E1723F4AE3CCF38593AD6D7F61E9DF3C010E51F25085
35D51105E1464BA146A78D7297D4D310AD91342A0BB942034A3EC0696B467367
3E39D202D637E6B14D0EBCA6AD3CF22B07D4CA69C0FCBB6C93782B2F0DFC5AC1
5D8A16CB5EDB671A0C1BA9D10F63CEAFCD0E06E42C730C8EF769CCFD57937245
658F486036D37E8BDDE5670A212FB488A8753322A5B170C9662750AA958C0BBD
8E97D8239D2A08B30416504DEEC4E506013E037C91785C674F8A6A44E23FEE6F
CCC00CC5E4D355B0871FDB8ECD64F70EE32449BB5D6F84F8C8AA2D5B1A489BA9
D7FF2DBAA8D0B84054E93D64D3E77850A3724824914A0F821EEC3D605DD851A7
606936B8B9E24D6E932E16C448140FE94DD96C75AECB73850035ED9C04A1D93C
64B21E7D4657E030483EC5C3554AEF8BE4D0FE5B9743B875340B09E01273DAE8
F256C50A1A8F2E0417440A8BB0173F59E11523E1CEF2593A4AC5AF2167627B00
C5EA97D125EB8A4BD4C372877ABF10F5B7B149D73787E0834BFB3084E9508DF7
072DD71637019599252059738D4D6BC57A9358E4B14F6AF9C4B31DB8E25C29B3
7A15F9953BD73ACDE5F0445A5DC406BB4635FAE51C1D8202AE31730E6F355317
1DC197DB0B6177307C60E5D38F4487363EE051B2E609A52BC4D45B14B6558B6B
5E1618748794B8340752CDBE7756C068975B559615D4CD5A97CE30BAA7B2B1A3
2FEF2E055232B24FD8A21BECDE1B6A479A28EC80AE2CD16DB50B30B4A6CFCF06
491C7CD5AC29FB964D4846415233947522676DEABDA0D9535F8507D33693930C
B4E4240A02B0CE7EA288516B8A6EF908D7F8BAF9012D052C6AC96D9F8F6ADB07
8984F3559C5E7E3022A957982155FC9CD599C74E18328D3AB46F9DD15D1C4C3F
9B93ADB4489BA02CFCF57DE6270F3AD2F8597BE71786510EF08142F430EE5568
4F9DDB792B7C46B6135E341DBBF062FBC50FABA80CD4A384157BAE57CBEA9781
AA4416323265168AC097DE7E30A0D4750143A4FCE70A863A31876A8FA5327C3E
36E89589E363AA2B1A6E8B09F5AEB8FFFD0396067173465B6503383DE517A6EA
88C0FC08578398C2A721E5AEB29F4AC9BC990A50CD87BD35A11F9E81F68E7B85
5E5B95A4F9A5D30379EF90D78E1E466DEF867BAEFC4F5ED2C762BFF099C1C2B3
5E0DA1C2FB33BE1379413CDDB1EE6BB3A495331F72F2FAEB8152E8AD5FD334A8
AAB0082A71D5574B618EA8D487B8FAF1B445F3395B1E21224F5492A0E06F5152
7726835C900E2E52BE3B7B654183AEDEC68053DD0AF19EF6DBC10B6FC08EC7D0
CC0E2C8FAF8C9A4C21FB7C34E074BBA4EE64226BEC8C928A784C1BEE35B72EC8
E9295240B29DDC2539CD118BAC38DB3917D14CD33AB45FE47E827F2A2B193AFF
53C5396C52CEA4F43F06AC2D08C74CC85D608CBA267175EC31311EE25AB48DD9
FE811B411AE426C9FC0B6044D1EBF130231623F1566CEA4D1C06D8032FD9808A
94479C842BC41B675CF6B90113BD681F8D43F51D5016D80EDC11D7640FB950D4
E709A46184406ED90D0892A4CD9062938A8205697A200DBE1F38EB166EFEA0EC
4FCB45CDAF82EA103DD6FDD03D146F3E42EDA6496064DB3F4FC1C5280C9E604B
D5EBCA08BF2AAC90156C11EF68137DC76502EBF216F3AF3EE30DD2676D218428
F41C655093F8B530FCA378B5769F262A6FDB4B66B83F18F050E77227E28D71F4
5F4425CB8D51B3DAE872CD86D7804F870BC564A6DA1CA13EDB00D131CE4F6460
7021661B99612629DCC20C85CF155EDC5111E015A77B0B82A8FC1EBB374B7EF2
361419BA93B857D5C9944BB5B4AEDD86ABCC261542077FE09701C96370168579
5F89D5AAA08D700E2643E88C2FB8D1D56D37AAA9744872E7C050B4CE046B47A7
83F224FA9FD311C955EFBF173042C8FC66524135F579B1397828870D5C9DC71F
8615FADE2A1CFAEA90F732B6C266E2F3048FC43EDA7A6B6D98E9DB793CF457B3
F5877E7A055C92B0246FEA8C72B3B3456F93BF36E2651D32CD614C3AECC0B4BC
F824C8363E593A6458D37408FC5B09883B280005DD24123E2D4B1B85F4113327
EEDD9186A4AF2CD6439B46C5C168C125CA80F9EE9E68906620EE126CFBF26E15
B269838A54224EDCFE2A373EB750D4829BFA410DE5F1541E428BB1E024AF496D
F5F1C151F5A645C8622F2EF9088D57A2811868A8A8BFCDBFCE3ACB8463AC35B4
8B6F44E1C1232805842F56FA468F81FF37D5D55B81CA56058558544C142EB3BE
07CFB1F75DECB1E48C14D6AFDD455989AA6FFE8B8DC54F462B3C20E31D270BCE
8E68E2B43A6625AC7E9792704FAAD6CE8BBE0B341DA7189EBB3E9D5375B27FD4
12506D5BCA50AEDC6955E6C3C7BAA84BACAF7ABDF3A270C7734EC3C6EC22793B
E67B0E288F99699D38DA8B79F2D21DD97945FBDDD132A8F0BF947950D3C0B4AA
EB7B2C435AFE54489E1930610311D718AC610C21A644F34CB2D1959B3066F39B
EADEAB5CFC6AF4D191D86B02402B00D1C5262707861C5308730579795EB53207
A291A27A8B5C4DAE0A87A0C6A260026CA3CB620E1002E066A515D7990F3DEA29
0FAC962E0B82B7A6C86B1EDC54007822BAECED673FAAEF88C8109777EB79A53F
AF3C58546974F2F56E70E9B5CB59ACB5C27CB01895557B2D82134D7F02029B24
3331621F38E68717F5CB68A8892D0B9C0A8ED4F8BB56E80505170D44C6856128
2DED0254ADA4875CF56B4D97372AAE730D4C77A2940DC8C178274DF88A9EE037
215C6FE7B9D481EE4DE809B124C0270782411ACCCF89906A8B143D0BA8B2CEDE
E9B90465C3E57A4FD9AD2702323450256ABD09A1F8C26F08480317C08B75B720
70A161C99715A35A94DD5C9647ED0F8A5337B774C8E54F9653AC859485A1FED5
37B725A7E4BA58711CBCDA6054E34CBD8E9F9460179DA7DBD243D81A1531FDDE
BF2BD425BD9DBE75EAA333B1F5793669A215549A774597E6ADA16D323FE5601A
EDA41092730009A99BF5B5AAE281844A6BF3292D4D4EDE36B4FD8BCAEB6EB72F
AC5D3CD53D0D621CA9EA8D254FDCB2B5161EE9E80B266563F669805A3A15271A
0753983004A1ECC7FBADF62AFEA4DAB49A178C231759857DB910668BDB07CB3F
7E8EC24901863088B3231EE3FA563924032C91CA9D68DB398F9BD9AC0C651EC8
9051C9F709CD784F3FF5951DECD7E869ACC34B83AECDB011E6594347855EE7F5
28811F744A4BD70D4E9077EA7EC19FFCF612689F12B34332857AE41F13E6D16A
962DB9B6AAAC167B9FBDF0068EA13412F318384134B29F3F0C399F1973A3564E
F9C3C39B5BDD4C98D81A6CB476E565860B50704BD65ABD630A5F1372F2D826F3
3AD47C08B8AD3176A170C369EF3CEEB190134006D6135C5B8CCDBE1C11FFF1EC
3F6D8C46E15C4F5EB9ED9F31A129594D542D40DC3815CD075A0DBB648D868AF5
15A05C4BDB28BF23653A3AD96CF6AFC065DCCCB23D5D9A945F8CBB539DD3BFA8
DB8F1FBF9B6F25B41EB4309995CA3D5D6ABD70CBB4A2F0C6364E5439AD1045FF
72F6B45A30BD3A548CFAADDCC6C15D46F6D783D3E520215751DC98335A4ED512
D7D19235CDF911CC69F3CF4365B678EBF3E87C456A4E77339C74930083445588
462529C22A96A28C5CE87AFA0C981F26CAED5A1C8DBCDDA612624DBE0373F026
465185A4D8C73CCD8D71EE97116F8F7D341B87FD78F9CCB9FBDA2A7799711607
6BBA855AE9D5C505870DC85FDFAAA130A351D56AADBFBD6A7D52055E3200F8B7
8AE9A00092B55DEA8BDE224B4BA7FD4A191CB1FFC4CB995FEE1AC2883AB69E1A
AFFC09AB5B9AE311A030A5BA05E2213F9BBF016C8FA80689C069314D91274B20
53FCC65C7D7B3A7504887525BFFA060304931672A078BCD7F269595686310E34
E1ECA868899BC402D17EC36CE40D5041D7CEDA77F7764C9D98793F5334F574DF
E93CB10A5E8ADAE95CE63D2339557091B4B4911A4987CF21B7F1DBADBC2DD605
8EB72473C1F2EABCC44E0D0339EECB55DA74085606C3F89D57ACFBF5755A5395
CA8D4BD47E4EE8D8B882D3AB31A1F0C62E74654C7E041E4FF2693A38A9796064
46526B0A37E6B5BF8E48E80EDEF81E34DA8F6CC9025936A4D0E6D709D61B7B5C
AB550397117F3F9D2F5A542A64DEA8E1178F7337124D6B56BA92F659AAD694D7
391028731E01284BFEA635314A8DA8DF7A34EA3B6B2F8803BE6DCB423A9E8015
55EBD90EBAE8A00298B3B6B1C02BA516AF528122C1F2B07EF69F5466C2C36643
0D665D6561705509B7582D8301AF3C32E2F3B9433E3E04D62117C7E8A368BDE1
0D4DAA1C415B2A6573116D2A169AFEF700A83F55D88813585E89C94C07802BA8
3AE8F9BC3CDBFD9C2E35D062B1FD6E79E1EF104FC70B0AB09D12CA027F33F85A
22F0ECBB4AD55FE8C616B82C46CE69A600E4F767BD7A9C5F9B37A3196B038384
5DEF76A8884425FE598A63AEB19FA698C2AF7CAA4983CEC789268E22BA051EE0
20A40633D22D8F707626ED30E8273EAAD1C065F0B2E1718B5AC853ABE09330C3
B0082A71D557169BC1559B6D285A3499D41C4CCF1F74884EC3917EB9C574371E
AFE8578DDCA459B8D22C0188A8D150437B05FB92022C95EB6FBCC954216B5FED
CBC7C90B9A1F061376A9840FB64390A6BA99CFC8279A86A730C6DBFD14C53C4B
7277D676BD42203677E9ABEEC8C97E13DAA626474513B06F8734DD784F2FBBB9
B3B448B8E8221E380AB4A86D3A683B86A54129519D50DD4FE63B30954D805CED
A9A5D9A39C58B65B08E1C19555E927C6DBF7FD07252B2B57F62B905D6B488201
213D106A41033B26FFBAC2E616DA6ADA6D560BADF10E68872806CFD6F6E19D7B
57CF1F7A030A7BAD374F16A977E0ECB8742D034ADAF9C247DA19C8AEA74EF6CE
DAFD6B1DC562FD3B77E4D008BDE4D8C7FCA9895DA1AC9EAA01C32A0DA712B082
9438E77230D38FC4153E1711417B918BA6CC03203A5FF082AF880F48518D8271
C1121E4F1386B30A7F1BC6F10EA98443F8A65C867A109336B808BC9A8E2A75AC
F950835AA84B56F59DA4C8A18859C3B68F6B6DE09A6675F639EA9107BDB67B0F
54EBC564BC2D781B61C14363A54956BA78A2BB89C9F966C94EEFC29EE9F4E23E
C0BF750144DC289F0DEE1F8A25BB52E54F656FAFEE4BD2DA57E1306BBE648051
1D0CFD6A23A3DF082E3CF13197BF1B7FB22B2CD427BB78F455C9634DF989DC90
7BB2AE247B1C99AB2062855B2948341B0F857ACD750B59E370A6698C6A1F5287
72A4A9628A592E313956C242DF8277EDD2F1FDFB07CDC104275FFBF796D7518A
DF49FF3CDEC3BDFF1D290C382F244DF18005ECDABF0C5C2C64EEC4383E2E07DC
5C82587C071E59B46B7BEF31D268F39D9B12D534344FBA515E9DE8F166FAD1E2
7D1558967AAAD3829D3F7EC6938D20E5379F414532976ABA844D97A5E9078901
EAE4D0ED1F4C7EE7A2D80D891A5013D6409A38ACFA497F5A169EB7F9F4890DC4
62FA6A89EA48267331F086992B9CA9305E16611E6AEE67DCDD588A25D37F45B1
0DE75C802EE021E574B64B3969DE2E5061ED9364B646C38D4BBA86802CA6338A
94E135D2256920EBFB1AA22D9E90C7D16853F0DF9F2D942748EE540E4FCE63C6
5380D7AB4ADD6CB00FE8F7867E4862D8DB432F28331428CC350CDF7F447A65ED
D7683ECA35A22ADD06E9FE6BAF060913AEEE7B2B8EE4798E437698CC9EB2428E
74CE73F84D0D2292DE709D71FFF8901C3505370E6F1D4E28E6B7372492C65A88
159371B1D60D77CEC93B272B6C5394EE1D2EF9969DB2838B8E128553879A1BA5
2884B0A596E8FC3D1E648B7E26A4AC57DF09B9CE09B2F91D8CA618CA52AB3DBD
D005A56A420366069B73146A6F58E88BA49671A1AB7C2070C3D42AA770285143
40AE7D7868C0E1993506B07C086AD7D4F28CE2D15853FC5FBCBF9425D8012B9E
DB6E1E5002517659C8DA69DCEACA94F368537668843D281FC11782F1C5F71977
CA215349EE6F20565DE3D8D8212A40E1227A4B22965FA64A0B02C62BFDE97E6F
C3C54FED4057EF9D258C42D7440C78C5E0CC58A40DD74ECED4152F70A93CE71A
1B3A57C46F74A6D27BF98C97CCD31A8EA487260F224A3E40F52C65490AB4098A
7B9EEB54A5A415C8C88568F7D9EFE74BBB785FA18AA27D9201F28BBC477A20A5
D1307AA78EB8C7CAD409AB64B29E4115E45F5FADDCC80CA74B296C4265A40614
37F2ACD8386AC0202D6FDB6711E8CB06442F209D781E940ADDD6D881D4F8E874
357C533115923B90138FFE31D3577C6AAE60D768970FAAB682CD0DCA3E9A9A68
6393E4B772691C1013ADFFC90C508D51B02D2518ADCC7E79F7DE5DF9D18B8435
6129064DD1A3995E5A6F45D78287CC10A0EAFBF47223494C5EA934B1BC2F7C53
686C5880303F9E3ADC8B100D441D944686E1FD811C646C6DD0224F6CF55FA87F
D132EF50450879A25242A18683BD6D0266F8F333F3768D1952B0F32AA75106D8
EC0AB703F287E847CB91FFB88CD9DA174B49171822BDE34621CF41EA772230A6
3088F8D19CF2364A329162D39E166AC728B15800222E54C40FDA8B73C48CE82B
B2B3E7EF15157FB4510BCDD7EEBBE3FDDF708EA08540D94827AF3EA1B210446C
DEA9EE0EE9B4758863AA33FC296740F0DD9B42A45861516AAE6208F189D8CB8E
BBBDDBCC34B65A7D17B8BE932148C39084A9C71516582BCE25EBF7C1E0D84314
45B273AF903055D53313DBD159BB698038A397AEF418B4446739318E8D2730BB
6E4DD3C751E3FD6AD669D442E0EA21F69716B07C14F14443E159AFACEB00E623
17CF0B4499C079D5A6DCF4EA3363AB7D8607B409619E073E4F6D929DDA079A08
35039DDDE67828ADAFC3EA7A6B60A089510A8603FECB672875949BD3B1F79DBE
83B6B783EE0C8E5A208E229303FB68E7F48B0EB9653154D76F75EAF78BD04485
B87E21EB7D6A908608429632F00FAACF70BB554127AB1E09E052E9B25ED43BCC
2CD9D34DB25B1C87ABBB9CF7A32AE044C4904C375AAC2A5D03001E76093D5B58
813E53673DAB81F70A384D19EE70E9FCEDD3DBD7DA04872D650016D8F1365F7F
41CD6C5D58C94ED359241B9F91FB0604DD2952D32841ECC5048A2CEBF0025A99
F773BFACC0A4B683A4CA131B6EB15B4095F00AC42B3CC9ECAD676580F482D705
11930610AAAFBAFB2D497FE6A0F21CE88B35126DE1514F2B5E002852448456C1
E6FCF42F30289D82288F5DE2B395762DF4A1746770AACED8B8F1A61CD6580068
BD57A52EDA9FBACAC6255A691E67FBADB6444A70B4F6ED25209B72E39AFC7E85
E59755AF3DA4A64A1FFC58C75846F2AD9628C7428C4A921B1DCBE64808E61DD3
239F0F41E86F2D4EEB998520A57985CEEF4463EED9342594A74DA6519EE828AE
FE011DAFA5550F5E8A42634F9D5EF3020452EA3EE135E0A1038FE8ACDACA5B4B
10AB54777AD80394AF93CB2926B18D02BAB2836ADA4019D488DE5A1ED3478F8B
1E1B2861870AF7D08E4AE2CB1BD8EF2BAB6C72CE66E47A5D9717BC7D974D6490
7B200C7F91933A3A0B6F87E14C9F111E74ED5225D95B2EE12A3245E25D425EC0
618490528C5994D0718D24CC41444B99B216CA2883F16E8CF3E43018E89C2510
B4019869AA90BD057D58FFBA92A27AB9DE19D33EFE73CE2C661D619087DD1D7F
3DB9D3A9023F4CF9FF1E6D395989C35CB2D3E7192292EDCBD09E0FA952973282
4413A72119D248497241C94115156A99395CC93BAF71C2CF3D0B641218A69943
D9FFB44D0B778505A44854793C45320CBEFA42EF876524DCBBA3C5C1A579B151
E3771CB880B62C56A5AD19B224166F9A1AF82C9F1BD8832E0E2EE836DBA53E8F
0627A776FAD152B9B2BFB813813EF27C7B51A9DB721193CA230F3EE2BD888170
1BCAB0727785B2B87802A8FFE14C2D29377D84609D810DCBB307650FF82F11DF
2B7BCC96D6F9E86C177DF89736029219A8C248D19079E436C83E00F3605E1790
4C94FE6B0194D642442CDA50F204F63D9CD303D82C946AD1493D4911743D706B
D47F5D2B1B86D03E98D39C6D46261DF8383F779695C9A96911FA285F6B444E8B
F2CF369B556EDF637E33DED6C09C28D22BA4C85AABD0840BE949B99BF854AFB4
3EF2BF8A4F543FE3B1A67F1F1C017915D18821B7095496694434EA7415FDD261
77221CF4AF47C7D805E38A76B4ED204096FA88EF3A6E32E6DB1D3DBB370DEB64
A7EB16BC48F1CDEB59E602A26700E2B7D0474AE6281FF31D9EB9054286ED0CD1
8B6747D2B06A32879116F5A9EAA8A35DF747977604078288087B11D68689A48D
FDD3363051ADB8D3372CD34819BFE672B6286ADDC71F5BA213ACF2443BE52673
164D74D7DD72B4CC5E7C502017B7E98738BC7568FA52540AEE7A2EA4EA2F8876
5882D3F18D536BF508D5B85045C9BB928ED7943FFB332C0FE9CB71BAFCC4C83A
0994D60ABDB8CA7849222D1622CF2F01C3B5C8EF87531568910205C90AEA5200
6946AB337A00E92B7524C3E8145BF263DDABF2F767B02EC50450F5526149AFE2
8096A3FEB7EA9DF869FBA116A4882118FD6FC087AF6D499607777CE895831962
996FAAF13777DCF787632F9A1000E25E88A6E4C69AADFA1BA4281141CEBB640A
E316192579F39165B2EEADCF112689155F52E136F6CFB9EAAE7981DCC8E239CE
318271440112A7B00C07876B43D7E792E0D2624403FCB6A0264578A1D447658F
3786C386A67E909671C985EB0C952192926A3F1B8829DDAFC42F11F86F374575
AA63F86D3011DE4A065BCB4A10B91247F1048BFB84A9F2758D0D6AAC63D6B083
9A75CAF4A4E4F8CDEDEB0593DFC8041DF69811F9E5A94F994584CF3206465068
11A0B7EC863924DCDCF4E4C85BEFED5EEAE32E4358A224A05CD71F0E5E582EFE
58DFFF2A2258238F876A79640DD98A11E0D973B6617B38AD8C530FBDEFC76464
557408254B4ABE5DFDE58D385438067E62121C32FE45E57BD5CE0C7A99883826
77B27F21A1543348A490157FD74297849C2527349E50D3E6B4512BA40FF0E600
3F25F3CB682E8F4BF8FFBC44D51998F467BF68ADCDB76CBB1F6D5A0EEFA7A982
71B23F57F80DF58380C10846F540F526B6F23FAA7AD58C3B71BB10ABEF6C72EB
C77ED11E9311F08E260CF706AF8983215C1BC63029CCFF240AB7AA7709991228
4B255F566FEC9184D101CEBCC6192DE86E7C5C16FB6CA55703498A7C582DAFBC
BCF6547B709BC534BE9DF5C52233219306139517130EB074569F6316BFBB0643
26543E81C99A872A0B0B900228367D407A1DEF015701087B16EF54F70C233DE3
83CCDCBD2821CD3EB86DF48F1F5173C326DD482EB03B6F2D5C372E948AD39BA7
44F290AA43DCD7AA3E283ECACE9F4E481AA731A917617AC4DC4BC81F6132430E
D7F25578A4F104E7124276B0F9647DC4E21D40ADB4C0B69D3794AAD67A43FFB5
03858EBD6E1C870E46F128A55B68DCFD819B6344C23B9178372B7138AFF5418E
51D8B3D4E2373559EC202D2F226A32E5FF0C09B3FD2E14F1A9E4A3807E487E84
047EFD4A6F1DB310DF58D0A2920B7A7CFEED15F1A3F0127AB9E4F49B4D71993E
7B9AB14BD8679080844F2A6FB96001724B8D5EC423985F63F7739493EC3A6050
8CAF2CE45BB6ABA32CC31E8949902E23E1821A4AA869029FB177EDD4069757FA
11311F67DEFC353F9FFC8947269E4BAA95DC22A873D20707684CCA9E157D8297
608720EB84F72AD925C6E2CA10D2AC05CBCAE9824C2802905268F80D544A4B96
1639B5427F643BD630DB75B6A463787912C8DFE219E24332C8E18028248B58AD
DD18F26C55D7ADE52F52E8E78211406C57AC3A093E92118B53CEB20BF06930D3
9D4AAE2F50477DC5875738F6C226F7A1277A5C88C494B62176A81C7D2CF3132C
6B16B829DA2EC4FEB4DF3B9BDAFE15CE68BD29FE970CFBDD00AA397A6277C31F
7D2F6B238F5F0663C5EFF66FF4C145358BEF691587F7D9BCF03C9FDE2A03B31F
7BE43CBD84C66987CBB64EE882361EA940D131191ECAC972BD9E7686B775BF8A
72626AF9399B496C50DA6AF8E4D4CDADCB5EDF6EAC3E7B9FF7E838EAF358283F
38E72BE09F10B9312F6D94A2E873B880316EFF43705E08F9E461BEE996842AE4
C9F601DB0D31405AB70056F834E25C9E50BC0CCA1325069872C5B3BC92FB4C18
C1C64737E881E0CC190B97BC15A4FF5221EF81D27A91F1ED536615B369A87B49
5866700C0A620046D8A66D2E5384BD0D0287F3A051460FF56D6D2325B81124D7
B3BD48D51142DBA7903D7CB94057AB2E439BC7A6BA5BB2FBEE8E7601E4F2A18C
91A75DFE07D98D15D7D9AF5C70F9851610F54E20C9B98D207300D2F68D80FAF7
274E5BCC6C43C0FC25AD8C8ED56AA4D0AF4F3B0A527B71036767FE3D36A832FB
280396846A409966DB1EF87F1DE663F986C623F0BDE63A09C982A8D6A9BA4E35
9F92DA448DCD515DD23606026412914C126283EC413AC1FAA0112B13DCC7151A
B95A8E3BF31BA8B0E2D1004A0D77F410CD5CD094CE79E25D3C3AAAD216A6947D
9A88604DA978755D67838B8E8B5A81420C7A314C561441335164C3860881540F
E1427D0ECC4FAB005A94880800B3B3A55503EA80AE004FD566A4E9B997D1519F
2242E2EE3F7B74048CBBB23E79B1D5BA426F50C9FD217B49D206904E5FE90778
344CF7C056BD1ED3A7880ED4E16525A82669C359A226B14D51F51EDADD746F6A
8AE980D80CFB0A1563D797EA6DD9774E87EE19033D0129E17E0CC856FC4D0412
F1EE24377E655BA379343DC6052CA4B6D9562B4DEE9BC077E2EF158F4F144C8D
795DDA8855F4B04E41747E53EE9CDF24A255BE7BE765640F6FADA0863704C22F
2C4ED6D101237F451A15118CDCF1B36B3DB976F0DEAEF4D3C382894606093205
074BF7E177379A796EEBC8135E820FCC7A7DFEB8D59C5FCB07E9C544C7B1A47A
E3D5B7226C3CC9C55E4FDF208CF51A027B856F8C5D8F513B3DF415DCC323099D
E0D67A2C126B44ADF359B1CE88BBCEB7A8C2AECA40B920E846C9C074C0A9DD98
29746E5E1C0DD5C14BA7918751A4AD40132DDF2ABD1798C6F2DE8F23B49F9D62
49F41156107A5B10FAC28256D98AB42B2585BA0242F3B794D3CE894BD673BC52
B0272D658D6E4577072C012FAEBC5419FA403C4D0B812181942014F75CE42D6A
13344316126D69E46768D3080026E90AE1EE2BFC6DE8100247750F9740A113F1
5E543A75AFF06F057625840BC8FA3E02D9B586D625EF1FF11D94C51A55DCE359
71FA8473974117DFECBEEEDF886A34A3D20DA51A454A06F809EBD64A7F8CF743
7BB71AF88459D6B3C6EDFB57E34E45CF9E346CE26E5EAFE8545D9F88FC6B75DB
4388B5B4798D4F850C71A16C7FB42F9C399FC7F0662734A6CB075EE04DD2B8AE
2CCD55EF4B15B48CF0B31201D91BFB7A2BEC86AD137AF3F99CA85CEE6C884F10
C1A6480DC909CB1EA5D4A5AEAEEBF362A2ECF5F97264B87ED8FD0C2CAD084C47
70169C8A9AE2C13FEA56B24B9931072830CED547EB97E62A80ED79BB17E46FBA
A4FDE0FD24EACF7FE3DE26DADB8009482EA2AC62E171BC1F37CD945CDDD2221B
3F4F0128CFEC1162C7B92E27105E1662955C947761B7BFA1B353F5633AAF49AA
067B5D96F3C817B7708B5D2B98DC412397215E740AFCFA9B59885E17E6B9E79C
0432285B20B2806F9B56F57515AFC0DBFC4DA706E1A857FEBD68332D008FA36F
027B8927EEE107EFB88E92C921933EF4536605807DB873AA3B7EF40EAC818D01
65D4C6A0CCB5F407B1A0FD7529A127E0834B308609115C3442A063233F25A039
332304875DEAC76D3D851B173A85C07FB1ECE1A8CB4021881972FC2055214540
6A66BEDA95E6BFCA5FACC7AB322902B69EBE3903E7FB42B18939B04C61700843
E2CD58A8F969FF5210D6239ED84CF111A39CE308C99D8825AA53196E12C90DBC
A165C40618363E875234D5A0EC24C39A582E6D379D466E15E75A1F2AE1F762C9
D4D747F6C499521174113CBF89ABBF727437F3D82754A662C0BBEF49CDF4C43E
0C948DC6E822932BA63D5B2F14753435CA4BE38025C680C7626C58E6CF0B1634
01B20EB180B9197878318DA78365C83F0A70C73D8DCF90A77A31F94CCF276899
5E5D607CF07E8D1473D2999BDA2CAAF738D8DE7C443D53965AB5CAE4A7C2351B
E48F2EECCEE13CDB2766F92250313A05955BD144E1F3CDA15E68EDB7909AC0E1
2FEC922AA0C36EC00A87C336DD2641015B75F67F17E2C5AC3E74C9D0A0E2B817
B6DF5F7CD54967B708E170D5E08B523FDF8F20814A85F06F40FD80AAC28FBB8E
804C43DF03F2AA26C20AABFBABFD2A446D883DEBEB9438FD6566B9913C211BB9
6CA68F0E9917D7E3CFCD172434D4F5D0F07A2C841BF13B149135335221ECF30C
7DC52F44FA2DC0E914BF1A762C1AF8B913F2E75A8BD803DC1FD78B733226593D
4255AEF3D720EB5C29AAD78E992D853134FAA95C5DAA3A5FD8A0A3655D0AC0AF
54CCB1C7D0C83DE7E46EA49BE37D3F6E7017E3664E3E5112EC95B05143C73148
054A19A08DDFBF517351CCC43846C6EDA2A2DED66BF520AD93B522879BB5ED7A
F4B3E510B57B1F54A720829BC84BE40B57775EEAD26DD2FA136A5FBC6925FC0C
789A99035F833B86E7EAF5434ECA33E8DB147227671424645187CCB64496EBBA
231B8314EECA4D081F1D1C117274A410EDB60EAED2A6801CD640D744B7E3EDEA
4600B04BAEAF748EA5A79F6DFC5E22683206CA1CC1435CFB55333ADE10C84B94
6482E0782C22DEB72A738E02CFC3B5F9C6D2BD097D35EFE9F649E77FB254C04C
AEE11223414E2C36251E5544748DD814603FF4C1FA3484D1C47A66767F017FD1
08BE7F35BAE69261034ECC4B9962A896614FB0C793375FF795113CA1EB0E1A9E
05F28FC0381BE18A7456E95D69699E5BFE9B6B6DBCCF50D418BA1115302CF397
4961426A2C448670B8C4D6C09709F2056D4ED1FF6AA13691AD9A02A341C8A8DE
F3843DA2354E90D0BFF854CD0BEE7AC926FC699916914598DDEF0F33B05DD1F7
B2EAF5943FCD0F8EBC8F4AEF4FEB62E8287FC042AADE6B6EBC6C453B2D8C66E8
19F01BD817A50B3ED35901ECA519FB984F2C095BC789A5DAB7D145B7E7BF6839
9A2DD29ABD6294E3FB999E08495A5EB1343A187D56DB218D57A6F0E2C9849BE1
0248AF87A7748ECE6F943C0B94EB7407F2B8E571D105C73854B216DF936BC34B
EBB126E0599A1F09A72D872894AA49E2D674291678A6FDC5C4E1084F1AB1B5D2
E38E82784A9ED7294DE7E2F84625F3D60C5B4EDF974053DAAB56B1075AB59340
374B6F4CC8911335208AC93FA2C8D58DF1377F31F3C194DFF11AB19CB693F903
04CBC79643C19315E3919773DAB1EED11ED84E4ED418804D0C0424A3DD61F952
5373459E21276CBDC7E87C926A079FD79F94B300693BE1D85F0275A624CA80AA
D0FF31BCD4EEDDDFA5C00DA2D4F3106E746FA97EB9802E42A08187E2CB82C498
6BA5B1264795FEBF709586E456BDAF786A66C0394E310E8AAC26FD1E26B72458
367F403D3D0DE86A581F7F0D4780B13E14118AD7F842A8ECFFDA13FD9CFF6E03
4C3F7DDD909B9FDD4FE4FB8ABA5A96BCC523E7F50D4DF02199CA382A7DAD9958
9D4AD2648E2C217D402A075549D06F8C52125F72D13EA5092CA79DEAA5773782
D9008A2184B5A9A12303BC6B7C2839225F193C329C70DAC4BED15CFB79C59A63
93A8D404B70EFE92D47BEC8F815C29757C0532E17E9BF67783F8CA568FD19287
4CFE3B31043739BC1B0018D52F16CD9938350B07008FD0BA66EA1C024FC804DB
A8AAFAC64A1665F6BFDDC436D0C7BFE120063B94EC7B4E6F1F3909C240DEE6CA
C672E3AE9FF4FC1EFF28B8840CD10E67B3BFFFDF9B4A57A3C8D0600CB404C98D
92A66A46A47124AAE910E5186F9AB6C3296AB5E75F2FC5024FE33FBE3DD5F0A3
419CAB7E488B49742A7B12A9B4A2932A6786723AD6183263C42B2FB301628AAE
6F800BB274C6BCC7C898F5D4C00F0F1DB364EFF9E1284DA2DEA483F639E1BE70
65968D62C0D3FEB4A59695BAB249EF8C7FAFBF0974230D6F7169B16A6F1957E9
C5F7A60CE5FFD76FE3FE3AD1D5B35D578BCAA7C181341CF071EDCF79F67F2940
97B24A51744D7A4F5AD9A2C31F1701700EFF47721584EB40BC61817A88E2B2DE
57601993161EFB5101351E486A622664511786D9B30EF0B7EBE739D95C48A664
6B6B409B8DD7ED7F585F5390AF9EEF502878963E146A0484BA4AFBC66001FC5C
AE1150501702D69ED24F9080E9F975D3E1F3783FD1880A98EAD36D6C5EA24A02
77ECA4AECAB0125787095ACA9E34C4E628E72CB796F118A4706ACFC8F5B0B5FD
B89AADD6E85B42A45F885A3B4568A0C48D89585BA12CCB4F279447D8A6906D1B
4EC184F93FF72D487DA7A5F548011F8CBFAD20AD5FE3F03263B5755D533ED6A3
086392006A7E0D1A6DC361AC7E8155AE6B860FD58D253DE09A09C35505AF04D1
13733EDDAFC4487DAA0FA8BA898CE319505244B41A35603ABFF8F8D669B1849F
0787F4A42FE1890891CACE1A67C8BE32C7B82AE5029D030B9D8B884550A3D0A7
10E03F57F9667D2515E69B9CBB7E903C82D020A6D53074F1B38562E968F16263
BEC5BC86D32C48B725353C7CFBB530A63F94EB21D55CCD561175342526B4C1DF
B79498E70817E844444D627D2DA8DED2D158091D99317CAE22A09BDAF9B2D9F2
C10159EE92C0B6C56D0E8E0312073979314053EC70905BA0A545B41AB9E24C16
1B72889AA88F9DE9ECDE57FB0FA418C6C7793FB729C7A25286D0C736AB8C0E56
94757876A17B45625E9A371BFD84D4B27A55AD6528F0A9D8698021662FD78A3D
9872EF8357C133EAD11EED0841D6F00A4558126BB5EAE1C2B0FCCE4ACB79D8AC
58CD10693AEAA0182947C095C66114C2CC0735758B76D29C2CD680F7E51BB8CB
307654D92A5459825F009B95ED2EAF01DD139A1D98E0F76A5E88F8F33DBA2185
CC61136060BD7FA6FA89D6C59AAEB4EF9A0BFCD4CE3A7B1BC0BA9501B7398B88
C97A666E861AF347579B7B9BBCAC22E2D3B3322FCDC03371A28589553FFAD91D
D89EF103C2D55629B91996E065BCBFE2E013F98EA5851D818461EC2A8503B4D3
A68DE41F0C327D60C6F5BF5316445D18E653BC350548583F7C65B1841AAE0BF8
5E695CFF179AA9DCACCF95A1CEF670DC9620F0E446E311E52185A19E3A45E1F3
68B8A3FD80786625B1C2793928598F97DA9FB44D9A3542A41205F6E928009E75
0C11C5C982CE07576C4566B8858936FDF2BD00F4280426887FAFAAF400F1F1B0
C16E80FDE4F2266C5628A87949CD0D4D2A5FE13C93D502BAE11CF2AAE76A4162
1C5C0742927405876C326A45AC9BCDED29B285D65563EC9E6754600A08583D01
52DF5275E978A05701ADE9A3E5BE16D0D1E7BF72A3B98626F7C3AAB5D9AA2D68
661B5F6303412A5547AE70008CF34F443E874BD6CCECD78F9F4ABC5B04481F76
6FBB3FC7FABBA1E750332CE004462A5A7906C406948F59EABA8800DD440EA90E
9611363C2AA3154F600EF4F528A4BD3263B80716B9CD98D554461A909467B9AE
7AC75C5BBE5F2197BE968B5B231DBCE4AC7D7A24AA04867AA4088EAFBA36F11E
A47A4F867086F65074F891B1BA938C393FC83A35D518CF79DCD479E87E555799
A4DC099F3C7A0AAD7BA9659FE24E2FEECF84822D05F17084D1D81DF8881B96A5
D1A66C812461CED3461C2F222C3D663541888BB74E33A8DB725C3C25C660B378
EEAB1FB1F22FAE7956C6BD18C0A5973CECD94DB7C77903444720E15976FD188E
FEED8B61483A1B5BA7F80EB515E6ED5DB4F6B9391538E8D33FA554C0BA18DCB3
54BE93E19418856A6CD0086354C17A87AC1AE1766406002FA2421F56DC3309BE
BEA6696BEDBCE98CEA3637668C877DF5576F2FBEF6727A3A68EB8B7DFD32AAB0
295DFDD787D5FE1A8B70AABC9A8315C70377C4D8C034AD3AB655E5584D30F139
E76B491BFE44D08E07C22EE65EF56E4869D411C966583A267065CC2F89163632
BE020655FDFD6976F1864751D29EC396C5115D291DAB734C4B8194FF7361F8A1
11DF9E244F428C943B368D6DFC40513691F4801E9990901E682912C81C6A6211
109C0DC0498C91C31B6429F49DED6896458B7BD4C51B0DC1FE863ED5B2260860
F0658F3ECBF3981439101ED7189BCD066937B6DA1732C4ED81DFE5BC67CB2FCB
3E98FD071EBE14595E1E479D0E298FA55BD0823BC6180B95031098CC137AEE1D
92DF3AC836C360899581C93ED2024C12E33E6B4227E8D38EE26EF81305A2D75F
B251FAD315C67B46046284664004F3788877A3104070C2B6F3750679BB93FE83
A90A7A0BF28958879CEDF1EB98EFEC56B1DA439E663767891B9A87C112015CEC
4C63C27AEB32FCACD2D59FCD42401440954C1C005EBCAA560FFAFBA9FEDF16C2
F8CA1A41BCDCDD0CDC404551CA304856D0BFC65DF6124EB62012313D2B9EB4F3
71187942BC8C7FD8B6FD22E588B5BF72A840D19943215188759F7AD3C96525E8
6C57E17171BA71AF28271FFF87640C071CA8DC125A2EC8AA273D1DBBCCC9FC69
B7E1A349E4C32DBB666E2DCB0E55CCD29A33E32056156B45156B9AA0FE755C94
99B94248C574989EADAB0830281CAFD74A099132EADA31B875F9B890B7FB9A22
DA2C0B35990D3A8F12F5874686920C2C7CDDBEB075BB1BF4FC8746B6005DF00C
851E4D58BC870F9239562505DAA4818F9AE4DD5A4750101C95D7E838F925764B
DCE2146F1FECED6187BEFC549867AA9469ADF8B7409B63C76274BB68521FE6CB

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 221710428 156819571 1000 600 600 (poster_landscape.dvi)
@start /Fa 144[42 47 4[25 3[38 22[62 1[52 2[32 4[63 59
1[62 65[{}10 83.022 /CMTI10 rf /Fb 138[53 37 38 39 1[53
48 53 80 27 50 1[27 53 48 29 44 53 42 53 46 17[72 1[91
6[60 4[72 18[27 46[{}24 83.022 /CMBX10 rf /Fc 144[36
40 4[22 3[33 14[53 3[52 1[48 1[53 1[45 2[27 4[54 51 1[53
7[36 8[36 8[22 39[{}16 66.4176 /CMTI8 rf /Fd 169[41 86[{}1
66.4176 /CMMI8 rf /Fe 139[24 1[24 2[30 34 50 4[34 24[47
27[30 30 30 30 48[{}11 49.8132 /CMR6 rf /Ff 136[51 37
39 27 28 28 1[39 35 39 59 20 37 1[20 39 35 1[31 39 31
39 35 3[20 1[20 4[53 1[51 39 52 2[55 1[65 44 2[25 1[55
46 48 54 51 50 53 7[35 35 1[35 35 35 1[35 35 35 1[20
24 20 55 1[27 27 2[59 37[{}52 66.4176 /CMR8 rf /Fg 135[59
1[59 62 44 44 46 2[56 62 1[31 2[31 62 56 34 51 1[50 62
54 7[85 1[116 1[86 1[62 2[77 1[88 4[42 1[88 3[81 1[85
65[{}27 99.6264 /CMBX12 rf /Fh 132[42 37 44 44 60 44
46 32 33 33 44 46 42 46 69 23 44 25 23 46 42 25 37 46
37 46 42 8[62 85 62 1[60 46 61 65 57 1[62 76 3[30 1[65
54 1[63 60 1[62 11[42 2[42 1[42 1[23 28 23 2[32 32 25[69
2[48 11[{}53 83.022 /CMR10 rf /Fi 134[62 1[62 1[62 1[62
3[62 1[62 62 62 1[62 1[62 1[62 62 62 34[62 17[62 1[62
44[{}16 119.552 /CMTT12 rf /Fj 134[62 4[46 5[65 1[33
2[33 65 59 1[52 65 52 1[59 9[120 9[107 1[91 7[85 20[33
46[{}16 119.552 /CMR12 rf /Fk 134[73 1[100 1[73 71 55
72 1[67 76 73 89 61 76 1[36 73 77 64 67 75 71 69 73 9[132
2[94 1[96 1[89 101 8[85 89 1[94 92 97 6[38 4[66 4[66
66 1[45 45[{}36 119.552 /CMCSC10 rf /Fl 139[122 1[124
12[115 3[127 9[228 4[165 14[162 1[168 65[{}8 206.559
/CMCSC10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a0
a0
%%EndPaperSize
 @landscape end
%%EndSetup
%%Page: 2 1
TeXDict begin @landscape 2 0 bop -600 19266 a

 -600 19266
a -600 19266 a


 pgfo

 save

 [1.0 0.0 0.0 1.0 1685.21857 1191.98387 ] concat

 [3.42758 0.0 0.0 3.42758 0.0 0.0 ] concat

 save

 [1.0 0.0 0.0 1.0 -492.09636 -348.06815 ] concat

 pgfs


 0 0 0 1 TeXcolorcmyk Black 0 0 0 1 TeXcolorcmyk
-497 19163 a

 -497 19163 a -497 19163 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 0.49815 pgfw

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 0.0 590.7507 moveto

 0.0 640.99005 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 0.0 638.49934 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -447 19407 a @beginspecial
0 @llx 0 @lly 282 @urx 184 @ury 671 @rhi @setspecial
%%BeginDocument: odulogo.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: ident_odublue.eps
%%Creator: Adobe Illustrator(R) X
%%AI8_CreatorVersion: 10.0
%AI9_PrintingDataBegin
%%For: Old Dominion
%%CreationDate: 7/31/2003
%%BoundingBox: 0 0 282 184
%%HiResBoundingBox: 0 0 281.8409 183.5250
%%CropBox: 0 0 281.8409 183.5250
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI10"
%ADOEndClientInjection: DocumentHeader "AI10"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)
%%+ procset Adobe_CoolType_Core (2.12 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%ADOBeginClientInjection: DocumentProlog Start "AI10"
%ADOEndClientInjection: DocumentProlog Start "AI10"
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 60 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
	
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup /Cyan eq{
						pop (_Cyan_)
					}{
						dup /Magenta eq{
							pop (_Magenta_)
						}{
							dup /Yellow eq{
								pop (_Yellow_)
							}{
								dup /Black eq{
									pop (_Black_)
								}{
									dup () cvn eq{
										pop (Process)
									}if
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	
	AGMUTIL_GSTATE_flt setflat
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/rdline
{
	currentfile AGMUTIL_str256 readline pop
} bdf
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/AGMUTIL_imagefile nd
/AGMUTIL_imbuf nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMUTIL_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMUTIL_imagefile exch writestring
		}for
		true
	}ifelse
	end
}def
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 205 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
		
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 8 def
											
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						currentpagedevice/OverrideSeparations known
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				true exch
					{
					convert_spot_to_process and
					}
				forall
				}{
				false exch
					{
					convert_spot_to_process or
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/clip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&clip /clip load put
			/clip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&clip
			}def
		}if
		/eoclip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put
			/eoclip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&eoclip
			}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
		
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
									
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 exch put
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 exch put
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				AGMCORE_&&&setcolorspace
			}def
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave 
		dup begin
		1 setgray
		0 0 ImageMatrix itransform 
		Width Height ImageMatrix idtransform rectfill 
		end
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/get_csd_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		/AGMCORE_CSD_Name xdf
		AGMCORE_CSD_cache
		{
			dup /Name get AGMCORE_CSD_Name eq
			{
				exch pop exit
			}{
				pop
			}ifelse
			pop
		}forall
		end
	}if
}def
/cachepattern_level2
{
	4 dict begin
	/comparebuffer exch def
	/holdbuffer exch def
	/readbuffer 1024 string def
	/LZWFilter holdbuffer /LZWEncode filter def
	{
		currentfile readbuffer readline not
			{pop exit}
		if
		dup LZWFilter exch writestring
		LZWFilter (\n) writestring
		comparebuffer eq
			{exit}
		if
	}loop
	LZWFilter closefile
	end
}def
/cachepattern_level3
{
	3 dict begin
	/comparebuffer exch def
	/readbuffer 1024 string def
	/DoEOL false def
	{ 
		DoEOL
			{
			(\n)
			/DoEOL false def
			}
			{
			currentfile readbuffer readline not
				{pop ()}
				{
				dup length 0 eq
					{ pop(\n)}
					{
					dup comparebuffer eq
						{pop ()}
						{/DoEOL true def}
					ifelse
					}
				ifelse
				}
			ifelse
			}
		ifelse
	} /ReusableStreamDecode filter
	end
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
	makepattern
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		
		dup /customcolor_tint exch AGMCORE_gput
		
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		fill grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
}def
/driver_check_media_override
{
	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
	{
		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
	}if
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.12 0
%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.12 0
userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dict
def}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Data
begin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup
/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{
dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/args
exch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}if
dup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exch
getinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end
/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub
@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel
@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{
Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def
@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop
}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel
@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get end
countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def
/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub
def/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvx
exch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname get
errordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{
@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}
ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel
@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def
/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp
/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashow
load def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin
/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32
dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def
/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}
bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{
systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{
undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck
{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin
/globaldict where{/globaldict get begin}if dup where pop exch get/globaldict
where{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop
}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{
dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{pop
pop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict end
exch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal dup
length array copy exch setglobal}bind def/newencodedfont{currentglobal{
SharedFontDirectory 3 index known{SharedFontDirectory 3 index get
/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory
3 index get/FontReferenced known}{SharedFontDirectory 3 index known{
SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}
ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}
if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1
roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1
index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exch
dup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if def
currentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{
$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategies
known{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlength
add dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init get
exec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}bind
def/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}
ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21
add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch
(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}
if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def
/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{
/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{
/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}
bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4
index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin
$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1
index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2
index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSub
true def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfont
exch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup
/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def
/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 3
1}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?
true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch
?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def
?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1
index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont
?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getinterval
cvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exch
definefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup length
exch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index
?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add
getinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup
/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data
/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def
/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont
/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloaded
known{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict
/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2
copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparams
where dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{
get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 get
begin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128
string def/$slen 0 def/$sname null def/$match false def/$fontname null def
/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname null
def/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin
/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFont
exch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exch
definefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def
/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1
255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin
/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1
string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfont
cc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont
/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}bind
def currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin
/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontname
exch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{
/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch put
dup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def
/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}
ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0
setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exch
moveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsave
Level2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall pop
grestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobal
exch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontName
known{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName
$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}bind def end def
/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$Oblique
SetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup
/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slen
getinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exch
putinterval/$match false def $SubstituteFont/$dstack countdictstack array
dictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}
$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont
/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forall
pop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dict
dup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2
index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copied
exch definefont 3 copy put pop pop}for def currentdict end}{$Strategies
/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index
(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gt
and{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{
$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap
findresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup
(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop
$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index sub
exch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getinterval
exch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1
roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{
def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{
pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse
}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0
def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt
$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelse
end}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfont
load put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontName
known{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{
/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFound
true def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{
pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq
{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup
/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print
( substitution revised, using )print dup/FontName known{dup/FontName get}{
(unspecified font)}ifelse $str cvs print(.
)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end
Adobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1
index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if
/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1
sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategy
known{$Strategy/$BuildFont get exec}if}if end}bind put}if end end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.
%%Version: 1.13 0
systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelse
exch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25
add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exch
def/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun known
not ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont known
def/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def
/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500
string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{
pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevel
known{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFont
findresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exch
length sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFont
findresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+
{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vm
exch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vm
setglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$
type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data
/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{
Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcode
exch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod put
stringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 3
1 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{
$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvm
setglobal}if end}def/:{string currentfile exch readstring pop}executeonly def
end ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09
/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C
/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F
/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42
/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55
/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68
/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B
/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E
/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1
/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4
/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7
/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA
/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED
/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.001
0 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx exch
errordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get
(Error: )print dup(                    )cvs print errordict exch get exec stop
}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8
bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility
/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dup
string/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def
2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 index
add 2 index length le{2 index getinterval dst_string dst_index 2 index
putinterval length dst_index add/dst_index exch def exit}{1 index length 1
index sub dup 4 1 roll getinterval dst_string dst_index 2 index putinterval
pop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2
index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}loop
pop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{
/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename
/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomark
currentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresource
begin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecode
filter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}
ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def
/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal
/Generic/Category findresource dup length dict copy dup/InstanceType/dicttype
put/CIDFont exch/Category defineresource pop setglobal}ifelse
ct_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)
def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def
/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1
begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMap
defineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def
/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2
copy known{get dup dup maxlength exch length eq{dup length 10 add dict copy
ct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop
/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1
index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop
/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource
/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copy
known{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop
/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus
/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init
{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()
/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup
(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring
}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelse
load exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZE
le{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put
}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1
exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2
index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch
1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2
index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec pop
dup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop pop
false exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArray
get 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc
1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop pop
pop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 0
1 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index
2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin
/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{
ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin
/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{
currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end
/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def
/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSET
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{
exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exch
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 roll
GlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}
for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontName
currentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartData
ct_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSet
ct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop
/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInit
ct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSet
defineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def
/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSet
defineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index begin
CIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCode
exch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop
0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}
ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}
ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval
/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid
0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 roll
true charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}
def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidth
moveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aload
pop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}
ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{
currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dup
maxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}
{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def
/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1
dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdict
end/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup
/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring put
rootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfont
ct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{
currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidth
setlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDict
ct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dup
ct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}
ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private
3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869
internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Private
get mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse get
exec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def
/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get begin
ct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def
/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def
/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding
ct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11
dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def
/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load def
ct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def
/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def
/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def
/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def
/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string def
currentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def
/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dup
not{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WMode
exch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrix
matrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}if
def/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{
2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if array
def BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont
/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProc
known{CIDFont/CDevProc get/CDevProc exch def}if currentdict end
BaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVector
exch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 mul
def FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16
BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}
for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefont
setfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths get
begin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2
index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astore
def}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def
/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop pop
exch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName
3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}
bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMap
ct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind
def currentdict readonly pop end end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 65 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment
%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if 
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				AGMIMG_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
  	 						currentoverprint not{
  			 					1 AGMCORE_&setgray
  	 							knockout_image_samples
  			 					currentdict imageormask_sys
  			 				}{
  			 					currentdict ignoreimagedata
  			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										currentdict consumeimagedata
									}{
										invert_image_samples
						 				1 AGMCORE_&setgray
										currentdict imageormask_sys
									}ifelse
								}{
										currentdict ignoreimagedata
								}ifelse
							}{
									
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
							currentdict consumeimagedata 
 							currentoverprint not Name (All) eq or{
								gsave 
								knockout_unitsq
								grestore
		 					}if
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/imageormask_l2_overprint
{
	
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
		
						mark exch
						dup	dup dup
		
						
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
		
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				currentdict consumeimagedata
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			AGMIMG_&image
		}ifelse
			
	end end
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/ImageType 1 def
			/Decode [0 1 def]
			currentdict
		end
	}if
	dup begin
		/NComponents 1 cdndf
		/MultipleDataSources false cdndf
		/SkipImageProc {false} cdndf
		/HostSepColorImage false cdndf
		/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
		] cdndf
		/Operator /image cdndf
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/InksUsed [] def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
						
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
					
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%ADOBeginClientInjection: DocumentProlog End "AI10"
%ADOEndClientInjection: DocumentProlog End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
%ADOBeginClientInjection: DocumentSetup Start "AI10"
%ADOEndClientInjection: DocumentSetup Start "AI10"
Adobe_AGM_Utils begin
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
%ADOBeginClientInjection: DocumentSetup End "AI10"
%ADOEndClientInjection: DocumentSetup End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: ident_odusilver.eps 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI10"
%ADOEndClientInjection: PageSetup Start "AI10"
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%ADOBeginClientInjection: PageSetup End "AI10"
%ADOEndClientInjection: PageSetup End "AI10"
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -183.525 translate
[1 0 0 1 0 0 ]  concat
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 183.525 li
281.841 183.525 li
281.841 0 li
clp
[1 0 0 1 0 0 ] concat
%ADOBeginClientInjection: BeginPageContent "AI10"
%ADOEndClientInjection: BeginPageContent "AI10"
gsave % PSGState
0 0 mo
282 0 li
282 184 li
0 184 li
0 0 li
clp
143.929 59.7061 mo
143.929 45.9263 li
59.8091 45.9263 li
59.8091 59.7061 li
143.929 59.7061 li
false sop
0 .168627 .372549 rgb
f
59.6289 25.9839 mo
59.6289 25.9839 56.1768 20.73 59.8091 15.2861 cv
62.7432 10.8818 67.4209 10.2119 72.8608 13.6563 cv
72.8608 41.5781 li
59.6289 25.9839 li
0 .168627 .372549 rgb
f
77.0332 25.9839 mo
77.0332 25.9839 73.583 20.73 77.2109 15.2861 cv
80.147 10.8818 84.8291 10.2119 90.2651 13.6563 cv
90.2651 41.5781 li
77.0332 25.9839 li
0 .168627 .372549 rgb
f
144.835 25.9839 mo
144.835 25.9839 148.283 20.73 144.657 15.2861 cv
141.717 10.8818 137.039 10.2119 131.602 13.6563 cv
131.602 41.5781 li
144.835 25.9839 li
0 .168627 .372549 rgb
f
127.433 25.9839 mo
127.433 25.9839 130.877 20.73 127.249 15.2861 cv
124.315 10.8818 119.633 10.2119 114.197 13.6563 cv
114.197 41.5781 li
127.433 25.9839 li
0 .168627 .372549 rgb
f
94.0752 24.1699 mo
102.141 41.7583 li
110.753 23.082 li
110.753 23.082 112.749 17.916 109.215 13.8359 cv
106.185 10.3462 104.133 10.7583 102.503 10.5698 cv
101.823 10.5698 li
100.193 10.7583 98.1392 10.3462 95.1152 13.8359 cv
91.5771 17.916 93.5728 23.082 93.5728 23.082 cv
94.0752 24.1699 li
0 .168627 .372549 rgb
f
102.231 8.45801 mo
104.567 8.45801 106.461 6.56396 106.461 4.22607 cv
106.461 1.89209 104.567 0 102.231 0 cv
99.897 0 98.0029 1.89209 98.0029 4.22607 cv
98.0029 6.56396 99.897 8.45801 102.231 8.45801 cv
0 .168627 .372549 rgb
f
101.735 85.6431 mo
101.735 96.9712 93.1094 105.424 81.4937 105.424 cv
68.4976 105.424 61.022 96.2817 61.022 86.0454 cv
61.022 74.3145 69.5327 65.6313 81.6089 65.6313 cv
94.8921 65.6313 101.735 75.1772 101.735 85.6431 cv
cp
68.8428 84.3779 mo
68.8428 92.313 72.2354 103.125 82.0688 103.125 cv
88.624 103.125 93.9146 98.2368 93.9146 86.6782 cv
93.9146 77.9946 90.0044 67.9316 80.8613 67.9316 cv
75.1108 67.9316 68.8428 72.1294 68.8428 84.3779 cv
0 .168627 .372549 rgb
f
109.655 98.2739 mo
109.655 100.071 109.727 101.365 110.266 101.975 cv
110.697 102.478 111.272 102.766 114.147 102.766 cv
118.137 102.766 118.712 102.586 120.365 98.8843 cv
120.725 98.7046 121.3 98.813 121.479 99.1001 cv
121.192 100.61 120.401 103.341 119.97 104.311 cv
118.46 104.24 115.37 104.204 111.344 104.204 cv
107.606 104.204 li
105.773 104.204 103.977 104.24 102.467 104.311 cv
102.179 104.167 102.072 103.449 102.395 103.269 cv
103.473 103.089 li
105.163 102.874 105.486 102.766 105.486 99.0278 cv
105.486 85.6582 li
105.486 81.9204 105.163 81.813 103.473 81.561 cv
102.467 81.4175 li
102.215 81.2378 102.215 80.519 102.539 80.3755 cv
104.336 80.4473 105.953 80.4829 107.606 80.4829 cv
109.188 80.4829 110.805 80.4473 112.386 80.375 cv
112.71 80.519 112.746 81.2378 112.458 81.4175 cv
111.667 81.561 li
109.979 81.813 109.655 81.9204 109.655 85.6582 cv
109.655 98.2739 li
0 .168627 .372549 rgb
f
125.612 85.874 mo
125.612 82.4238 125.576 81.9927 123.887 81.7769 cv
123.132 81.7051 li
122.881 81.5254 122.881 80.8784 123.168 80.6987 cv
125.756 80.4829 128.631 80.375 132.153 80.375 cv
135.567 80.375 138.012 80.6626 140.635 81.5972 cv
144.948 83.1787 148.003 86.9883 148.003 92.3433 cv
148.003 96.3325 146.026 100.43 141.569 102.694 cv
139.018 103.988 135.927 104.419 132.656 104.419 cv
130.464 104.419 128.775 104.204 127.445 104.204 cv
126.08 104.204 124.462 104.24 122.881 104.311 cv
122.593 104.167 122.557 103.521 122.809 103.269 cv
123.6 103.162 li
125.289 102.946 125.612 102.837 125.612 99.0278 cv
125.612 85.874 li
cp
129.781 97.6265 mo
129.781 101.113 130.033 102.982 133.843 102.982 cv
140.24 102.982 143.115 98.4536 143.115 92.3794 cv
143.115 85.2632 138.982 81.813 132.979 81.813 cv
131.471 81.813 130.32 82.1006 130.068 82.3159 cv
129.817 82.5317 129.781 83.2866 129.781 84.9756 cv
129.781 97.6265 li
0 .168627 .372549 rgb
f
7.27441 112.695 mo
7.27441 105.579 3.55811 106.053 0 105.974 cv
0 103.918 li
3.0835 104.077 6.24658 104.077 9.33008 104.077 cv
12.6509 104.077 17.1577 103.918 23.0088 103.918 cv
43.4873 103.918 54.6357 117.597 54.6357 131.592 cv
54.6357 139.42 50.0498 159.108 22.0601 159.108 cv
18.0273 159.108 14.311 158.95 10.5952 158.95 cv
7.03711 158.95 3.55811 159.029 0 159.108 cv
0 157.052 li
4.74414 156.578 7.03711 156.419 7.27441 151.042 cv
7.27441 112.695 li
cp
15.0229 149.778 mo
15.0229 155.866 19.3716 156.578 23.2461 156.578 cv
40.3247 156.578 45.9385 143.69 45.9385 131.909 cv
45.9385 117.123 36.4502 106.449 21.1904 106.449 cv
17.9482 106.449 16.4463 106.686 15.0229 106.765 cv
15.0229 149.778 li
0 .168627 .372549 rgb
f
125.657 116.143 mo
125.657 112.286 123.563 112.231 120.642 112.175 cv
120.642 110.743 li
123.232 110.798 125.767 110.853 128.247 110.853 cv
130.781 110.853 133.316 110.798 136.072 110.743 cv
136.072 112.175 li
133.151 112.231 131.058 112.286 131.058 116.143 cv
131.058 143.808 li
131.058 147.666 133.151 147.72 136.072 147.776 cv
136.072 149.208 li
133.427 149.208 131.058 149.098 128.633 149.098 cv
125.987 149.098 123.397 149.154 120.642 149.208 cv
120.642 147.776 li
123.563 147.72 125.657 147.666 125.657 143.808 cv
125.657 116.143 li
0 .168627 .372549 rgb
f
178.009 149.705 mo
176.741 149.705 li
147.92 118.072 li
147.92 138.627 li
147.92 146.233 148.525 147.776 154.478 147.776 cv
154.478 149.208 li
152.053 149.208 149.572 149.098 147.148 149.098 cv
144.724 149.098 142.243 149.154 139.818 149.208 cv
139.818 147.776 li
143.181 147.776 145.715 147.776 145.715 140.777 cv
145.715 118.624 li
145.715 113.884 143.676 112.175 138.937 112.175 cv
138.937 110.743 li
140.646 110.798 142.299 110.853 144.007 110.853 cv
145.495 110.853 147.038 110.743 148.525 110.743 cv
150.785 114.104 155.91 119.12 162.192 126.063 cv
166.877 131.243 172.057 136.699 175.805 140.777 cv
175.805 118.843 li
175.805 113.774 174.647 112.231 169.137 112.175 cv
169.136 110.743 li
171.671 110.798 174.261 110.853 176.796 110.853 cv
178.945 110.853 181.039 110.743 183.189 110.743 cv
183.189 112.175 li
179.827 112.175 178.009 112.451 178.009 117.852 cv
178.009 149.705 li
0 .168627 .372549 rgb
f
191.068 116.143 mo
191.068 112.286 188.975 112.231 186.054 112.175 cv
186.054 110.743 li
188.644 110.798 191.179 110.853 193.659 110.853 cv
196.193 110.853 198.729 110.798 201.484 110.743 cv
201.484 112.175 li
198.563 112.231 196.47 112.286 196.47 116.143 cv
196.47 143.808 li
196.47 147.666 198.563 147.72 201.484 147.776 cv
201.484 149.208 li
198.839 149.208 196.469 149.098 194.045 149.098 cv
191.399 149.098 188.81 149.154 186.054 149.208 cv
186.054 147.776 li
188.975 147.72 191.068 147.666 191.068 143.808 cv
191.068 116.143 li
0 .168627 .372549 rgb
f
52.2441 109.917 mo
63.2661 109.917 71.918 119.285 71.918 129.755 cv
71.918 139.84 64.1479 150.035 52.0791 150.035 cv
41.0571 150.035 32.4053 140.667 32.4053 130.196 cv
32.4053 120.111 40.1758 109.917 52.2441 109.917 cv
cp
52.7402 148.272 mo
60.7861 148.272 65.856 141.328 65.856 131.353 cv
65.856 122.977 61.0068 111.679 51.583 111.679 cv
43.5371 111.679 38.4673 118.624 38.4673 128.598 cv
38.4673 136.974 43.3169 148.272 52.7402 148.272 cv
0 .168627 .372549 rgb
f
95.7241 141.659 mo
100.684 131.353 106.029 121.213 110.603 110.743 cv
112.091 110.798 113.634 110.853 115.122 110.853 cv
116.72 110.853 118.374 110.743 119.972 110.743 cv
119.972 112.175 li
118.098 112.175 116.831 112.286 116.114 112.836 cv
115.398 113.388 115.067 114.325 115.067 116.143 cv
115.067 124.85 115.563 134.109 115.784 142.43 cv
115.894 146.563 116.28 147.776 121.791 147.776 cv
121.79 149.208 li
118.759 149.208 115.729 149.098 112.697 149.098 cv
109.997 149.098 107.352 149.154 104.652 149.208 cv
104.652 147.776 li
106.581 147.776 107.958 147.776 108.895 147.28 cv
109.887 146.729 110.328 145.681 110.328 143.533 cv
109.942 117.246 li
109.832 117.246 li
96.8262 144.249 li
96.2202 145.572 95.1182 148.272 94.6772 149.705 cv
93.5752 149.705 li
88.8906 139.179 83.6001 128.874 78.3647 118.458 cv
78.2549 118.458 li
77.814 138.407 li
77.814 139.124 77.7588 141.108 77.7588 141.879 cv
77.7588 144.58 78.0342 146.067 78.916 146.838 cv
79.7979 147.61 81.1758 147.776 83.3799 147.776 cv
83.3799 149.208 li
81.1201 149.208 78.8057 149.098 76.5464 149.098 cv
74.1216 149.098 71.6416 149.154 69.2168 149.208 cv
69.2168 147.776 li
73.1299 147.776 75.5547 146.838 75.7749 139.455 cv
75.9951 131.905 76.3809 124.41 76.3809 116.86 cv
76.3809 114.931 76.1055 113.718 75.334 113.057 cv
74.5625 112.396 73.3501 112.175 71.5317 112.175 cv
71.5317 110.743 li
73.4604 110.798 75.4443 110.853 77.373 110.853 cv
78.5303 110.853 79.7427 110.743 80.8999 110.743 cv
95.7241 141.659 li
0 .168627 .372549 rgb
f
220.551 110.213 mo
231.572 110.213 240.225 119.582 240.225 130.052 cv
240.225 140.137 232.454 150.332 220.386 150.332 cv
209.364 150.332 200.712 140.963 200.712 130.493 cv
200.712 120.408 208.482 110.213 220.551 110.213 cv
cp
221.047 148.569 mo
229.093 148.569 234.163 141.625 234.163 131.65 cv
234.163 123.274 229.313 111.976 219.89 111.976 cv
211.844 111.976 206.773 118.92 206.773 128.895 cv
206.773 137.271 211.623 148.569 221.047 148.569 cv
0 .168627 .372549 rgb
f
276.154 150.001 mo
274.888 150.001 li
246.065 118.369 li
246.065 138.924 li
246.065 146.53 246.672 148.073 252.623 148.073 cv
252.623 149.505 li
250.198 149.505 247.719 149.395 245.294 149.395 cv
242.869 149.395 240.39 149.451 237.965 149.505 cv
237.965 148.073 li
241.326 148.073 243.861 148.073 243.861 141.074 cv
243.861 118.92 li
243.861 114.181 241.822 112.472 237.083 112.472 cv
237.083 111.04 li
238.791 111.095 240.444 111.15 242.152 111.15 cv
243.641 111.15 245.184 111.04 246.672 111.04 cv
248.931 114.401 254.057 119.417 260.339 126.36 cv
265.022 131.54 270.203 136.996 273.95 141.074 cv
273.95 119.14 li
273.95 114.071 272.793 112.528 267.282 112.472 cv
267.282 111.04 li
269.817 111.095 272.407 111.15 274.942 111.15 cv
277.092 111.15 279.186 111.04 281.335 111.04 cv
281.335 112.472 li
277.974 112.472 276.154 112.748 276.154 118.149 cv
276.154 150.001 li
0 .168627 .372549 rgb
f
62.0698 164.261 mo
62.0698 160.452 61.7466 160.343 60.0576 160.092 cv
59.4463 159.984 li
59.1948 159.733 59.231 159.122 59.5181 158.978 cv
60.9561 159.049 62.5732 159.085 64.1548 159.085 cv
65.772 159.085 67.3892 159.049 68.9707 158.978 cv
69.2583 159.122 69.2939 159.733 69.0425 159.984 cv
68.252 160.092 li
66.5625 160.343 66.2393 160.452 66.2393 164.261 cv
66.2393 172.492 li
66.2393 177.451 67.7485 181.62 72.7441 181.62 cv
77.4526 181.62 79.3931 178.062 79.3931 172.599 cv
79.3931 168.107 li
79.3931 165.411 79.3574 162.069 78.7104 161.026 cv
78.3867 160.487 77.812 160.236 76.9136 160.092 cv
76.1943 159.984 li
75.8711 159.733 75.9072 159.085 76.2666 158.978 cv
77.4883 159.049 78.854 159.085 80.2559 159.085 cv
81.7651 159.085 82.7358 159.049 84.0654 158.978 cv
84.353 159.158 84.4248 159.733 84.1372 159.984 cv
83.3467 160.164 li
82.6636 160.307 82.0171 160.452 81.7651 161.026 cv
81.2622 162.105 81.2622 165.267 81.2622 168.107 cv
81.2622 172.383 li
81.2622 175.654 80.7588 178.673 78.8901 180.686 cv
77.021 182.699 74.3257 183.381 71.8457 183.381 cv
68.4673 183.381 66.0952 182.663 64.4419 181.081 cv
62.8247 179.536 62.0698 177.02 62.0698 173.39 cv
62.0698 164.261 li
0 .168627 .372549 rgb
f
109.978 176.697 mo
109.978 177.775 109.978 182.195 110.085 183.022 cv
109.798 183.417 109.295 183.561 108.864 183.525 cv
108.289 182.77 107.246 181.548 104.659 178.601 cv
96.2485 169.005 li
93.9126 166.381 92.7622 165.016 92.1514 164.477 cv
92.0435 164.477 92.0435 164.872 92.0435 166.777 cv
92.0435 173.785 li
92.0435 176.481 92.0796 179.788 92.6904 180.866 cv
93.0142 181.405 93.625 181.62 94.5234 181.764 cv
95.314 181.872 li
95.6377 182.124 95.6016 182.806 95.2422 182.914 cv
93.9126 182.842 92.5107 182.806 91.145 182.806 cv
89.6357 182.806 88.665 182.842 87.4072 182.914 cv
87.1196 182.734 87.0479 182.124 87.3354 181.872 cv
88.126 181.692 li
88.8091 181.584 89.4561 181.44 89.7075 180.866 cv
90.1748 179.751 90.1748 176.625 90.1748 173.785 cv
90.1748 165.267 li
90.1748 162.464 90.2104 161.889 88.9888 160.846 cv
88.5933 160.523 87.5869 160.236 87.084 160.127 cv
86.5449 160.02 li
86.293 159.804 86.3291 159.085 86.6885 158.978 cv
88.0542 159.122 90.0308 159.085 90.9292 159.085 cv
91.6841 159.085 92.5469 159.049 93.4092 158.978 cv
94.0205 160.523 97.938 165.051 99.1958 166.417 cv
102.79 170.299 li
104.299 171.953 107.642 175.762 108.001 175.977 cv
108.109 175.87 108.109 175.69 108.109 175.115 cv
108.109 168.107 li
108.109 165.411 108.073 162.105 107.426 161.026 cv
107.103 160.487 106.527 160.272 105.629 160.127 cv
104.802 160.02 li
104.479 159.768 104.515 159.085 104.874 158.978 cv
106.276 159.049 107.605 159.085 109.007 159.085 cv
110.553 159.085 111.487 159.049 112.781 158.978 cv
113.068 159.158 113.141 159.768 112.853 160.02 cv
112.026 160.2 li
111.343 160.307 110.732 160.452 110.481 161.026 cv
109.978 162.14 109.978 165.267 109.978 168.107 cv
109.978 176.697 li
0 .168627 .372549 rgb
f
123.599 177.63 mo
123.599 181.44 123.922 181.548 125.611 181.764 cv
126.402 181.872 li
126.654 182.124 126.618 182.77 126.33 182.914 cv
124.749 182.842 123.132 182.806 121.55 182.806 cv
119.969 182.806 118.28 182.842 116.698 182.914 cv
116.411 182.77 116.375 182.124 116.626 181.872 cv
117.417 181.764 li
119.106 181.548 119.43 181.44 119.43 177.63 cv
119.43 164.261 li
119.43 160.452 119.106 160.343 117.417 160.127 cv
116.626 160.02 li
116.375 159.768 116.411 159.122 116.698 158.978 cv
118.28 159.049 119.897 159.085 121.55 159.085 cv
123.132 159.085 124.749 159.049 126.33 158.978 cv
126.618 159.122 126.654 159.768 126.402 160.02 cv
125.611 160.127 li
123.922 160.343 123.599 160.452 123.599 164.261 cv
123.599 177.63 li
0 .168627 .372549 rgb
f
145.198 173.893 mo
143.761 177.164 142.071 181.369 141.461 183.202 cv
141.389 183.309 141.102 183.381 140.85 183.381 cv
140.598 183.381 140.347 183.309 140.167 183.202 cv
139.735 181.764 139.16 180.002 138.514 178.494 cv
132.224 163.363 li
131.218 160.955 130.895 160.452 129.457 160.164 cv
128.594 159.984 li
128.343 159.733 128.343 159.085 128.702 158.978 cv
130.104 159.049 131.649 159.085 133.051 159.085 cv
134.668 159.085 135.89 159.049 137.795 158.978 cv
138.118 159.194 138.154 159.768 137.831 160.02 cv
136.933 160.236 li
136.142 160.416 135.854 160.595 135.854 160.882 cv
135.854 161.206 136.142 161.997 137.615 165.663 cv
140.203 172.06 li
140.85 173.677 141.82 175.797 142.18 176.625 cv
144.12 172.096 146.276 167.136 148.182 162.249 cv
148.757 160.811 148.648 160.523 147.57 160.272 cv
146.528 160.02 li
146.276 159.733 146.313 159.158 146.6 158.978 cv
148.073 159.049 149.296 159.085 150.445 159.085 cv
151.739 159.085 152.926 159.049 153.932 158.978 cv
154.22 159.158 154.184 159.733 154.004 160.02 cv
153.105 160.2 li
152.278 160.379 151.488 160.631 150.877 161.673 cv
149.871 163.398 148.828 165.806 147.211 169.436 cv
145.198 173.893 li
0 .168627 .372549 rgb
f
157.885 164.261 mo
157.885 160.452 157.562 160.343 155.872 160.092 cv
155.297 160.02 li
155.046 159.768 155.082 159.122 155.369 158.978 cv
156.735 159.049 158.424 159.085 160.006 159.085 cv
166.87 159.085 li
169.17 159.085 171.255 159.049 171.722 158.978 cv
171.865 159.588 172.081 162.428 172.297 163.973 cv
172.153 164.261 171.435 164.333 171.146 164.118 cv
170.572 162.033 170.033 161.134 168.883 160.846 cv
168.056 160.595 166.978 160.523 166.008 160.523 cv
163.6 160.523 li
162.054 160.523 162.054 160.595 162.054 162.644 cv
162.054 168.717 li
162.054 169.652 162.09 169.688 162.917 169.688 cv
164.642 169.688 li
167.769 169.688 168.38 169.652 168.631 168.107 cv
168.883 166.884 li
169.17 166.633 169.854 166.633 170.033 166.92 cv
169.997 167.891 169.925 169.185 169.925 170.514 cv
169.925 171.88 169.997 173.138 170.033 174.289 cv
169.854 174.54 169.17 174.54 168.883 174.325 cv
168.631 172.886 li
168.38 171.377 167.769 171.305 164.642 171.305 cv
162.917 171.305 li
162.09 171.305 162.054 171.377 162.054 172.276 cv
162.054 176.84 li
162.054 178.673 162.126 179.967 162.665 180.578 cv
163.097 181.081 163.707 181.369 166.727 181.369 cv
171.291 181.44 172.081 180.398 173.339 177.487 cv
173.663 177.236 174.273 177.343 174.489 177.703 cv
174.273 179.212 173.483 181.944 172.979 182.914 cv
171.398 182.842 168.308 182.806 164.103 182.806 cv
160.006 182.806 li
158.424 182.806 156.231 182.842 154.614 182.914 cv
154.327 182.77 154.291 182.124 154.543 181.872 cv
155.872 181.728 li
157.562 181.548 157.885 181.44 157.885 177.63 cv
157.885 164.261 li
0 .168627 .372549 rgb
f
179.916 164.477 mo
179.916 161.026 179.88 160.595 178.19 160.416 cv
177.256 160.307 li
177.005 160.056 177.005 159.481 177.292 159.301 cv
179.557 159.085 182.611 158.978 185.559 158.978 cv
188.361 158.978 190.806 159.337 192.387 160.2 cv
194.22 161.17 195.55 162.859 195.55 165.447 cv
195.55 168.753 192.998 170.407 191.237 171.125 cv
191.021 171.233 191.093 171.521 191.237 171.737 cv
194.112 176.588 195.909 179.643 197.599 181.045 cv
198.604 181.908 199.646 182.124 200.078 182.16 cv
200.258 182.303 200.258 182.699 200.15 182.878 cv
199.719 182.986 199.036 183.093 197.778 183.093 cv
194.328 183.093 192.459 181.692 190.267 178.349 cv
189.296 176.84 188.29 174.864 187.427 173.461 cv
186.78 172.383 186.385 172.24 185.199 172.24 cv
184.121 172.24 184.085 172.276 184.085 173.031 cv
184.085 177.63 li
184.085 181.44 184.408 181.548 186.098 181.764 cv
186.888 181.872 li
187.14 182.124 187.104 182.77 186.816 182.914 cv
185.234 182.842 183.617 182.806 182.036 182.806 cv
180.455 182.806 178.838 182.842 177.185 182.914 cv
176.896 182.77 176.789 182.124 177.112 181.872 cv
177.903 181.764 li
179.592 181.548 179.916 181.44 179.916 177.63 cv
179.916 164.477 li
cp
184.085 169.652 mo
184.085 170.802 184.085 170.874 185.81 170.874 cv
189.332 170.874 190.949 169.149 190.949 165.735 cv
190.949 162.895 189.116 160.416 185.989 160.416 cv
184.121 160.416 184.085 160.523 184.085 162.176 cv
184.085 169.652 li
0 .168627 .372549 rgb
f
202.81 181.872 mo
202.162 181.117 201.695 178.637 201.73 176.409 cv
201.946 176.049 202.558 176.013 202.845 176.265 cv
203.492 178.098 205.433 181.944 208.955 181.944 cv
211.687 181.944 213.231 180.291 213.231 178.098 cv
213.231 176.049 212.262 174.396 209.565 172.886 cv
208.021 172.024 li
205.325 170.514 202.953 168.322 202.953 165.087 cv
202.953 161.53 205.612 158.51 210.859 158.51 cv
212.729 158.51 214.095 158.942 215.783 159.265 cv
216.179 160.056 216.538 162.428 216.538 164.118 cv
216.358 164.441 215.712 164.477 215.389 164.225 cv
214.849 162.356 213.591 159.948 210.536 159.948 cv
207.661 159.948 206.475 161.817 206.475 163.722 cv
206.475 165.231 207.518 166.849 209.89 168.107 cv
212.117 169.292 li
214.454 170.514 217.041 172.743 217.041 176.373 cv
217.041 180.47 213.915 183.381 208.703 183.381 cv
205.396 183.381 203.528 182.303 202.81 181.872 cv
0 .168627 .372549 rgb
f
228.146 177.63 mo
228.146 181.44 228.471 181.548 230.159 181.764 cv
230.95 181.872 li
231.202 182.124 231.166 182.77 230.878 182.914 cv
229.297 182.842 227.68 182.806 226.099 182.806 cv
224.517 182.806 222.828 182.842 221.246 182.914 cv
220.959 182.77 220.923 182.124 221.175 181.872 cv
221.965 181.764 li
223.654 181.548 223.978 181.44 223.978 177.63 cv
223.978 164.261 li
223.978 160.452 223.654 160.343 221.965 160.127 cv
221.175 160.02 li
220.923 159.768 220.959 159.122 221.246 158.978 cv
222.828 159.049 224.445 159.085 226.099 159.085 cv
227.68 159.085 229.297 159.049 230.878 158.978 cv
231.166 159.122 231.202 159.768 230.95 160.02 cv
230.159 160.127 li
228.471 160.343 228.146 160.452 228.146 164.261 cv
228.146 177.63 li
0 .168627 .372549 rgb
f
243.888 162.105 mo
243.888 160.595 243.853 160.523 242.918 160.523 cv
240.905 160.523 li
237.599 160.523 236.628 160.918 235.299 163.83 cv
235.047 164.045 234.292 163.938 234.148 163.578 cv
234.76 161.637 235.299 159.409 235.55 158.151 cv
235.622 158.043 235.766 158.007 235.945 158.007 cv
236.089 158.007 236.232 158.043 236.305 158.151 cv
236.484 159.049 236.987 159.085 239.432 159.085 cv
254.095 159.085 li
255.856 159.085 256.396 158.978 256.826 158.151 cv
256.971 158.08 257.114 158.007 257.258 158.007 cv
257.474 158.007 257.653 158.08 257.726 158.187 cv
257.365 159.661 257.078 162.751 257.186 163.902 cv
257.006 164.189 256.396 164.261 256.072 164.009 cv
255.604 161.206 254.922 160.523 251.076 160.523 cv
249.027 160.523 li
248.093 160.523 248.058 160.595 248.058 162.105 cv
248.058 177.63 li
248.058 181.44 248.381 181.548 250.07 181.728 cv
251.363 181.872 li
251.615 182.124 251.579 182.77 251.292 182.914 cv
249.207 182.842 247.59 182.806 246.009 182.806 cv
244.427 182.806 242.738 182.842 240.438 182.914 cv
240.15 182.77 240.114 182.051 240.366 181.872 cv
241.875 181.692 li
243.564 181.548 243.888 181.44 243.888 177.63 cv
243.888 162.105 li
0 .168627 .372549 rgb
f
267.968 175.51 mo
267.968 173.498 267.824 172.958 266.817 171.053 cv
262.505 162.536 li
261.714 160.991 261.427 160.559 259.81 160.236 cv
258.875 160.02 li
258.659 159.768 258.731 159.085 259.019 158.978 cv
260.563 159.049 262.073 159.085 263.547 159.085 cv
265.128 159.085 267.32 159.049 268.147 158.978 cv
268.435 159.122 268.507 159.768 268.219 160.02 cv
267.141 160.2 li
266.566 160.272 266.387 160.379 266.387 160.667 cv
266.387 160.955 266.53 161.35 267.033 162.536 cv
268.471 165.626 269.765 168.538 271.202 171.162 cv
272.676 168.43 274.006 165.915 275.407 163.218 cv
276.019 161.997 276.378 161.206 276.378 160.811 cv
276.378 160.452 276.054 160.343 275.551 160.272 cv
274.473 160.02 li
274.222 159.768 274.222 159.158 274.581 158.978 cv
276.162 159.049 277.276 159.085 278.354 159.085 cv
279.469 159.085 280.618 159.049 281.769 158.978 cv
282.092 159.158 282.092 159.733 281.841 160.02 cv
280.798 160.236 li
279.181 160.523 278.75 161.206 276.881 164.369 cv
275.659 166.417 274.581 168.394 273.467 170.407 cv
272.389 172.276 272.137 173.031 272.137 175.474 cv
272.137 177.63 li
272.137 181.44 272.46 181.548 274.222 181.728 cv
275.587 181.872 li
275.839 182.124 275.803 182.77 275.515 182.914 cv
273.287 182.842 271.67 182.806 270.088 182.806 cv
268.435 182.806 266.817 182.842 264.877 182.914 cv
264.589 182.77 264.554 182.124 264.805 181.872 cv
265.955 181.728 li
267.645 181.548 267.968 181.44 267.968 177.63 cv
267.968 175.51 li
0 .168627 .372549 rgb
f
grestore % PSGState
%ADOBeginClientInjection: EndPageContent "AI10"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI10"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI10"
%ADOEndClientInjection: PageTrailer Start "AI10"
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%ADOBeginClientInjection: PageTrailer End "AI10"
%ADOEndClientInjection: PageTrailer End "AI10"
%%Trailer
%ADOBeginClientInjection: DocumentTrailer Start "AI10"
%ADOEndClientInjection: DocumentTrailer Start "AI10"
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%ADOBeginClientInjection: DocumentTrailer End "AI10"
%ADOEndClientInjection: DocumentTrailer End "AI10"
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 10.0
%%For: (Old Dominion) (University)
%%Title: (ident_odublue.eps)
%%CreationDate: 7/31/2003 12:37 PM
%AI9_DataStream
%GatUYBlBffOlgigr?(<_!,HaWb55j*(17kKYL\rgX-V<T(e18gQ<IPb!Y<C9^OG1!LcjN<-1uR-b@3][1GU`RI/DAg2n)RA(RI)L
%2n/g7]s>2M>ck&glme7hlB>".rL]G6llQ]VX]$n[/_;_28BoC?'H=!3?^js(j72O4e+N_&n]h%"q>T>]H[Bm^s6t?BrNNn:IC4Dt
%^Y,ag@t/WDqo`_q[6+E/gun(Rh;-WCrdq#]ICc?EY?,p)besF"F`_X#_uAKBroa6FH[#*n>hQMh)0GjrUWoFFHM=?7h8LZL7DCe-
%Ia;NnMS?a#V9h2YgA.)iI<fu.o^I+?Hb@&D$%Jf1h<sfQIt+5QIV%+%LS&8#Ndb8?qXqa%3tRk#.")LBn(m6iec,47rd+=KMJE7+
%m,5J\g&]S95:c`pc2#o=`Vp=/Faq4hI,NoCGPm6*qo;3qK8=9IK^Dk@n`T_0?EXe;@on0TgGf$(Qb<(9gRGs-L=SaBRJ6+JDC<2l
%nRs>X#9Am"5OP,G*b@X<d>EC#r+m[+rq[,G"8>DMQ2KA`k'ou.g-;36r,4DRr4Sb@j]=b1H1U/8F#[m&b_he<d6I=`#5A9R&nLo`
%IslOKHe^F/HX_5,;u:KK6H:::U9)Kef!*<-rGGkjrQgi-?XBqmCkZoeIX-7>a*Mk-q"F8Cl1gEaX'D44h`P33n%ZKFHmB?H@9;^i
%ea:?T9$U/CT3gp[,c;[Qs(dO2GPCS#O17\]:S@OL<AElbIsJUhgO7`35I:IW]<C\s2rEKk+'rhClaVg9Y!FjZBRqUeQ':gF`4p1N
%XYqL15kd0U`^.6\VYg5ho)7[pCX>Z*aM3).]A)4mZTiqerAh^)(ae2(f!P]hdGgu5JL`R_:)Wk'pQl\KO0^(roDe@;f4Fff[XWFX
%6nl3L2p2%G2](6'CE+"jaJU!:pD^[P=1@Yk\)S"s4.>d*:A;oH]>*-!LW^X<jOGW-U#4PRk%8MY,gkr.+25@tfj4&"<q!Y>U-&#\
%9"T&Cc,H_Zrq>W@s8M;Ie'ld0e)SpEl/qX%[%<T4I%!gjBfPd`maRhsPLG_ZPN.koal_[JUn3g7I$.7a8N?5fm_k]aj4!%Pj5]1e
%n`KW1\/s***9Z@(*08"B5Bb*@fPF?m-em\KG.ZEKD<nWHo/:IG2Ji?CD=,nj:,aPij3;bRfc4koVJPfMD;lmYr5NU?L5u;to]YB"
%ph5#]3BB4$8*)-@V5&8LNr5#$Z:Cd`ertDb[rkW1C9=>pROT>&p!m&H9fXdQjg]-MVAtk)BT4=)<+7#I;I$KGjO8L>O7P8JnklR#
%A@cP:k)b"7fk-FCdn)SqgU'OBWMYi!8r46]o#W2IBT;O=T#B[!NLP/,CFh3\'OqQijY#8#_J(t9a'foFi@%[RJ2r^?$R,<'Jdo_l
%q@eAF[sm@uI.aj9T7-:X#Of@tef/hu:>E,/\rAdleJ4EVEmY'RSTE@"HYQ@CZ/+,n4gNTRRr,IY#4&Ctf$YHG*N,S50cNJJ1UM"_
%$n]`Ni5XdIrXWbNqXiV+T%O3i0[_g8N4gO_HT+6[#;@G'EW!NQq!I3GR?a/QZ0FSdpAY!]he%8MZZ:[d',&?dL4B)FIsJL.ZS-l0
%=bd!0A"?.Eaj2uL+[Y'L]u!O5OT,63m-K5Lci9?Y?WLV.e`q(&2ld=(p\d&GrA<=&oOeTC3b,u')A5)MnE1`3T8,@@j)QDR69OQV
%;hDu<N:@Vj>sgN!ItX,ZIfAFD#.)87/,df%:7*AekBK(W3nG1O%2h0Bjtf_Im':1)%i\$E=e<mq^r+/@P2'<LAE9t_NA$7D^h9.:
%LLW)[fIV[lkg[C\Rjs2H@cXarp+HuWJ\CStY>1=5+nLD9s5dJSYOngb3uA*]+0K"UIIZKigL"jn:TN)hF8i&&e_`SqIIS+O(or.a
%2K(7j7bRN*B(`Q&KV=gKhZ<PM_>QP<!L[lXbBHTs((Wguk_hA]>5.<CY<H*;6-I(T]QW#t[.<*%_406q.IXr$lHKiLEJGkgf(OX=
%+2Dg?T?ED+k@)R4D)-qH^:J[J"iJ"+N"u)0rP+oS)(f]F6I3at:&[TD..?"t4g?GUqfMSoc&]=j)>adl@b%*lJ(idb4FFS89`DPb
%/qfg%rnP<^mdfePh]EKds7MA1IK/s/e*>]BgT*NP2UGh(BkXEmk@5k'NF/-)Iej"$pi^k(F\106h+sC#09-"Kn,#Mfde@7KI='7m
%H"k:[YPMeUHi3S"+Ma&)2](!*mF11WIdH:lq@5^clKqA/n27[;SQ^KdqMBR@_jkDckfF:Eg:);'JTkWp'E3,uJ+lgYq/H;MmFC=9
%oq9E[oUe?[.'he"VrdCigOD`n?b9rsFdmSu]R/F"$%1,#Lf+*?nf4B9GQ0r/Z4hXkIISU@+?-d4G5%%^h!XS`<p/i4g=?0$i\QDO
%O(eChI_WYnfZ$-\4mfX/m)\b`D;DRRhebEXiHH5:CTtS-:)g^B!QjYsLH@P_S+@.Ij5n8FJ\59*BNAJVLuY>n*IL0LmIepCMg0+!
%ab9WPS,H)dIJre_p[kulB(nR"k41__XtZC#[`#]>o[TQ$f'd^+G2,B-5s&j$bACl.GF.X54m[uM&$bHV_`uj=;HqQ)m\69"+0iQ1
%dF7,m?X>s2e#>m0p5e4=&qTJ]h<."ddnC#<_sV8`F8c5((O^1n*j727p8c7459E+q.4O!*J*`eEkb.VEe`@el4UdF%''m5$8EY3.
%gthE@p@kACDL^O#hr/$.]YHGjU=5Z=rU2,.m,NlO)$58>"_I1Q*.@WpG>G(IdH'9IqM5$gdFHe3/IhR>rJ09Hr:]B1L]&GVh2j2b
%V)9=\p1qpf!=+VCgGqE(b+&:_+"shk^XMhYUh5(%f(>#*`VJp"`W"j#rZq+(p2Tp*`Eg'c*TUL3hXD-55-VV3UH]]*1?8oj,D%&a
%U)k<2&[ThZ;5[)/!(de>A+MD#aL:sJ[mj?Wm"RGdb5CbCNAb.Z2PZJ6X\_(r\t=s.^4W7QQL!##p5`=glP^Fg4=LNFB28G9)8m&b
%,^=1Z7C@n8f'jupI8-L3'm]:a?bD.90gKchD"?p_37!UprY;Y[5C7*<!e5UZa>o*S()d07n,ZIY^A@7t783:L^WL4Be[PsKVD(F"
%COfi!C_!M-gtF!)2C;.D?&X!.T;bttR#=G[DX@jXYqDi[8N&>%16(55-&`%!WpASW$Y1:hO@G%l*8[`_<cWo%d_XBE@$5edOX>/q
%!QP8@=c#$g(J*Ce/icW69R]\dajU;i=]Z9[Ee,7$(\hem]Kf7,%lpN+!kh7mlHlsk&C"J)Fg44#Lk?lWh%o3+-CG\6/KJ,9DR$tX
%:()H`&m:m$6chMF(MG;kb7b&m+UXOHUnBZ,mQm?l=Gq.HTO=T<4EJ\6_%+`uI'sYJ@N$\":n,b2g<*Y-f$2-d49,h*q$9Suqo\)^
%&4uR(<j3`#4K`NJhKOZs&>LqMMmQS?6Qr=M;(.n9mEZODTl#L]E5etsn?Uk`M&FWN,p?tY"u0gEZp,Y1^,aSS[7oUn^WnRbYmcSW
%l/[p?)lj-V/]M^uqLE151qCJWIc;k`1)N0022MGh`:@q0*H[!)2r#sdUI18o+LLc/'D('!Ln3.VNbp1=]WK24%69dR8"V.?qbKnt
%5#b&7)$ee0eqY0%5MY:EP@b0fG_a`6jWC+$rS*MU,A-I'P:0)<0c=IIXfX071:tOXb^#`l`!$Hn+++<tJO$m6WGQS7/,e)A.)jPP
%"/38!n<Nl.0GosF3E20-75uDl=q[A`VK2b^:][G[-gJ3()X3]Cai#%AY+BKhM.Kc/Z;s"/]%hCCZaFh[#"VfH-O<KZQ:Ar<>uQi=
%A5hMR==@bocs^gH$P=VG!dBP4F$aVF#AZaD1bb#I0f<JW\t%k.BkLp&+He]>D?-aaE..*.Wi\CFpnJ5sI!`O!J,AZlpk8_W;l#NM
%Wl0%mA/eP"FHDmCP%"[U'2@_JR5:g"7]K%3cr>=>80/@'#UDdR1@#Qi/BL.",`j%)a'?c?Y]ti*TK=ndbA3m^(a2dVc@m2N.kfG@
%W,e/89M0@%Q]pb$)N=%(iAers=X,T8gSq%Gf!0H@hiX5';8t!;np+ggM,)$!U^R_bg(0pH%ME.UTR%&8,i]%W,Z/j9oXfZ.D%\RE
%[KAW*+WP=&F'hG$AiG\[!h4SA%,?8(dM6/4[PHTMlN/_HM?g)TnPL.1327K7*>`F!U8tB2Mfo2nS`L4oLg2B(B/,Jjp<:&u>sR1$
%:E&V:!e[a3$1"UP%tp"=Y5h+8D*PU'J195&UX:E^C^FT]AcQq*ZLL8N>TG'BWaqe0C/32."VqDQ*@joWLuCedBlo"iP+JHmk@UO,
%+_AYiUg4G_ANF=_N_m:6bR7o,SD:JpFKF#Q*HFXoYpjkCi_6L^ZJ&2JVAF7sCV-=#qV.>ho2WF&\FAA%Knsi7d"dWb%.+6'\g8W9
%kraOD,WqKo\Dl/+bC\)GI/]^dcC$b'X$Q)ihM.<eO*p[_!3L,g,K3V*15Xd3K@0(g.1XLI''H'=ih/)D]NkDuo%l\KPdqOne*&n=
%JHRJHA8Pj'?9hQU>\q;KjrMhN!X]YI:),KO[G:8&d**oj3>Y=h5iNnA/no]'8soi+/Nj_"_MWIchoJoaAWgqiX<ah`(g)#VHE0t2
%B$&J8f2Muq/p8\#TK"eR_?::o,R.J8,qc#'#b%<(F#-T:\Ms^b5FYf[!-I)L+]s8VrDIn-Zsbsonp]@\Y^f;M0EP:AZg\&g>ZXA*
%YU);s&Fp$WHN5O#[P+oN<EJ1%?g(n&0J_5#>d)#a*OKk_JZsL<;mZD/:=WiApgcW3;l=6QMOB>*,nJFH"H9!iclpI=]'+O[b]eAI
%ELmJOV^(K*==D2:N7M-qOUG8a.?%d@fH*9/rNR=dD&BTq:GrVMAmCpi+p)rb'!\TG0F=<gLMRo3l;F$5^rV**Uk**_rCpU$8Fp"?
%,KA1Yl,@F'XGqVb-BK&_]0!o<CeRq8NHH(t"BW]_7`_[S-4^6S<Ep8=e^CNg&e;mAnK#PaW*pg1[uOMT@%d.(hWm1`s2!,l+;+02
%c?k)Xdli?eG-n#Z`07;Oc#YitK;CJZQ^Z9M@(*q+[$g$17D4m2-0'A("$%/aPJOY?egTp);,!K.4\n%&OpaHXTsPX%#U$[MTPGW6
%M.#R<lQ+YE,_rf]Ye[c'[Xo(#d6no4F^^=@\h"F"=trdnNL=c?V5-3bd+@7mcoiJqBU:H;SfhHpN-CX#3Z&R3aGDg:cEDiJ,VIZH
%lC^QnTnHu]O)6dDoO(&hN+USE,XI#*7q?Fk&0a2Og#j<(kt3P/C_gXuZ6^eP:=IS&$kdR%6kVXUdaSU:9446RbSeGlKqYHBX+I-5
%6cr-pd`"cd3m`M6-_Ddpi+Yq7$G'IUU'a?m6uPP8X2[7+,#(L\AKB7!hGmAgL,DfR>hrLG##DY:H&E,GPgD8nkclqEVF1[R@Np!F
%LF9m8`QE^5+."LQj'g'T.jLWtD;2j?Ge,ut33'sV_a%1^-5IGnRDZFqj0(Ydl&aWWMaM5p4&[0A#Mcf8R@s"h+A.U[9+827ls`jq
%kOkF!^EUp"C`20!QnK&W"4tL7i3`OenOsSUH[n;rkRN!</Mq7t&I.AO_1MXgSETE=(#im&PPB7eR"V](7!RYu5LCSCgOtC#BL](V
%-u5_F<-X4A62lF0e0gemSFt>889f@^`a1o^)l@KX'Bg*pOr^X`N[![\k%>NT!]C'>l?7/q-ZHZ20N(QLj4;U9ak2U%]gRu\aDlKR
%=ZaRtQ9,BGP/m(jgueM"E:'??&DA`*)*A5R#dKeRY)!D]?kCd3ELYqXL`I,&`(;,)$]c?KZuFhg&prKU!2mplC"P_GTn>(J[K&n=
%_dW(toINK;\dSmJ6N]+R).ZW@1o-D@4RP%bUhYku'6352O;3(,6eYl]"1gFl&p56P9XJ)Dm#m/,S:k8qc:_t+2_O='PE=jF1``8o
%k^8[Xrp17Nml6F8#0T>e1ouVe6q/RuY!G5qGH0VPHion[LNli+DNKoK0;Rt^]'sVtl7e>RPKi6&,*Uh1_Q=7Me(Vbem5d.fN]K37
%k/5N-KSc+>A4L58d_T(;%'YT>5(4<_D&'AWle!JtW$_h,LA\pPVG>hH]1XHiV>R'1S%2B_eC(iuHM+V3`Rb);q:-"b0>F'-hdHa:
%h/ULq^Zto6JCm69_Ih";dBiUNaDjf(YCQtF``NksNFEIDlj-m/Y@7EjOo=W+fZR\g;55J4Rtl'=9@j``$_aG=R@96Q?s'c@3;?TA
%8*IZ'UdMY%!u%CpL"%qA4V?"Wl-FN4Ko/$f)GEatr`r1@>%.gJFO6Bi_NbCj'C=;1OG(i(7g=bT\g9:t_quZ_aibgIS6*TTF%;\:
%_Ie+4AeBQH7FIFJ5TigenHKhnG[\n&>o0EX5MP5o/9)q#9XgL'b.PPU2A4Ji]I2,iH0c+T2@3/E-6hR_V^D2O\F^&NA`&HkC,m-t
%EgT7u,O7B<[kpug"iHfb2^=l(_dijB[+:Lp#s1,b$jW8MR6Z]QZCU>]"Eebo,$Hu>_5!.QjdFY=V6#m2)UY8s\UX\hl-qH9%!:j-
%#8]B7TR9IE,WOS'd^^>cdcmJ2Ps&#4L]\8fSVf8/=30RcnD?Qa0kg,EKQ08J/!q93d6rpMl,6Fl5?kb_)NOGM:X.f4<gP0I(g4.*
%$dEb;_UVf#Sk4YGAblKs-oTXkB7psS#HeB,_,=JA#9cAB@Kq[HeqA,:,ZG6$<<K3GDURa)a8ftVK.egp)DZIiK,GgF^>4U,)$T8>
%0^JNcQB.grb:EcO*'kkiCMqDfE'/P,^QC=08DlcB<kck9_e,;iYJf=,DOIH'Rg`G^T4EW,VChk?#oFjA:aB@FETmIV*QJ7/EM.<*
%,uQHBcF+#^U<Rb="H\:!#^1)*Z<8lG,'s<H/qs!D9)9`e/:!I^<R1=0UcfW/Q>1RE-RP\(3R+(P3B<!V\;tGc>OmqI8b/(pE-!Nc
%S20'NJ1UK^")@O-_21Z*eag@Z(Ju=d6WJ=?+B\=N4Iq6KH#*LK%T#D1crpm6=A_$gMfKpc+\6qd/I#>.(3*dl`?Am&N&1%hUeJl4
%9Iu<bGHU$1Hc1FT/?HNcNgDW^7[,%W2Rt-6NtiWM+K26L/JZU=$<&9e)*D?/5EO0h?4\p"2_.dK1Scf>R__ZUi:\JQnr]dU@\1$.
%@1R3B3XIfCf>85,j8sbUWBi:5U-\XM,=FF"NLchO!s8UGF;k9TLWXY(\10i++>rAMV%mE#Z-YXfMWi<X(--"F&8"TL5a77./`.$b
%(lSa^PIuNBcrU-^Hc%DNY>S4D*cZV4F[P#IpL/Tg3]36i=lcFbJuGO_^72nf#p[`i7lJ2Gf#85%PTt-n;\AAii]/dB/\N%]bO"VX
%JDq9n5ksn@L3S708/>DTlg>D:ckcY/O3c(6JGW2rLg3k6)lMag8eS7Y`71S`8c'i;=EZ#E5s0QeEJ[!;7MO4Z./kaXJ:S)&WjXK[
%&Q!It81Fc\%.u<NG)XX7XXbTG9m`,%d>^j&_-#!?oGu2t!]E`%+RgES;Hu[3%?/OZfeHbL(1F7s7*#.$(MDM2!-,*F;>/JCG*6Jo
%L9s/OW8NWq'3OfJ@?%RG/G?+g]WM_gWa(I`MfY1nl&s>sZH4<10Ln8[I'.nu\h8/@VH+taSQ^S,qDbd8E(<<$ck1C9L#r\`AL2"U
%Z6=3'PLNoM&!'+`<k020f^C-G*-qHY`*RssD)eB9<uV@\9Yq8`R"A;jf`J6Q<Y>*Z.`ikN$IZ>\DC-keUOs3lK4KW>%3mtVc>>E/
%i'*A-,*JtJhM&L?b@#H:Ou0*tVBlfZW%6m[&_gHJ/dN9cMi!Z!$.fJ,IcAM/m7[3JA%g:j0+fNbj>N1of/&4"RHN!8R[k*`cA<`6
%4f&:/$)p(i;`*S(]N!g/74Ahe8'1+B6p;JSV%k@]&DTQA;Uh/,Yu6_gT8oa1B5$3C_R`&d'n=427eV-g6f4!f*4!-mc%ro8/RtG)
%jYVnK@(OicVaV1A&u@6$*=E^om>j?GQK7k+'%f&2Qrjul@'hIGQoYng+cZ3,H3K.\X5n[6BVGba9M4m&8b+jG-"Jk\eIXT*l!!nn
%)'+k&e,bN(lmIHu$rn>0!>:`]:_88VK3<f#YZ3Z5jfDRV!9eUL^.hM[PTuc&A$1P\?WbiNZP(q:N2.c:!C'#k_W$`L#iglp3#*Q`
%;u;+Z6:RGK*\bi1^2*+@!)pC^R87LG"_A>TG/C.DN2@8b)>W>W[q:3YERAn"Cl"9SYLuQ>B+tT?[($A)QucE9;hA)E`2YGiUI.ru
%V+uacNb,'.$-1%\A"b^C8^&#rlj/-Z`#+;aTL/!U+F;UsNi3UG&mub'W[?@+Lmh'!r"sS`VoD(RUL;#R<@2IM'/$pP'%DYQ9Y/_p
%[KkYO/EfnW5d)F<?$[a,#FSN&E6/\P+t'!.%MTWJ8>^&b0K\%t6P;J,O^B<[:u-[pp'F#UX@gIX1MO@T)+u7fA=e?rk>JAK;\6MQ
%hs2,8+b!<74)bHKS2aG;RU&)CN[pLTW:puC>@-[-Rh3T+CX/dK9r^HD9gk3X"cs]XC/EiaE3'$H+3.9d-k*gKb7"bC7'8?_:SM0T
%/06,m!b69="kD*N=uDHjZlK"kTnrRQVdpKH+C'I[+fXWV#"W;!#]H:d5aYhJe7)1U\"OJ2:!'uV&=Sf3:8<sTdZ"m-Qe4ZYc]hn-
%"<N/WM$KpjSCC=7XR+K4D?R#jfRuWJ%d5CF4qQ5["!O+*d<-m537-g?@hV0s1d`-#(5@kq9H=`*.PVBcms5j/Q.h2XVr@KH2AA0[
%@Y`/`V?k4KQHEnt+Dcsq`?U#-P9##2Nc`Joai6I]+>&PhcS(Z6i.GHH>-"N3+$dn#5G3KUiofec+jr4k8N`gUd1]l/CdR?%#"_iA
%BF+[59P=[N#^OK`(<aXM7`DGd<r>XF"Y50*E-]$@!Pr#;-(VDJ&2j$K@W5YL!j@3/+<-Gf;Ge"i"i;.iT`OAW93Q>$p^&QBR1'AR
%a4Z3X,Hc#<9+;!PNl/WF);'^M2UsM+E*UVB"A)Kk/)*P<HU^78GLmZ#+`+?XFaU;`Z>b'(E<TFpdSL27<N>2_7t^mXSK.,B;=>MB
%Yooa[69Iof?"Hl&9f]-KO`"8D;J7g1*-58)S.1DX2?O$e?7u`c<?T+V=K4@oJG^g)=;Z:/O@0sY<"\fHGQ>,/!0WNh\@UaOJs:U^
%]?aW*[:!M:dg6UQpH's&KVk\k1(:ZB<Xf/uQBA&CbO[BC:\^>PWmSC-*N3/D.[aooOMaKB^];.[?!fPe2'[d`Vca*SYQSP,YiSQE
%:lAX'YqJq#hFogc0<e&]dfJ9oWl+AB0cNYB0*\-u]mWJ;*n8b%M=![0,40Kc^fi0*$>G^m>#3<](QtB7gu'!#*Z,3G0OuIS;+3^M
%</`,WEg,-e0ir*.dTOb:j,i3S^7)VIoLPKkHF""URPacc"[0.H*93Ci4c624SJK5$<CJ*`Se.'9#D/Pe2cA>-`6b;KDTcWR!TdkF
%9Ji:OTtIO7Y\"ZAc!]^r5'lsKqBG&`f9\SV\\>,\]5?_:S9=rcDF(%-].3[4VdH<@+Ocl#k;Jd:Z^$(G"&-$15&#on][R_R3GuEL
%SMM3*[!F09+c=484+fJL%\s\cqnh/khAjIQKSpsQ;LeZ`\8oJTnL8EaZdj),%c[TK;JL[';6nc\huc;GXn'=[JCbbP&8IC2@'=Q*
%gq!@&(I'c,im^Z^'Re4_:Ih(MH'X/?@;j"uA-%P>)!$:gWo_ppUD,=r_WmYElTbHLH9fp1Z^"XT#]heQ@HXR*`J!3fJj#etg>#HE
%WQK?$c$PqAc9e>sJh%'W6ahIM[dt48lOu'p?#uQr"Ps^6hD0.,$J[XZfnN)XJM$#9&^S!EDuo.2J8enpZR7eG]@7.3(E0XF:H"Tc
%[.KDR!0E+S^F_5#6#O410I+m8@Re><es;;XO:,Ib!f<NtkK0<c*kt)FOYUl")*37eBdI)]H&e..TsrJe!aI\ANQuV(H-(Kn2-9G`
%%&hf<D72ne0+qAUnGkk#f4?[qGt732T_Og'l'e<"Nq3%@=VojJC8?<ACOOLR2#sA*OB?@pT2b[5-g?dV^hLjVi#9n7$'^t%4,')@
%4<Eh=RD$7MCR0N6T%(8]ljI2mXn\>$"b]7ZIGp"PL+jLggsN.gRZ%P(U=u?]";1^3"^[_;=Im/9#!9Vpj:)n7lYq]<Pq<6d5230=
%e`eT#>S$DoV&nff^g"rKYO=a>!9X?o+@%.!\4Lma[KO#-F$N@'T6]ZUE$h9S38H;UZ?(:h'-?=V@)6nJ1_5Ru`,H(T)'d3@%K]O+
%1MA+ZiCk`rMD]J4:fRY^kU>UeLBil$,(9ZN#<XEJMf?>2VuuQBU<tRA_-!13lc5'A3`U`u*$n9$%s\4EI?o[Sbu0o=:st5_"J#B"
%m9p;;e=c;pp(Ep'3dF7-UoN]XU^PR9D9mAWOgbiNnJU;Gm3,1+R9W2h_FEDhdIB;-Uoa-7mRSPH';_"i&RPa>'`prJ`rUiN0-7."
%.F\nMc)[&Y^baYX0\+ErZf^u%q"gLr%bV<&6+EYBG/5#Wq_:[-N6:Pp;>HeOK^i`X:'L)r3RU\oj8^MYUU#_4&4dPD\-E;C]ro@G
%F@0iNDOSoddI5dbejU]oLW8%\7(-d96:gjQ`%VgGf6o0oXBIZ;Y4.VtgBRHgiR.Kf.B"VqkLob+1[j@J"HQ-^G,U$?EM;6@>r609
%UJ"F<$k<LkKWc"Z(s)A?*F'8u5$<edE^argH*ZE29"VAJLgE-)lJ6OHf,P;(=k]UsJJ32t0pl!Q9]I'd(9grW28G`$2GrRH`0rPB
%iJT&E7l.pB2\N'CE:VT)#"YShcaahj'nhCHG4Mg<$GX^tJ]"(ueXuc?+Xe;NEk0<@hA7J-\?oan4@J2G[!<PG2<2DrK0[)?S1^tf
%07Jd$ElY%5@)+*@SF*>Q\Z&m3o]$dER.T."'\C/?KqcOR/HU8^K?Zo!KWdZXCFFW%)E-SJGV5$r2"RF?s-\Bd[.'FfrFU]b[6VgA
%'#0F`TqBL`p_+*()'u?_O6Rc]L=^`ZoH]Z9/Qu/V<l4'*LM]O.M<taobM@KLC3X9JDBruXptg/sOX2bBV.0a%R/8;B?7@>4:.i=3
%C--(5dn0RQ4Y_G&_(mF"3=t'/RLs?.<Ti/"$WM5IR3,n$3+.0(K1\&^FfRM[pWiH84)h0ALr)Nfk^-=Mg9kuISt4RZ>[(Lal56>(
%MM)kQ]SMpdH!l/_mF#.>QmPMAgB+k2lUNIGdOt[O,gX4,aP@Ha+kI,tc1n./'QTM>LFeKdF-)>*%UUblQ'>PFa^peal^^CZ!24@\
%G(c@pia^aS`S.2L6l!JUOdfkQBeF/"I4YQ[N_W3*Ve1VO6qr7d&;,T#er`83X_/$Ch.`\^67LsKUL;(X^C3oc>,B5NN_^g#?-JOh
%@"b)l/s3C*GS$I`2KPCa)lb'V$8R`o8/pP&(Xb+&.oBO!JX[fAR`df-,_Q<PApGC/CmgWD(EosDC$DRX&=/pk,mg7^HsK.<UnCeS
%"B2C[Z_=ih1'H\p8N8kN*p9Gee+EcaHA<7A=.,d$4DKhFOiF,#juSrn-W?D;]RD2;+NT4/`bp;4ZEWVlU%GmBo;tlHl<8U$PKTLe
%8$fYRDRg7qaN$TT05^XP=j\&BG0:r]a^!#1%=S7mFgH=;cb^:V8o.;nZdjGo^)Z5FMf=?hAG.tW4$?"F#UZ;h#4iSS%C'urh%6)r
%nk`-=FPu+=a!/*sJ1RYgV]t;%1WOctdB)'!h3$=)eJh$rDb('\$`/ESJRa?\mMq#&LEBW]1kUr-Ra`KIE!#_b=LMm?E&W<P8cCUP
%a#juarMLloe_@Wr?8*(lTfA&sY7`]H,VO*E1!TKgY$<I#HQ.A2`G5L5jnB9jqX-3De;.@^5!A2"]]/NZAbP^V1:q>#OOjgSnZ5RJ
%cIJ6JZ2rod%GN='lOk^f?)cgFM-e-L"E-/r``=`*$<c8,gD0u9.W`=JC)5pI"Xa=2AD7]#`Rm>?8k9,lLAgVl-2pF<g`c@k9<5ar
%]d>k9?l;Np"^h&fF/AP&c"]Jp)R[0+)L]NS&VF2FL9LmGjJsNXG`;D39oF]@6j\9E"AHZ'Ss'/VOjd]9fA"VhlhPq'!u<'R5gPfk
%R**ajWB31>-N(8"Y2G_4;F$b:/*eOY"L&$RHo'))@T",mT0&b[DcRKU"7'U-KQVR<qMk/BJ0?%)cVR78hGDF6DItaOeC>1%O4/Y$
%7'T.^e%uqnI`d[l8#o+(,:@uJL!)Y-[D\\@i=Kb%R;9@6:0';g5W!11YUO9A^_V/5UUS%f=N$F\)9\QQ:OQ;-nC2[="&GIQPG(/'
%.']J]dIfMc3"BJV4H4D$c.^jZJJnVAAnueB(,^?9/UXeX'O;^&3MfFS$P.hH2BP=],P9LV-I6SN66gM>/fS7Od<rV-eU%Z$K:el0
%>[koQnYVrm$?.4SQ^`S%-n=Z\*U.@%$Ic^oo,h@1n2k3W:nlNu,2?<X"NN+q.a>s"6;S/G-:$Y&2l>/^6/W$3H:C2Xn_<j.i1RZ6
%mCj2?+,X+),?`:mbUDrZJ.MnG5r;Xo,9\3m,Cjst@c+_Ye?Vfde=`6%0jBkiU<5n!8>Vf>jFM*/g]9A18b]VPB^e;O1,A^#2VZR.
%GsLG!d_#c+>>8dq81bBuZdq$ek>U_-9fr&?51_\2d33RAFGthW<_;ln7d;<#RML.ERuh2BG2Mf>:=R_]I.AkZ.chdiSK-mER`=$@
%%5qf'&`fDj>R,0-@>5<X6FNsh5eVMbETZ@4RV]g`0'ald-<<T^_YZ$29qrb3Y=_=W7\*1B!Jg,#@83?)X:KQEaE?uholF1S=Q(9g
%Q?ShJ'V9_n@]?CW+BDb\;,aX_m?uK=bul<Xf$kD>4<-KIq?PoT$?I,X48S*)p1>]a<TPf"i?3/D7_?Idc0ps@ETgXb%G1&f5Ej5f
%9+a=^NQW4mY3%[j:*anuZW*rJUcVAu`SOKB"tdoKXiqRDo`Bfn7SS3U]Gl?]a[;)B.&e88.E"km!2!F06QI+2=XMbV)f_'$A5uLG
%+1+M#GmiaQ*YX@oe$>0bqH9dOBgdLBU:r,n69%_)$&%(t/2l`@]^Rg(9,kARFKRJ3G_FR^ZC21/G[<JpC&)a7C=NN>8L*,*S7b3.
%R]X`8&Q.g3ntaFUZ*[=(G)[>J/+FMQ[_T<5>0t1E<=X":ahW>rTD=JU%b3j?NrtN"BD<A]'GV2(c01#Ki^EkmFc/1/r-#qFZ)_AF
%L1go8;)9TQICuM?%sh&.4ome):go);Da@\g8@>3]pe8Ek#uFDke&Q]V@DpH)_JC?`[QTu/)''F7+GQ$@&aP"?;qWkGG:l[`j;lgq
%>^-c4)74QV1W&ZjFEGeLQs1tKB:i@Q!^TaH-1LElUXj+F]S.a`f*mXNYR)Y_N@V^R3>io?jX<`.du85u\,Z,f$f6b@T:Se8!:lSt
%c8H%[r&JRQP?pG##Pk2V#OGT2@]MU2UquT]ok31fP56UfNj^F(W'@7I\:A)nJ$PjRi<Ec`)\1Z.K1!$TX9h2*,rI"Y3SD_t<\7E:
%(QcqB"clV/7FG-CIrNA^8VD_c\5I8]oMI9Xcj0JcQ%`rZTO!CIe^EQtBVogXNtf7hdcUq!fQ+Q$=Vi4oGj9&T?9]2]X-O;dUno@k
%+GmT>[ZbMUJ4A(?%+XoBGPoaUUmHQnS,T]<ro?9CXXO*+1k'ed]=c!^rSKj+I`>a_Ec_,fHedN+YOK#T4?VKWmoT;=97`a7n*oo*
%PPW8Yrr2cbL5&gDh`n:;s4j6UVXr\cqA[ZhreB"]BK?+CX"QE$s%:r$(eFXPf&(-prQVZ%[efXFPHRbhII^b$d_Ws~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial -497 19163 a


 pgfr

 restore

 restore

 959.3603 590.7507 moveto

 959.3603 640.99005 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 844.51514 638.49934 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -447 19407 a @beginspecial
0 @llx 0 @lly 282 @urx 184 @ury 671 @rhi @setspecial
%%BeginDocument: odulogo.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: ident_odublue.eps
%%Creator: Adobe Illustrator(R) X
%%AI8_CreatorVersion: 10.0
%AI9_PrintingDataBegin
%%For: Old Dominion
%%CreationDate: 7/31/2003
%%BoundingBox: 0 0 282 184
%%HiResBoundingBox: 0 0 281.8409 183.5250
%%CropBox: 0 0 281.8409 183.5250
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI10"
%ADOEndClientInjection: DocumentHeader "AI10"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)
%%+ procset Adobe_CoolType_Core (2.12 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%ADOBeginClientInjection: DocumentProlog Start "AI10"
%ADOEndClientInjection: DocumentProlog Start "AI10"
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 60 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
	
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup /Cyan eq{
						pop (_Cyan_)
					}{
						dup /Magenta eq{
							pop (_Magenta_)
						}{
							dup /Yellow eq{
								pop (_Yellow_)
							}{
								dup /Black eq{
									pop (_Black_)
								}{
									dup () cvn eq{
										pop (Process)
									}if
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	
	AGMUTIL_GSTATE_flt setflat
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/rdline
{
	currentfile AGMUTIL_str256 readline pop
} bdf
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/AGMUTIL_imagefile nd
/AGMUTIL_imbuf nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMUTIL_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMUTIL_imagefile exch writestring
		}for
		true
	}ifelse
	end
}def
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 205 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
		
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 8 def
											
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						currentpagedevice/OverrideSeparations known
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				true exch
					{
					convert_spot_to_process and
					}
				forall
				}{
				false exch
					{
					convert_spot_to_process or
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/clip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&clip /clip load put
			/clip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&clip
			}def
		}if
		/eoclip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put
			/eoclip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&eoclip
			}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
		
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
									
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 exch put
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 exch put
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				AGMCORE_&&&setcolorspace
			}def
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave 
		dup begin
		1 setgray
		0 0 ImageMatrix itransform 
		Width Height ImageMatrix idtransform rectfill 
		end
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/get_csd_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		/AGMCORE_CSD_Name xdf
		AGMCORE_CSD_cache
		{
			dup /Name get AGMCORE_CSD_Name eq
			{
				exch pop exit
			}{
				pop
			}ifelse
			pop
		}forall
		end
	}if
}def
/cachepattern_level2
{
	4 dict begin
	/comparebuffer exch def
	/holdbuffer exch def
	/readbuffer 1024 string def
	/LZWFilter holdbuffer /LZWEncode filter def
	{
		currentfile readbuffer readline not
			{pop exit}
		if
		dup LZWFilter exch writestring
		LZWFilter (\n) writestring
		comparebuffer eq
			{exit}
		if
	}loop
	LZWFilter closefile
	end
}def
/cachepattern_level3
{
	3 dict begin
	/comparebuffer exch def
	/readbuffer 1024 string def
	/DoEOL false def
	{ 
		DoEOL
			{
			(\n)
			/DoEOL false def
			}
			{
			currentfile readbuffer readline not
				{pop ()}
				{
				dup length 0 eq
					{ pop(\n)}
					{
					dup comparebuffer eq
						{pop ()}
						{/DoEOL true def}
					ifelse
					}
				ifelse
				}
			ifelse
			}
		ifelse
	} /ReusableStreamDecode filter
	end
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
	makepattern
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		
		dup /customcolor_tint exch AGMCORE_gput
		
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		fill grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
}def
/driver_check_media_override
{
	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
	{
		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
	}if
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.12 0
%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.12 0
userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dict
def}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Data
begin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup
/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{
dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/args
exch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}if
dup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exch
getinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end
/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub
@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel
@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{
Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def
@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop
}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel
@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get end
countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def
/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub
def/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvx
exch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname get
errordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{
@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}
ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel
@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def
/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp
/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashow
load def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin
/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32
dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def
/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}
bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{
systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{
undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck
{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin
/globaldict where{/globaldict get begin}if dup where pop exch get/globaldict
where{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop
}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{
dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{pop
pop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict end
exch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal dup
length array copy exch setglobal}bind def/newencodedfont{currentglobal{
SharedFontDirectory 3 index known{SharedFontDirectory 3 index get
/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory
3 index get/FontReferenced known}{SharedFontDirectory 3 index known{
SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}
ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}
if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1
roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1
index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exch
dup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if def
currentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{
$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategies
known{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlength
add dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init get
exec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}bind
def/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}
ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21
add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch
(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}
if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def
/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{
/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{
/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}
bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4
index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin
$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1
index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2
index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSub
true def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfont
exch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup
/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def
/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 3
1}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?
true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch
?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def
?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1
index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont
?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getinterval
cvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exch
definefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup length
exch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index
?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add
getinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup
/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data
/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def
/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont
/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloaded
known{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict
/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2
copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparams
where dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{
get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 get
begin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128
string def/$slen 0 def/$sname null def/$match false def/$fontname null def
/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname null
def/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin
/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFont
exch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exch
definefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def
/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1
255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin
/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1
string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfont
cc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont
/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}bind
def currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin
/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontname
exch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{
/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch put
dup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def
/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}
ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0
setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exch
moveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsave
Level2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall pop
grestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobal
exch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontName
known{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName
$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}bind def end def
/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$Oblique
SetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup
/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slen
getinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exch
putinterval/$match false def $SubstituteFont/$dstack countdictstack array
dictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}
$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont
/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forall
pop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dict
dup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2
index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copied
exch definefont 3 copy put pop pop}for def currentdict end}{$Strategies
/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index
(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gt
and{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{
$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap
findresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup
(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop
$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index sub
exch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getinterval
exch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1
roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{
def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{
pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse
}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0
def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt
$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelse
end}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfont
load put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontName
known{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{
/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFound
true def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{
pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq
{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup
/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print
( substitution revised, using )print dup/FontName known{dup/FontName get}{
(unspecified font)}ifelse $str cvs print(.
)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end
Adobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1
index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if
/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1
sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategy
known{$Strategy/$BuildFont get exec}if}if end}bind put}if end end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.
%%Version: 1.13 0
systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelse
exch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25
add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exch
def/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun known
not ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont known
def/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def
/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500
string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{
pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevel
known{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFont
findresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exch
length sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFont
findresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+
{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vm
exch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vm
setglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$
type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data
/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{
Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcode
exch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod put
stringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 3
1 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{
$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvm
setglobal}if end}def/:{string currentfile exch readstring pop}executeonly def
end ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09
/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C
/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F
/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42
/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55
/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68
/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B
/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E
/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1
/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4
/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7
/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA
/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED
/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.001
0 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx exch
errordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get
(Error: )print dup(                    )cvs print errordict exch get exec stop
}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8
bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility
/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dup
string/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def
2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 index
add 2 index length le{2 index getinterval dst_string dst_index 2 index
putinterval length dst_index add/dst_index exch def exit}{1 index length 1
index sub dup 4 1 roll getinterval dst_string dst_index 2 index putinterval
pop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2
index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}loop
pop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{
/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename
/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomark
currentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresource
begin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecode
filter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}
ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def
/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal
/Generic/Category findresource dup length dict copy dup/InstanceType/dicttype
put/CIDFont exch/Category defineresource pop setglobal}ifelse
ct_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)
def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def
/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1
begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMap
defineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def
/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2
copy known{get dup dup maxlength exch length eq{dup length 10 add dict copy
ct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop
/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1
index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop
/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource
/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copy
known{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop
/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus
/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init
{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()
/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup
(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring
}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelse
load exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZE
le{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put
}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1
exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2
index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch
1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2
index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec pop
dup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop pop
false exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArray
get 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc
1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop pop
pop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 0
1 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index
2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin
/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{
ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin
/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{
currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end
/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def
/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSET
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{
exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exch
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 roll
GlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}
for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontName
currentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartData
ct_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSet
ct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop
/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInit
ct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSet
defineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def
/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSet
defineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index begin
CIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCode
exch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop
0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}
ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}
ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval
/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid
0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 roll
true charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}
def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidth
moveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aload
pop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}
ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{
currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dup
maxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}
{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def
/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1
dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdict
end/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup
/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring put
rootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfont
ct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{
currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidth
setlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDict
ct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dup
ct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}
ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private
3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869
internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Private
get mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse get
exec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def
/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get begin
ct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def
/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def
/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding
ct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11
dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def
/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load def
ct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def
/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def
/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def
/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def
/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string def
currentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def
/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dup
not{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WMode
exch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrix
matrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}if
def/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{
2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if array
def BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont
/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProc
known{CIDFont/CDevProc get/CDevProc exch def}if currentdict end
BaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVector
exch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 mul
def FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16
BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}
for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefont
setfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths get
begin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2
index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astore
def}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def
/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop pop
exch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName
3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}
bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMap
ct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind
def currentdict readonly pop end end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 65 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment
%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if 
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				AGMIMG_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
  	 						currentoverprint not{
  			 					1 AGMCORE_&setgray
  	 							knockout_image_samples
  			 					currentdict imageormask_sys
  			 				}{
  			 					currentdict ignoreimagedata
  			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										currentdict consumeimagedata
									}{
										invert_image_samples
						 				1 AGMCORE_&setgray
										currentdict imageormask_sys
									}ifelse
								}{
										currentdict ignoreimagedata
								}ifelse
							}{
									
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
							currentdict consumeimagedata 
 							currentoverprint not Name (All) eq or{
								gsave 
								knockout_unitsq
								grestore
		 					}if
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/imageormask_l2_overprint
{
	
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
		
						mark exch
						dup	dup dup
		
						
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
		
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				currentdict consumeimagedata
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			AGMIMG_&image
		}ifelse
			
	end end
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/ImageType 1 def
			/Decode [0 1 def]
			currentdict
		end
	}if
	dup begin
		/NComponents 1 cdndf
		/MultipleDataSources false cdndf
		/SkipImageProc {false} cdndf
		/HostSepColorImage false cdndf
		/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
		] cdndf
		/Operator /image cdndf
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/InksUsed [] def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
						
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
					
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%ADOBeginClientInjection: DocumentProlog End "AI10"
%ADOEndClientInjection: DocumentProlog End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
%ADOBeginClientInjection: DocumentSetup Start "AI10"
%ADOEndClientInjection: DocumentSetup Start "AI10"
Adobe_AGM_Utils begin
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
%ADOBeginClientInjection: DocumentSetup End "AI10"
%ADOEndClientInjection: DocumentSetup End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: ident_odusilver.eps 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI10"
%ADOEndClientInjection: PageSetup Start "AI10"
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%ADOBeginClientInjection: PageSetup End "AI10"
%ADOEndClientInjection: PageSetup End "AI10"
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -183.525 translate
[1 0 0 1 0 0 ]  concat
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 183.525 li
281.841 183.525 li
281.841 0 li
clp
[1 0 0 1 0 0 ] concat
%ADOBeginClientInjection: BeginPageContent "AI10"
%ADOEndClientInjection: BeginPageContent "AI10"
gsave % PSGState
0 0 mo
282 0 li
282 184 li
0 184 li
0 0 li
clp
143.929 59.7061 mo
143.929 45.9263 li
59.8091 45.9263 li
59.8091 59.7061 li
143.929 59.7061 li
false sop
0 .168627 .372549 rgb
f
59.6289 25.9839 mo
59.6289 25.9839 56.1768 20.73 59.8091 15.2861 cv
62.7432 10.8818 67.4209 10.2119 72.8608 13.6563 cv
72.8608 41.5781 li
59.6289 25.9839 li
0 .168627 .372549 rgb
f
77.0332 25.9839 mo
77.0332 25.9839 73.583 20.73 77.2109 15.2861 cv
80.147 10.8818 84.8291 10.2119 90.2651 13.6563 cv
90.2651 41.5781 li
77.0332 25.9839 li
0 .168627 .372549 rgb
f
144.835 25.9839 mo
144.835 25.9839 148.283 20.73 144.657 15.2861 cv
141.717 10.8818 137.039 10.2119 131.602 13.6563 cv
131.602 41.5781 li
144.835 25.9839 li
0 .168627 .372549 rgb
f
127.433 25.9839 mo
127.433 25.9839 130.877 20.73 127.249 15.2861 cv
124.315 10.8818 119.633 10.2119 114.197 13.6563 cv
114.197 41.5781 li
127.433 25.9839 li
0 .168627 .372549 rgb
f
94.0752 24.1699 mo
102.141 41.7583 li
110.753 23.082 li
110.753 23.082 112.749 17.916 109.215 13.8359 cv
106.185 10.3462 104.133 10.7583 102.503 10.5698 cv
101.823 10.5698 li
100.193 10.7583 98.1392 10.3462 95.1152 13.8359 cv
91.5771 17.916 93.5728 23.082 93.5728 23.082 cv
94.0752 24.1699 li
0 .168627 .372549 rgb
f
102.231 8.45801 mo
104.567 8.45801 106.461 6.56396 106.461 4.22607 cv
106.461 1.89209 104.567 0 102.231 0 cv
99.897 0 98.0029 1.89209 98.0029 4.22607 cv
98.0029 6.56396 99.897 8.45801 102.231 8.45801 cv
0 .168627 .372549 rgb
f
101.735 85.6431 mo
101.735 96.9712 93.1094 105.424 81.4937 105.424 cv
68.4976 105.424 61.022 96.2817 61.022 86.0454 cv
61.022 74.3145 69.5327 65.6313 81.6089 65.6313 cv
94.8921 65.6313 101.735 75.1772 101.735 85.6431 cv
cp
68.8428 84.3779 mo
68.8428 92.313 72.2354 103.125 82.0688 103.125 cv
88.624 103.125 93.9146 98.2368 93.9146 86.6782 cv
93.9146 77.9946 90.0044 67.9316 80.8613 67.9316 cv
75.1108 67.9316 68.8428 72.1294 68.8428 84.3779 cv
0 .168627 .372549 rgb
f
109.655 98.2739 mo
109.655 100.071 109.727 101.365 110.266 101.975 cv
110.697 102.478 111.272 102.766 114.147 102.766 cv
118.137 102.766 118.712 102.586 120.365 98.8843 cv
120.725 98.7046 121.3 98.813 121.479 99.1001 cv
121.192 100.61 120.401 103.341 119.97 104.311 cv
118.46 104.24 115.37 104.204 111.344 104.204 cv
107.606 104.204 li
105.773 104.204 103.977 104.24 102.467 104.311 cv
102.179 104.167 102.072 103.449 102.395 103.269 cv
103.473 103.089 li
105.163 102.874 105.486 102.766 105.486 99.0278 cv
105.486 85.6582 li
105.486 81.9204 105.163 81.813 103.473 81.561 cv
102.467 81.4175 li
102.215 81.2378 102.215 80.519 102.539 80.3755 cv
104.336 80.4473 105.953 80.4829 107.606 80.4829 cv
109.188 80.4829 110.805 80.4473 112.386 80.375 cv
112.71 80.519 112.746 81.2378 112.458 81.4175 cv
111.667 81.561 li
109.979 81.813 109.655 81.9204 109.655 85.6582 cv
109.655 98.2739 li
0 .168627 .372549 rgb
f
125.612 85.874 mo
125.612 82.4238 125.576 81.9927 123.887 81.7769 cv
123.132 81.7051 li
122.881 81.5254 122.881 80.8784 123.168 80.6987 cv
125.756 80.4829 128.631 80.375 132.153 80.375 cv
135.567 80.375 138.012 80.6626 140.635 81.5972 cv
144.948 83.1787 148.003 86.9883 148.003 92.3433 cv
148.003 96.3325 146.026 100.43 141.569 102.694 cv
139.018 103.988 135.927 104.419 132.656 104.419 cv
130.464 104.419 128.775 104.204 127.445 104.204 cv
126.08 104.204 124.462 104.24 122.881 104.311 cv
122.593 104.167 122.557 103.521 122.809 103.269 cv
123.6 103.162 li
125.289 102.946 125.612 102.837 125.612 99.0278 cv
125.612 85.874 li
cp
129.781 97.6265 mo
129.781 101.113 130.033 102.982 133.843 102.982 cv
140.24 102.982 143.115 98.4536 143.115 92.3794 cv
143.115 85.2632 138.982 81.813 132.979 81.813 cv
131.471 81.813 130.32 82.1006 130.068 82.3159 cv
129.817 82.5317 129.781 83.2866 129.781 84.9756 cv
129.781 97.6265 li
0 .168627 .372549 rgb
f
7.27441 112.695 mo
7.27441 105.579 3.55811 106.053 0 105.974 cv
0 103.918 li
3.0835 104.077 6.24658 104.077 9.33008 104.077 cv
12.6509 104.077 17.1577 103.918 23.0088 103.918 cv
43.4873 103.918 54.6357 117.597 54.6357 131.592 cv
54.6357 139.42 50.0498 159.108 22.0601 159.108 cv
18.0273 159.108 14.311 158.95 10.5952 158.95 cv
7.03711 158.95 3.55811 159.029 0 159.108 cv
0 157.052 li
4.74414 156.578 7.03711 156.419 7.27441 151.042 cv
7.27441 112.695 li
cp
15.0229 149.778 mo
15.0229 155.866 19.3716 156.578 23.2461 156.578 cv
40.3247 156.578 45.9385 143.69 45.9385 131.909 cv
45.9385 117.123 36.4502 106.449 21.1904 106.449 cv
17.9482 106.449 16.4463 106.686 15.0229 106.765 cv
15.0229 149.778 li
0 .168627 .372549 rgb
f
125.657 116.143 mo
125.657 112.286 123.563 112.231 120.642 112.175 cv
120.642 110.743 li
123.232 110.798 125.767 110.853 128.247 110.853 cv
130.781 110.853 133.316 110.798 136.072 110.743 cv
136.072 112.175 li
133.151 112.231 131.058 112.286 131.058 116.143 cv
131.058 143.808 li
131.058 147.666 133.151 147.72 136.072 147.776 cv
136.072 149.208 li
133.427 149.208 131.058 149.098 128.633 149.098 cv
125.987 149.098 123.397 149.154 120.642 149.208 cv
120.642 147.776 li
123.563 147.72 125.657 147.666 125.657 143.808 cv
125.657 116.143 li
0 .168627 .372549 rgb
f
178.009 149.705 mo
176.741 149.705 li
147.92 118.072 li
147.92 138.627 li
147.92 146.233 148.525 147.776 154.478 147.776 cv
154.478 149.208 li
152.053 149.208 149.572 149.098 147.148 149.098 cv
144.724 149.098 142.243 149.154 139.818 149.208 cv
139.818 147.776 li
143.181 147.776 145.715 147.776 145.715 140.777 cv
145.715 118.624 li
145.715 113.884 143.676 112.175 138.937 112.175 cv
138.937 110.743 li
140.646 110.798 142.299 110.853 144.007 110.853 cv
145.495 110.853 147.038 110.743 148.525 110.743 cv
150.785 114.104 155.91 119.12 162.192 126.063 cv
166.877 131.243 172.057 136.699 175.805 140.777 cv
175.805 118.843 li
175.805 113.774 174.647 112.231 169.137 112.175 cv
169.136 110.743 li
171.671 110.798 174.261 110.853 176.796 110.853 cv
178.945 110.853 181.039 110.743 183.189 110.743 cv
183.189 112.175 li
179.827 112.175 178.009 112.451 178.009 117.852 cv
178.009 149.705 li
0 .168627 .372549 rgb
f
191.068 116.143 mo
191.068 112.286 188.975 112.231 186.054 112.175 cv
186.054 110.743 li
188.644 110.798 191.179 110.853 193.659 110.853 cv
196.193 110.853 198.729 110.798 201.484 110.743 cv
201.484 112.175 li
198.563 112.231 196.47 112.286 196.47 116.143 cv
196.47 143.808 li
196.47 147.666 198.563 147.72 201.484 147.776 cv
201.484 149.208 li
198.839 149.208 196.469 149.098 194.045 149.098 cv
191.399 149.098 188.81 149.154 186.054 149.208 cv
186.054 147.776 li
188.975 147.72 191.068 147.666 191.068 143.808 cv
191.068 116.143 li
0 .168627 .372549 rgb
f
52.2441 109.917 mo
63.2661 109.917 71.918 119.285 71.918 129.755 cv
71.918 139.84 64.1479 150.035 52.0791 150.035 cv
41.0571 150.035 32.4053 140.667 32.4053 130.196 cv
32.4053 120.111 40.1758 109.917 52.2441 109.917 cv
cp
52.7402 148.272 mo
60.7861 148.272 65.856 141.328 65.856 131.353 cv
65.856 122.977 61.0068 111.679 51.583 111.679 cv
43.5371 111.679 38.4673 118.624 38.4673 128.598 cv
38.4673 136.974 43.3169 148.272 52.7402 148.272 cv
0 .168627 .372549 rgb
f
95.7241 141.659 mo
100.684 131.353 106.029 121.213 110.603 110.743 cv
112.091 110.798 113.634 110.853 115.122 110.853 cv
116.72 110.853 118.374 110.743 119.972 110.743 cv
119.972 112.175 li
118.098 112.175 116.831 112.286 116.114 112.836 cv
115.398 113.388 115.067 114.325 115.067 116.143 cv
115.067 124.85 115.563 134.109 115.784 142.43 cv
115.894 146.563 116.28 147.776 121.791 147.776 cv
121.79 149.208 li
118.759 149.208 115.729 149.098 112.697 149.098 cv
109.997 149.098 107.352 149.154 104.652 149.208 cv
104.652 147.776 li
106.581 147.776 107.958 147.776 108.895 147.28 cv
109.887 146.729 110.328 145.681 110.328 143.533 cv
109.942 117.246 li
109.832 117.246 li
96.8262 144.249 li
96.2202 145.572 95.1182 148.272 94.6772 149.705 cv
93.5752 149.705 li
88.8906 139.179 83.6001 128.874 78.3647 118.458 cv
78.2549 118.458 li
77.814 138.407 li
77.814 139.124 77.7588 141.108 77.7588 141.879 cv
77.7588 144.58 78.0342 146.067 78.916 146.838 cv
79.7979 147.61 81.1758 147.776 83.3799 147.776 cv
83.3799 149.208 li
81.1201 149.208 78.8057 149.098 76.5464 149.098 cv
74.1216 149.098 71.6416 149.154 69.2168 149.208 cv
69.2168 147.776 li
73.1299 147.776 75.5547 146.838 75.7749 139.455 cv
75.9951 131.905 76.3809 124.41 76.3809 116.86 cv
76.3809 114.931 76.1055 113.718 75.334 113.057 cv
74.5625 112.396 73.3501 112.175 71.5317 112.175 cv
71.5317 110.743 li
73.4604 110.798 75.4443 110.853 77.373 110.853 cv
78.5303 110.853 79.7427 110.743 80.8999 110.743 cv
95.7241 141.659 li
0 .168627 .372549 rgb
f
220.551 110.213 mo
231.572 110.213 240.225 119.582 240.225 130.052 cv
240.225 140.137 232.454 150.332 220.386 150.332 cv
209.364 150.332 200.712 140.963 200.712 130.493 cv
200.712 120.408 208.482 110.213 220.551 110.213 cv
cp
221.047 148.569 mo
229.093 148.569 234.163 141.625 234.163 131.65 cv
234.163 123.274 229.313 111.976 219.89 111.976 cv
211.844 111.976 206.773 118.92 206.773 128.895 cv
206.773 137.271 211.623 148.569 221.047 148.569 cv
0 .168627 .372549 rgb
f
276.154 150.001 mo
274.888 150.001 li
246.065 118.369 li
246.065 138.924 li
246.065 146.53 246.672 148.073 252.623 148.073 cv
252.623 149.505 li
250.198 149.505 247.719 149.395 245.294 149.395 cv
242.869 149.395 240.39 149.451 237.965 149.505 cv
237.965 148.073 li
241.326 148.073 243.861 148.073 243.861 141.074 cv
243.861 118.92 li
243.861 114.181 241.822 112.472 237.083 112.472 cv
237.083 111.04 li
238.791 111.095 240.444 111.15 242.152 111.15 cv
243.641 111.15 245.184 111.04 246.672 111.04 cv
248.931 114.401 254.057 119.417 260.339 126.36 cv
265.022 131.54 270.203 136.996 273.95 141.074 cv
273.95 119.14 li
273.95 114.071 272.793 112.528 267.282 112.472 cv
267.282 111.04 li
269.817 111.095 272.407 111.15 274.942 111.15 cv
277.092 111.15 279.186 111.04 281.335 111.04 cv
281.335 112.472 li
277.974 112.472 276.154 112.748 276.154 118.149 cv
276.154 150.001 li
0 .168627 .372549 rgb
f
62.0698 164.261 mo
62.0698 160.452 61.7466 160.343 60.0576 160.092 cv
59.4463 159.984 li
59.1948 159.733 59.231 159.122 59.5181 158.978 cv
60.9561 159.049 62.5732 159.085 64.1548 159.085 cv
65.772 159.085 67.3892 159.049 68.9707 158.978 cv
69.2583 159.122 69.2939 159.733 69.0425 159.984 cv
68.252 160.092 li
66.5625 160.343 66.2393 160.452 66.2393 164.261 cv
66.2393 172.492 li
66.2393 177.451 67.7485 181.62 72.7441 181.62 cv
77.4526 181.62 79.3931 178.062 79.3931 172.599 cv
79.3931 168.107 li
79.3931 165.411 79.3574 162.069 78.7104 161.026 cv
78.3867 160.487 77.812 160.236 76.9136 160.092 cv
76.1943 159.984 li
75.8711 159.733 75.9072 159.085 76.2666 158.978 cv
77.4883 159.049 78.854 159.085 80.2559 159.085 cv
81.7651 159.085 82.7358 159.049 84.0654 158.978 cv
84.353 159.158 84.4248 159.733 84.1372 159.984 cv
83.3467 160.164 li
82.6636 160.307 82.0171 160.452 81.7651 161.026 cv
81.2622 162.105 81.2622 165.267 81.2622 168.107 cv
81.2622 172.383 li
81.2622 175.654 80.7588 178.673 78.8901 180.686 cv
77.021 182.699 74.3257 183.381 71.8457 183.381 cv
68.4673 183.381 66.0952 182.663 64.4419 181.081 cv
62.8247 179.536 62.0698 177.02 62.0698 173.39 cv
62.0698 164.261 li
0 .168627 .372549 rgb
f
109.978 176.697 mo
109.978 177.775 109.978 182.195 110.085 183.022 cv
109.798 183.417 109.295 183.561 108.864 183.525 cv
108.289 182.77 107.246 181.548 104.659 178.601 cv
96.2485 169.005 li
93.9126 166.381 92.7622 165.016 92.1514 164.477 cv
92.0435 164.477 92.0435 164.872 92.0435 166.777 cv
92.0435 173.785 li
92.0435 176.481 92.0796 179.788 92.6904 180.866 cv
93.0142 181.405 93.625 181.62 94.5234 181.764 cv
95.314 181.872 li
95.6377 182.124 95.6016 182.806 95.2422 182.914 cv
93.9126 182.842 92.5107 182.806 91.145 182.806 cv
89.6357 182.806 88.665 182.842 87.4072 182.914 cv
87.1196 182.734 87.0479 182.124 87.3354 181.872 cv
88.126 181.692 li
88.8091 181.584 89.4561 181.44 89.7075 180.866 cv
90.1748 179.751 90.1748 176.625 90.1748 173.785 cv
90.1748 165.267 li
90.1748 162.464 90.2104 161.889 88.9888 160.846 cv
88.5933 160.523 87.5869 160.236 87.084 160.127 cv
86.5449 160.02 li
86.293 159.804 86.3291 159.085 86.6885 158.978 cv
88.0542 159.122 90.0308 159.085 90.9292 159.085 cv
91.6841 159.085 92.5469 159.049 93.4092 158.978 cv
94.0205 160.523 97.938 165.051 99.1958 166.417 cv
102.79 170.299 li
104.299 171.953 107.642 175.762 108.001 175.977 cv
108.109 175.87 108.109 175.69 108.109 175.115 cv
108.109 168.107 li
108.109 165.411 108.073 162.105 107.426 161.026 cv
107.103 160.487 106.527 160.272 105.629 160.127 cv
104.802 160.02 li
104.479 159.768 104.515 159.085 104.874 158.978 cv
106.276 159.049 107.605 159.085 109.007 159.085 cv
110.553 159.085 111.487 159.049 112.781 158.978 cv
113.068 159.158 113.141 159.768 112.853 160.02 cv
112.026 160.2 li
111.343 160.307 110.732 160.452 110.481 161.026 cv
109.978 162.14 109.978 165.267 109.978 168.107 cv
109.978 176.697 li
0 .168627 .372549 rgb
f
123.599 177.63 mo
123.599 181.44 123.922 181.548 125.611 181.764 cv
126.402 181.872 li
126.654 182.124 126.618 182.77 126.33 182.914 cv
124.749 182.842 123.132 182.806 121.55 182.806 cv
119.969 182.806 118.28 182.842 116.698 182.914 cv
116.411 182.77 116.375 182.124 116.626 181.872 cv
117.417 181.764 li
119.106 181.548 119.43 181.44 119.43 177.63 cv
119.43 164.261 li
119.43 160.452 119.106 160.343 117.417 160.127 cv
116.626 160.02 li
116.375 159.768 116.411 159.122 116.698 158.978 cv
118.28 159.049 119.897 159.085 121.55 159.085 cv
123.132 159.085 124.749 159.049 126.33 158.978 cv
126.618 159.122 126.654 159.768 126.402 160.02 cv
125.611 160.127 li
123.922 160.343 123.599 160.452 123.599 164.261 cv
123.599 177.63 li
0 .168627 .372549 rgb
f
145.198 173.893 mo
143.761 177.164 142.071 181.369 141.461 183.202 cv
141.389 183.309 141.102 183.381 140.85 183.381 cv
140.598 183.381 140.347 183.309 140.167 183.202 cv
139.735 181.764 139.16 180.002 138.514 178.494 cv
132.224 163.363 li
131.218 160.955 130.895 160.452 129.457 160.164 cv
128.594 159.984 li
128.343 159.733 128.343 159.085 128.702 158.978 cv
130.104 159.049 131.649 159.085 133.051 159.085 cv
134.668 159.085 135.89 159.049 137.795 158.978 cv
138.118 159.194 138.154 159.768 137.831 160.02 cv
136.933 160.236 li
136.142 160.416 135.854 160.595 135.854 160.882 cv
135.854 161.206 136.142 161.997 137.615 165.663 cv
140.203 172.06 li
140.85 173.677 141.82 175.797 142.18 176.625 cv
144.12 172.096 146.276 167.136 148.182 162.249 cv
148.757 160.811 148.648 160.523 147.57 160.272 cv
146.528 160.02 li
146.276 159.733 146.313 159.158 146.6 158.978 cv
148.073 159.049 149.296 159.085 150.445 159.085 cv
151.739 159.085 152.926 159.049 153.932 158.978 cv
154.22 159.158 154.184 159.733 154.004 160.02 cv
153.105 160.2 li
152.278 160.379 151.488 160.631 150.877 161.673 cv
149.871 163.398 148.828 165.806 147.211 169.436 cv
145.198 173.893 li
0 .168627 .372549 rgb
f
157.885 164.261 mo
157.885 160.452 157.562 160.343 155.872 160.092 cv
155.297 160.02 li
155.046 159.768 155.082 159.122 155.369 158.978 cv
156.735 159.049 158.424 159.085 160.006 159.085 cv
166.87 159.085 li
169.17 159.085 171.255 159.049 171.722 158.978 cv
171.865 159.588 172.081 162.428 172.297 163.973 cv
172.153 164.261 171.435 164.333 171.146 164.118 cv
170.572 162.033 170.033 161.134 168.883 160.846 cv
168.056 160.595 166.978 160.523 166.008 160.523 cv
163.6 160.523 li
162.054 160.523 162.054 160.595 162.054 162.644 cv
162.054 168.717 li
162.054 169.652 162.09 169.688 162.917 169.688 cv
164.642 169.688 li
167.769 169.688 168.38 169.652 168.631 168.107 cv
168.883 166.884 li
169.17 166.633 169.854 166.633 170.033 166.92 cv
169.997 167.891 169.925 169.185 169.925 170.514 cv
169.925 171.88 169.997 173.138 170.033 174.289 cv
169.854 174.54 169.17 174.54 168.883 174.325 cv
168.631 172.886 li
168.38 171.377 167.769 171.305 164.642 171.305 cv
162.917 171.305 li
162.09 171.305 162.054 171.377 162.054 172.276 cv
162.054 176.84 li
162.054 178.673 162.126 179.967 162.665 180.578 cv
163.097 181.081 163.707 181.369 166.727 181.369 cv
171.291 181.44 172.081 180.398 173.339 177.487 cv
173.663 177.236 174.273 177.343 174.489 177.703 cv
174.273 179.212 173.483 181.944 172.979 182.914 cv
171.398 182.842 168.308 182.806 164.103 182.806 cv
160.006 182.806 li
158.424 182.806 156.231 182.842 154.614 182.914 cv
154.327 182.77 154.291 182.124 154.543 181.872 cv
155.872 181.728 li
157.562 181.548 157.885 181.44 157.885 177.63 cv
157.885 164.261 li
0 .168627 .372549 rgb
f
179.916 164.477 mo
179.916 161.026 179.88 160.595 178.19 160.416 cv
177.256 160.307 li
177.005 160.056 177.005 159.481 177.292 159.301 cv
179.557 159.085 182.611 158.978 185.559 158.978 cv
188.361 158.978 190.806 159.337 192.387 160.2 cv
194.22 161.17 195.55 162.859 195.55 165.447 cv
195.55 168.753 192.998 170.407 191.237 171.125 cv
191.021 171.233 191.093 171.521 191.237 171.737 cv
194.112 176.588 195.909 179.643 197.599 181.045 cv
198.604 181.908 199.646 182.124 200.078 182.16 cv
200.258 182.303 200.258 182.699 200.15 182.878 cv
199.719 182.986 199.036 183.093 197.778 183.093 cv
194.328 183.093 192.459 181.692 190.267 178.349 cv
189.296 176.84 188.29 174.864 187.427 173.461 cv
186.78 172.383 186.385 172.24 185.199 172.24 cv
184.121 172.24 184.085 172.276 184.085 173.031 cv
184.085 177.63 li
184.085 181.44 184.408 181.548 186.098 181.764 cv
186.888 181.872 li
187.14 182.124 187.104 182.77 186.816 182.914 cv
185.234 182.842 183.617 182.806 182.036 182.806 cv
180.455 182.806 178.838 182.842 177.185 182.914 cv
176.896 182.77 176.789 182.124 177.112 181.872 cv
177.903 181.764 li
179.592 181.548 179.916 181.44 179.916 177.63 cv
179.916 164.477 li
cp
184.085 169.652 mo
184.085 170.802 184.085 170.874 185.81 170.874 cv
189.332 170.874 190.949 169.149 190.949 165.735 cv
190.949 162.895 189.116 160.416 185.989 160.416 cv
184.121 160.416 184.085 160.523 184.085 162.176 cv
184.085 169.652 li
0 .168627 .372549 rgb
f
202.81 181.872 mo
202.162 181.117 201.695 178.637 201.73 176.409 cv
201.946 176.049 202.558 176.013 202.845 176.265 cv
203.492 178.098 205.433 181.944 208.955 181.944 cv
211.687 181.944 213.231 180.291 213.231 178.098 cv
213.231 176.049 212.262 174.396 209.565 172.886 cv
208.021 172.024 li
205.325 170.514 202.953 168.322 202.953 165.087 cv
202.953 161.53 205.612 158.51 210.859 158.51 cv
212.729 158.51 214.095 158.942 215.783 159.265 cv
216.179 160.056 216.538 162.428 216.538 164.118 cv
216.358 164.441 215.712 164.477 215.389 164.225 cv
214.849 162.356 213.591 159.948 210.536 159.948 cv
207.661 159.948 206.475 161.817 206.475 163.722 cv
206.475 165.231 207.518 166.849 209.89 168.107 cv
212.117 169.292 li
214.454 170.514 217.041 172.743 217.041 176.373 cv
217.041 180.47 213.915 183.381 208.703 183.381 cv
205.396 183.381 203.528 182.303 202.81 181.872 cv
0 .168627 .372549 rgb
f
228.146 177.63 mo
228.146 181.44 228.471 181.548 230.159 181.764 cv
230.95 181.872 li
231.202 182.124 231.166 182.77 230.878 182.914 cv
229.297 182.842 227.68 182.806 226.099 182.806 cv
224.517 182.806 222.828 182.842 221.246 182.914 cv
220.959 182.77 220.923 182.124 221.175 181.872 cv
221.965 181.764 li
223.654 181.548 223.978 181.44 223.978 177.63 cv
223.978 164.261 li
223.978 160.452 223.654 160.343 221.965 160.127 cv
221.175 160.02 li
220.923 159.768 220.959 159.122 221.246 158.978 cv
222.828 159.049 224.445 159.085 226.099 159.085 cv
227.68 159.085 229.297 159.049 230.878 158.978 cv
231.166 159.122 231.202 159.768 230.95 160.02 cv
230.159 160.127 li
228.471 160.343 228.146 160.452 228.146 164.261 cv
228.146 177.63 li
0 .168627 .372549 rgb
f
243.888 162.105 mo
243.888 160.595 243.853 160.523 242.918 160.523 cv
240.905 160.523 li
237.599 160.523 236.628 160.918 235.299 163.83 cv
235.047 164.045 234.292 163.938 234.148 163.578 cv
234.76 161.637 235.299 159.409 235.55 158.151 cv
235.622 158.043 235.766 158.007 235.945 158.007 cv
236.089 158.007 236.232 158.043 236.305 158.151 cv
236.484 159.049 236.987 159.085 239.432 159.085 cv
254.095 159.085 li
255.856 159.085 256.396 158.978 256.826 158.151 cv
256.971 158.08 257.114 158.007 257.258 158.007 cv
257.474 158.007 257.653 158.08 257.726 158.187 cv
257.365 159.661 257.078 162.751 257.186 163.902 cv
257.006 164.189 256.396 164.261 256.072 164.009 cv
255.604 161.206 254.922 160.523 251.076 160.523 cv
249.027 160.523 li
248.093 160.523 248.058 160.595 248.058 162.105 cv
248.058 177.63 li
248.058 181.44 248.381 181.548 250.07 181.728 cv
251.363 181.872 li
251.615 182.124 251.579 182.77 251.292 182.914 cv
249.207 182.842 247.59 182.806 246.009 182.806 cv
244.427 182.806 242.738 182.842 240.438 182.914 cv
240.15 182.77 240.114 182.051 240.366 181.872 cv
241.875 181.692 li
243.564 181.548 243.888 181.44 243.888 177.63 cv
243.888 162.105 li
0 .168627 .372549 rgb
f
267.968 175.51 mo
267.968 173.498 267.824 172.958 266.817 171.053 cv
262.505 162.536 li
261.714 160.991 261.427 160.559 259.81 160.236 cv
258.875 160.02 li
258.659 159.768 258.731 159.085 259.019 158.978 cv
260.563 159.049 262.073 159.085 263.547 159.085 cv
265.128 159.085 267.32 159.049 268.147 158.978 cv
268.435 159.122 268.507 159.768 268.219 160.02 cv
267.141 160.2 li
266.566 160.272 266.387 160.379 266.387 160.667 cv
266.387 160.955 266.53 161.35 267.033 162.536 cv
268.471 165.626 269.765 168.538 271.202 171.162 cv
272.676 168.43 274.006 165.915 275.407 163.218 cv
276.019 161.997 276.378 161.206 276.378 160.811 cv
276.378 160.452 276.054 160.343 275.551 160.272 cv
274.473 160.02 li
274.222 159.768 274.222 159.158 274.581 158.978 cv
276.162 159.049 277.276 159.085 278.354 159.085 cv
279.469 159.085 280.618 159.049 281.769 158.978 cv
282.092 159.158 282.092 159.733 281.841 160.02 cv
280.798 160.236 li
279.181 160.523 278.75 161.206 276.881 164.369 cv
275.659 166.417 274.581 168.394 273.467 170.407 cv
272.389 172.276 272.137 173.031 272.137 175.474 cv
272.137 177.63 li
272.137 181.44 272.46 181.548 274.222 181.728 cv
275.587 181.872 li
275.839 182.124 275.803 182.77 275.515 182.914 cv
273.287 182.842 271.67 182.806 270.088 182.806 cv
268.435 182.806 266.817 182.842 264.877 182.914 cv
264.589 182.77 264.554 182.124 264.805 181.872 cv
265.955 181.728 li
267.645 181.548 267.968 181.44 267.968 177.63 cv
267.968 175.51 li
0 .168627 .372549 rgb
f
grestore % PSGState
%ADOBeginClientInjection: EndPageContent "AI10"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI10"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI10"
%ADOEndClientInjection: PageTrailer Start "AI10"
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%ADOBeginClientInjection: PageTrailer End "AI10"
%ADOEndClientInjection: PageTrailer End "AI10"
%%Trailer
%ADOBeginClientInjection: DocumentTrailer Start "AI10"
%ADOEndClientInjection: DocumentTrailer Start "AI10"
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%ADOBeginClientInjection: DocumentTrailer End "AI10"
%ADOEndClientInjection: DocumentTrailer End "AI10"
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 10.0
%%For: (Old Dominion) (University)
%%Title: (ident_odublue.eps)
%%CreationDate: 7/31/2003 12:37 PM
%AI9_DataStream
%GatUYBlBffOlgigr?(<_!,HaWb55j*(17kKYL\rgX-V<T(e18gQ<IPb!Y<C9^OG1!LcjN<-1uR-b@3][1GU`RI/DAg2n)RA(RI)L
%2n/g7]s>2M>ck&glme7hlB>".rL]G6llQ]VX]$n[/_;_28BoC?'H=!3?^js(j72O4e+N_&n]h%"q>T>]H[Bm^s6t?BrNNn:IC4Dt
%^Y,ag@t/WDqo`_q[6+E/gun(Rh;-WCrdq#]ICc?EY?,p)besF"F`_X#_uAKBroa6FH[#*n>hQMh)0GjrUWoFFHM=?7h8LZL7DCe-
%Ia;NnMS?a#V9h2YgA.)iI<fu.o^I+?Hb@&D$%Jf1h<sfQIt+5QIV%+%LS&8#Ndb8?qXqa%3tRk#.")LBn(m6iec,47rd+=KMJE7+
%m,5J\g&]S95:c`pc2#o=`Vp=/Faq4hI,NoCGPm6*qo;3qK8=9IK^Dk@n`T_0?EXe;@on0TgGf$(Qb<(9gRGs-L=SaBRJ6+JDC<2l
%nRs>X#9Am"5OP,G*b@X<d>EC#r+m[+rq[,G"8>DMQ2KA`k'ou.g-;36r,4DRr4Sb@j]=b1H1U/8F#[m&b_he<d6I=`#5A9R&nLo`
%IslOKHe^F/HX_5,;u:KK6H:::U9)Kef!*<-rGGkjrQgi-?XBqmCkZoeIX-7>a*Mk-q"F8Cl1gEaX'D44h`P33n%ZKFHmB?H@9;^i
%ea:?T9$U/CT3gp[,c;[Qs(dO2GPCS#O17\]:S@OL<AElbIsJUhgO7`35I:IW]<C\s2rEKk+'rhClaVg9Y!FjZBRqUeQ':gF`4p1N
%XYqL15kd0U`^.6\VYg5ho)7[pCX>Z*aM3).]A)4mZTiqerAh^)(ae2(f!P]hdGgu5JL`R_:)Wk'pQl\KO0^(roDe@;f4Fff[XWFX
%6nl3L2p2%G2](6'CE+"jaJU!:pD^[P=1@Yk\)S"s4.>d*:A;oH]>*-!LW^X<jOGW-U#4PRk%8MY,gkr.+25@tfj4&"<q!Y>U-&#\
%9"T&Cc,H_Zrq>W@s8M;Ie'ld0e)SpEl/qX%[%<T4I%!gjBfPd`maRhsPLG_ZPN.koal_[JUn3g7I$.7a8N?5fm_k]aj4!%Pj5]1e
%n`KW1\/s***9Z@(*08"B5Bb*@fPF?m-em\KG.ZEKD<nWHo/:IG2Ji?CD=,nj:,aPij3;bRfc4koVJPfMD;lmYr5NU?L5u;to]YB"
%ph5#]3BB4$8*)-@V5&8LNr5#$Z:Cd`ertDb[rkW1C9=>pROT>&p!m&H9fXdQjg]-MVAtk)BT4=)<+7#I;I$KGjO8L>O7P8JnklR#
%A@cP:k)b"7fk-FCdn)SqgU'OBWMYi!8r46]o#W2IBT;O=T#B[!NLP/,CFh3\'OqQijY#8#_J(t9a'foFi@%[RJ2r^?$R,<'Jdo_l
%q@eAF[sm@uI.aj9T7-:X#Of@tef/hu:>E,/\rAdleJ4EVEmY'RSTE@"HYQ@CZ/+,n4gNTRRr,IY#4&Ctf$YHG*N,S50cNJJ1UM"_
%$n]`Ni5XdIrXWbNqXiV+T%O3i0[_g8N4gO_HT+6[#;@G'EW!NQq!I3GR?a/QZ0FSdpAY!]he%8MZZ:[d',&?dL4B)FIsJL.ZS-l0
%=bd!0A"?.Eaj2uL+[Y'L]u!O5OT,63m-K5Lci9?Y?WLV.e`q(&2ld=(p\d&GrA<=&oOeTC3b,u')A5)MnE1`3T8,@@j)QDR69OQV
%;hDu<N:@Vj>sgN!ItX,ZIfAFD#.)87/,df%:7*AekBK(W3nG1O%2h0Bjtf_Im':1)%i\$E=e<mq^r+/@P2'<LAE9t_NA$7D^h9.:
%LLW)[fIV[lkg[C\Rjs2H@cXarp+HuWJ\CStY>1=5+nLD9s5dJSYOngb3uA*]+0K"UIIZKigL"jn:TN)hF8i&&e_`SqIIS+O(or.a
%2K(7j7bRN*B(`Q&KV=gKhZ<PM_>QP<!L[lXbBHTs((Wguk_hA]>5.<CY<H*;6-I(T]QW#t[.<*%_406q.IXr$lHKiLEJGkgf(OX=
%+2Dg?T?ED+k@)R4D)-qH^:J[J"iJ"+N"u)0rP+oS)(f]F6I3at:&[TD..?"t4g?GUqfMSoc&]=j)>adl@b%*lJ(idb4FFS89`DPb
%/qfg%rnP<^mdfePh]EKds7MA1IK/s/e*>]BgT*NP2UGh(BkXEmk@5k'NF/-)Iej"$pi^k(F\106h+sC#09-"Kn,#Mfde@7KI='7m
%H"k:[YPMeUHi3S"+Ma&)2](!*mF11WIdH:lq@5^clKqA/n27[;SQ^KdqMBR@_jkDckfF:Eg:);'JTkWp'E3,uJ+lgYq/H;MmFC=9
%oq9E[oUe?[.'he"VrdCigOD`n?b9rsFdmSu]R/F"$%1,#Lf+*?nf4B9GQ0r/Z4hXkIISU@+?-d4G5%%^h!XS`<p/i4g=?0$i\QDO
%O(eChI_WYnfZ$-\4mfX/m)\b`D;DRRhebEXiHH5:CTtS-:)g^B!QjYsLH@P_S+@.Ij5n8FJ\59*BNAJVLuY>n*IL0LmIepCMg0+!
%ab9WPS,H)dIJre_p[kulB(nR"k41__XtZC#[`#]>o[TQ$f'd^+G2,B-5s&j$bACl.GF.X54m[uM&$bHV_`uj=;HqQ)m\69"+0iQ1
%dF7,m?X>s2e#>m0p5e4=&qTJ]h<."ddnC#<_sV8`F8c5((O^1n*j727p8c7459E+q.4O!*J*`eEkb.VEe`@el4UdF%''m5$8EY3.
%gthE@p@kACDL^O#hr/$.]YHGjU=5Z=rU2,.m,NlO)$58>"_I1Q*.@WpG>G(IdH'9IqM5$gdFHe3/IhR>rJ09Hr:]B1L]&GVh2j2b
%V)9=\p1qpf!=+VCgGqE(b+&:_+"shk^XMhYUh5(%f(>#*`VJp"`W"j#rZq+(p2Tp*`Eg'c*TUL3hXD-55-VV3UH]]*1?8oj,D%&a
%U)k<2&[ThZ;5[)/!(de>A+MD#aL:sJ[mj?Wm"RGdb5CbCNAb.Z2PZJ6X\_(r\t=s.^4W7QQL!##p5`=glP^Fg4=LNFB28G9)8m&b
%,^=1Z7C@n8f'jupI8-L3'm]:a?bD.90gKchD"?p_37!UprY;Y[5C7*<!e5UZa>o*S()d07n,ZIY^A@7t783:L^WL4Be[PsKVD(F"
%COfi!C_!M-gtF!)2C;.D?&X!.T;bttR#=G[DX@jXYqDi[8N&>%16(55-&`%!WpASW$Y1:hO@G%l*8[`_<cWo%d_XBE@$5edOX>/q
%!QP8@=c#$g(J*Ce/icW69R]\dajU;i=]Z9[Ee,7$(\hem]Kf7,%lpN+!kh7mlHlsk&C"J)Fg44#Lk?lWh%o3+-CG\6/KJ,9DR$tX
%:()H`&m:m$6chMF(MG;kb7b&m+UXOHUnBZ,mQm?l=Gq.HTO=T<4EJ\6_%+`uI'sYJ@N$\":n,b2g<*Y-f$2-d49,h*q$9Suqo\)^
%&4uR(<j3`#4K`NJhKOZs&>LqMMmQS?6Qr=M;(.n9mEZODTl#L]E5etsn?Uk`M&FWN,p?tY"u0gEZp,Y1^,aSS[7oUn^WnRbYmcSW
%l/[p?)lj-V/]M^uqLE151qCJWIc;k`1)N0022MGh`:@q0*H[!)2r#sdUI18o+LLc/'D('!Ln3.VNbp1=]WK24%69dR8"V.?qbKnt
%5#b&7)$ee0eqY0%5MY:EP@b0fG_a`6jWC+$rS*MU,A-I'P:0)<0c=IIXfX071:tOXb^#`l`!$Hn+++<tJO$m6WGQS7/,e)A.)jPP
%"/38!n<Nl.0GosF3E20-75uDl=q[A`VK2b^:][G[-gJ3()X3]Cai#%AY+BKhM.Kc/Z;s"/]%hCCZaFh[#"VfH-O<KZQ:Ar<>uQi=
%A5hMR==@bocs^gH$P=VG!dBP4F$aVF#AZaD1bb#I0f<JW\t%k.BkLp&+He]>D?-aaE..*.Wi\CFpnJ5sI!`O!J,AZlpk8_W;l#NM
%Wl0%mA/eP"FHDmCP%"[U'2@_JR5:g"7]K%3cr>=>80/@'#UDdR1@#Qi/BL.",`j%)a'?c?Y]ti*TK=ndbA3m^(a2dVc@m2N.kfG@
%W,e/89M0@%Q]pb$)N=%(iAers=X,T8gSq%Gf!0H@hiX5';8t!;np+ggM,)$!U^R_bg(0pH%ME.UTR%&8,i]%W,Z/j9oXfZ.D%\RE
%[KAW*+WP=&F'hG$AiG\[!h4SA%,?8(dM6/4[PHTMlN/_HM?g)TnPL.1327K7*>`F!U8tB2Mfo2nS`L4oLg2B(B/,Jjp<:&u>sR1$
%:E&V:!e[a3$1"UP%tp"=Y5h+8D*PU'J195&UX:E^C^FT]AcQq*ZLL8N>TG'BWaqe0C/32."VqDQ*@joWLuCedBlo"iP+JHmk@UO,
%+_AYiUg4G_ANF=_N_m:6bR7o,SD:JpFKF#Q*HFXoYpjkCi_6L^ZJ&2JVAF7sCV-=#qV.>ho2WF&\FAA%Knsi7d"dWb%.+6'\g8W9
%kraOD,WqKo\Dl/+bC\)GI/]^dcC$b'X$Q)ihM.<eO*p[_!3L,g,K3V*15Xd3K@0(g.1XLI''H'=ih/)D]NkDuo%l\KPdqOne*&n=
%JHRJHA8Pj'?9hQU>\q;KjrMhN!X]YI:),KO[G:8&d**oj3>Y=h5iNnA/no]'8soi+/Nj_"_MWIchoJoaAWgqiX<ah`(g)#VHE0t2
%B$&J8f2Muq/p8\#TK"eR_?::o,R.J8,qc#'#b%<(F#-T:\Ms^b5FYf[!-I)L+]s8VrDIn-Zsbsonp]@\Y^f;M0EP:AZg\&g>ZXA*
%YU);s&Fp$WHN5O#[P+oN<EJ1%?g(n&0J_5#>d)#a*OKk_JZsL<;mZD/:=WiApgcW3;l=6QMOB>*,nJFH"H9!iclpI=]'+O[b]eAI
%ELmJOV^(K*==D2:N7M-qOUG8a.?%d@fH*9/rNR=dD&BTq:GrVMAmCpi+p)rb'!\TG0F=<gLMRo3l;F$5^rV**Uk**_rCpU$8Fp"?
%,KA1Yl,@F'XGqVb-BK&_]0!o<CeRq8NHH(t"BW]_7`_[S-4^6S<Ep8=e^CNg&e;mAnK#PaW*pg1[uOMT@%d.(hWm1`s2!,l+;+02
%c?k)Xdli?eG-n#Z`07;Oc#YitK;CJZQ^Z9M@(*q+[$g$17D4m2-0'A("$%/aPJOY?egTp);,!K.4\n%&OpaHXTsPX%#U$[MTPGW6
%M.#R<lQ+YE,_rf]Ye[c'[Xo(#d6no4F^^=@\h"F"=trdnNL=c?V5-3bd+@7mcoiJqBU:H;SfhHpN-CX#3Z&R3aGDg:cEDiJ,VIZH
%lC^QnTnHu]O)6dDoO(&hN+USE,XI#*7q?Fk&0a2Og#j<(kt3P/C_gXuZ6^eP:=IS&$kdR%6kVXUdaSU:9446RbSeGlKqYHBX+I-5
%6cr-pd`"cd3m`M6-_Ddpi+Yq7$G'IUU'a?m6uPP8X2[7+,#(L\AKB7!hGmAgL,DfR>hrLG##DY:H&E,GPgD8nkclqEVF1[R@Np!F
%LF9m8`QE^5+."LQj'g'T.jLWtD;2j?Ge,ut33'sV_a%1^-5IGnRDZFqj0(Ydl&aWWMaM5p4&[0A#Mcf8R@s"h+A.U[9+827ls`jq
%kOkF!^EUp"C`20!QnK&W"4tL7i3`OenOsSUH[n;rkRN!</Mq7t&I.AO_1MXgSETE=(#im&PPB7eR"V](7!RYu5LCSCgOtC#BL](V
%-u5_F<-X4A62lF0e0gemSFt>889f@^`a1o^)l@KX'Bg*pOr^X`N[![\k%>NT!]C'>l?7/q-ZHZ20N(QLj4;U9ak2U%]gRu\aDlKR
%=ZaRtQ9,BGP/m(jgueM"E:'??&DA`*)*A5R#dKeRY)!D]?kCd3ELYqXL`I,&`(;,)$]c?KZuFhg&prKU!2mplC"P_GTn>(J[K&n=
%_dW(toINK;\dSmJ6N]+R).ZW@1o-D@4RP%bUhYku'6352O;3(,6eYl]"1gFl&p56P9XJ)Dm#m/,S:k8qc:_t+2_O='PE=jF1``8o
%k^8[Xrp17Nml6F8#0T>e1ouVe6q/RuY!G5qGH0VPHion[LNli+DNKoK0;Rt^]'sVtl7e>RPKi6&,*Uh1_Q=7Me(Vbem5d.fN]K37
%k/5N-KSc+>A4L58d_T(;%'YT>5(4<_D&'AWle!JtW$_h,LA\pPVG>hH]1XHiV>R'1S%2B_eC(iuHM+V3`Rb);q:-"b0>F'-hdHa:
%h/ULq^Zto6JCm69_Ih";dBiUNaDjf(YCQtF``NksNFEIDlj-m/Y@7EjOo=W+fZR\g;55J4Rtl'=9@j``$_aG=R@96Q?s'c@3;?TA
%8*IZ'UdMY%!u%CpL"%qA4V?"Wl-FN4Ko/$f)GEatr`r1@>%.gJFO6Bi_NbCj'C=;1OG(i(7g=bT\g9:t_quZ_aibgIS6*TTF%;\:
%_Ie+4AeBQH7FIFJ5TigenHKhnG[\n&>o0EX5MP5o/9)q#9XgL'b.PPU2A4Ji]I2,iH0c+T2@3/E-6hR_V^D2O\F^&NA`&HkC,m-t
%EgT7u,O7B<[kpug"iHfb2^=l(_dijB[+:Lp#s1,b$jW8MR6Z]QZCU>]"Eebo,$Hu>_5!.QjdFY=V6#m2)UY8s\UX\hl-qH9%!:j-
%#8]B7TR9IE,WOS'd^^>cdcmJ2Ps&#4L]\8fSVf8/=30RcnD?Qa0kg,EKQ08J/!q93d6rpMl,6Fl5?kb_)NOGM:X.f4<gP0I(g4.*
%$dEb;_UVf#Sk4YGAblKs-oTXkB7psS#HeB,_,=JA#9cAB@Kq[HeqA,:,ZG6$<<K3GDURa)a8ftVK.egp)DZIiK,GgF^>4U,)$T8>
%0^JNcQB.grb:EcO*'kkiCMqDfE'/P,^QC=08DlcB<kck9_e,;iYJf=,DOIH'Rg`G^T4EW,VChk?#oFjA:aB@FETmIV*QJ7/EM.<*
%,uQHBcF+#^U<Rb="H\:!#^1)*Z<8lG,'s<H/qs!D9)9`e/:!I^<R1=0UcfW/Q>1RE-RP\(3R+(P3B<!V\;tGc>OmqI8b/(pE-!Nc
%S20'NJ1UK^")@O-_21Z*eag@Z(Ju=d6WJ=?+B\=N4Iq6KH#*LK%T#D1crpm6=A_$gMfKpc+\6qd/I#>.(3*dl`?Am&N&1%hUeJl4
%9Iu<bGHU$1Hc1FT/?HNcNgDW^7[,%W2Rt-6NtiWM+K26L/JZU=$<&9e)*D?/5EO0h?4\p"2_.dK1Scf>R__ZUi:\JQnr]dU@\1$.
%@1R3B3XIfCf>85,j8sbUWBi:5U-\XM,=FF"NLchO!s8UGF;k9TLWXY(\10i++>rAMV%mE#Z-YXfMWi<X(--"F&8"TL5a77./`.$b
%(lSa^PIuNBcrU-^Hc%DNY>S4D*cZV4F[P#IpL/Tg3]36i=lcFbJuGO_^72nf#p[`i7lJ2Gf#85%PTt-n;\AAii]/dB/\N%]bO"VX
%JDq9n5ksn@L3S708/>DTlg>D:ckcY/O3c(6JGW2rLg3k6)lMag8eS7Y`71S`8c'i;=EZ#E5s0QeEJ[!;7MO4Z./kaXJ:S)&WjXK[
%&Q!It81Fc\%.u<NG)XX7XXbTG9m`,%d>^j&_-#!?oGu2t!]E`%+RgES;Hu[3%?/OZfeHbL(1F7s7*#.$(MDM2!-,*F;>/JCG*6Jo
%L9s/OW8NWq'3OfJ@?%RG/G?+g]WM_gWa(I`MfY1nl&s>sZH4<10Ln8[I'.nu\h8/@VH+taSQ^S,qDbd8E(<<$ck1C9L#r\`AL2"U
%Z6=3'PLNoM&!'+`<k020f^C-G*-qHY`*RssD)eB9<uV@\9Yq8`R"A;jf`J6Q<Y>*Z.`ikN$IZ>\DC-keUOs3lK4KW>%3mtVc>>E/
%i'*A-,*JtJhM&L?b@#H:Ou0*tVBlfZW%6m[&_gHJ/dN9cMi!Z!$.fJ,IcAM/m7[3JA%g:j0+fNbj>N1of/&4"RHN!8R[k*`cA<`6
%4f&:/$)p(i;`*S(]N!g/74Ahe8'1+B6p;JSV%k@]&DTQA;Uh/,Yu6_gT8oa1B5$3C_R`&d'n=427eV-g6f4!f*4!-mc%ro8/RtG)
%jYVnK@(OicVaV1A&u@6$*=E^om>j?GQK7k+'%f&2Qrjul@'hIGQoYng+cZ3,H3K.\X5n[6BVGba9M4m&8b+jG-"Jk\eIXT*l!!nn
%)'+k&e,bN(lmIHu$rn>0!>:`]:_88VK3<f#YZ3Z5jfDRV!9eUL^.hM[PTuc&A$1P\?WbiNZP(q:N2.c:!C'#k_W$`L#iglp3#*Q`
%;u;+Z6:RGK*\bi1^2*+@!)pC^R87LG"_A>TG/C.DN2@8b)>W>W[q:3YERAn"Cl"9SYLuQ>B+tT?[($A)QucE9;hA)E`2YGiUI.ru
%V+uacNb,'.$-1%\A"b^C8^&#rlj/-Z`#+;aTL/!U+F;UsNi3UG&mub'W[?@+Lmh'!r"sS`VoD(RUL;#R<@2IM'/$pP'%DYQ9Y/_p
%[KkYO/EfnW5d)F<?$[a,#FSN&E6/\P+t'!.%MTWJ8>^&b0K\%t6P;J,O^B<[:u-[pp'F#UX@gIX1MO@T)+u7fA=e?rk>JAK;\6MQ
%hs2,8+b!<74)bHKS2aG;RU&)CN[pLTW:puC>@-[-Rh3T+CX/dK9r^HD9gk3X"cs]XC/EiaE3'$H+3.9d-k*gKb7"bC7'8?_:SM0T
%/06,m!b69="kD*N=uDHjZlK"kTnrRQVdpKH+C'I[+fXWV#"W;!#]H:d5aYhJe7)1U\"OJ2:!'uV&=Sf3:8<sTdZ"m-Qe4ZYc]hn-
%"<N/WM$KpjSCC=7XR+K4D?R#jfRuWJ%d5CF4qQ5["!O+*d<-m537-g?@hV0s1d`-#(5@kq9H=`*.PVBcms5j/Q.h2XVr@KH2AA0[
%@Y`/`V?k4KQHEnt+Dcsq`?U#-P9##2Nc`Joai6I]+>&PhcS(Z6i.GHH>-"N3+$dn#5G3KUiofec+jr4k8N`gUd1]l/CdR?%#"_iA
%BF+[59P=[N#^OK`(<aXM7`DGd<r>XF"Y50*E-]$@!Pr#;-(VDJ&2j$K@W5YL!j@3/+<-Gf;Ge"i"i;.iT`OAW93Q>$p^&QBR1'AR
%a4Z3X,Hc#<9+;!PNl/WF);'^M2UsM+E*UVB"A)Kk/)*P<HU^78GLmZ#+`+?XFaU;`Z>b'(E<TFpdSL27<N>2_7t^mXSK.,B;=>MB
%Yooa[69Iof?"Hl&9f]-KO`"8D;J7g1*-58)S.1DX2?O$e?7u`c<?T+V=K4@oJG^g)=;Z:/O@0sY<"\fHGQ>,/!0WNh\@UaOJs:U^
%]?aW*[:!M:dg6UQpH's&KVk\k1(:ZB<Xf/uQBA&CbO[BC:\^>PWmSC-*N3/D.[aooOMaKB^];.[?!fPe2'[d`Vca*SYQSP,YiSQE
%:lAX'YqJq#hFogc0<e&]dfJ9oWl+AB0cNYB0*\-u]mWJ;*n8b%M=![0,40Kc^fi0*$>G^m>#3<](QtB7gu'!#*Z,3G0OuIS;+3^M
%</`,WEg,-e0ir*.dTOb:j,i3S^7)VIoLPKkHF""URPacc"[0.H*93Ci4c624SJK5$<CJ*`Se.'9#D/Pe2cA>-`6b;KDTcWR!TdkF
%9Ji:OTtIO7Y\"ZAc!]^r5'lsKqBG&`f9\SV\\>,\]5?_:S9=rcDF(%-].3[4VdH<@+Ocl#k;Jd:Z^$(G"&-$15&#on][R_R3GuEL
%SMM3*[!F09+c=484+fJL%\s\cqnh/khAjIQKSpsQ;LeZ`\8oJTnL8EaZdj),%c[TK;JL[';6nc\huc;GXn'=[JCbbP&8IC2@'=Q*
%gq!@&(I'c,im^Z^'Re4_:Ih(MH'X/?@;j"uA-%P>)!$:gWo_ppUD,=r_WmYElTbHLH9fp1Z^"XT#]heQ@HXR*`J!3fJj#etg>#HE
%WQK?$c$PqAc9e>sJh%'W6ahIM[dt48lOu'p?#uQr"Ps^6hD0.,$J[XZfnN)XJM$#9&^S!EDuo.2J8enpZR7eG]@7.3(E0XF:H"Tc
%[.KDR!0E+S^F_5#6#O410I+m8@Re><es;;XO:,Ib!f<NtkK0<c*kt)FOYUl")*37eBdI)]H&e..TsrJe!aI\ANQuV(H-(Kn2-9G`
%%&hf<D72ne0+qAUnGkk#f4?[qGt732T_Og'l'e<"Nq3%@=VojJC8?<ACOOLR2#sA*OB?@pT2b[5-g?dV^hLjVi#9n7$'^t%4,')@
%4<Eh=RD$7MCR0N6T%(8]ljI2mXn\>$"b]7ZIGp"PL+jLggsN.gRZ%P(U=u?]";1^3"^[_;=Im/9#!9Vpj:)n7lYq]<Pq<6d5230=
%e`eT#>S$DoV&nff^g"rKYO=a>!9X?o+@%.!\4Lma[KO#-F$N@'T6]ZUE$h9S38H;UZ?(:h'-?=V@)6nJ1_5Ru`,H(T)'d3@%K]O+
%1MA+ZiCk`rMD]J4:fRY^kU>UeLBil$,(9ZN#<XEJMf?>2VuuQBU<tRA_-!13lc5'A3`U`u*$n9$%s\4EI?o[Sbu0o=:st5_"J#B"
%m9p;;e=c;pp(Ep'3dF7-UoN]XU^PR9D9mAWOgbiNnJU;Gm3,1+R9W2h_FEDhdIB;-Uoa-7mRSPH';_"i&RPa>'`prJ`rUiN0-7."
%.F\nMc)[&Y^baYX0\+ErZf^u%q"gLr%bV<&6+EYBG/5#Wq_:[-N6:Pp;>HeOK^i`X:'L)r3RU\oj8^MYUU#_4&4dPD\-E;C]ro@G
%F@0iNDOSoddI5dbejU]oLW8%\7(-d96:gjQ`%VgGf6o0oXBIZ;Y4.VtgBRHgiR.Kf.B"VqkLob+1[j@J"HQ-^G,U$?EM;6@>r609
%UJ"F<$k<LkKWc"Z(s)A?*F'8u5$<edE^argH*ZE29"VAJLgE-)lJ6OHf,P;(=k]UsJJ32t0pl!Q9]I'd(9grW28G`$2GrRH`0rPB
%iJT&E7l.pB2\N'CE:VT)#"YShcaahj'nhCHG4Mg<$GX^tJ]"(ueXuc?+Xe;NEk0<@hA7J-\?oan4@J2G[!<PG2<2DrK0[)?S1^tf
%07Jd$ElY%5@)+*@SF*>Q\Z&m3o]$dER.T."'\C/?KqcOR/HU8^K?Zo!KWdZXCFFW%)E-SJGV5$r2"RF?s-\Bd[.'FfrFU]b[6VgA
%'#0F`TqBL`p_+*()'u?_O6Rc]L=^`ZoH]Z9/Qu/V<l4'*LM]O.M<taobM@KLC3X9JDBruXptg/sOX2bBV.0a%R/8;B?7@>4:.i=3
%C--(5dn0RQ4Y_G&_(mF"3=t'/RLs?.<Ti/"$WM5IR3,n$3+.0(K1\&^FfRM[pWiH84)h0ALr)Nfk^-=Mg9kuISt4RZ>[(Lal56>(
%MM)kQ]SMpdH!l/_mF#.>QmPMAgB+k2lUNIGdOt[O,gX4,aP@Ha+kI,tc1n./'QTM>LFeKdF-)>*%UUblQ'>PFa^peal^^CZ!24@\
%G(c@pia^aS`S.2L6l!JUOdfkQBeF/"I4YQ[N_W3*Ve1VO6qr7d&;,T#er`83X_/$Ch.`\^67LsKUL;(X^C3oc>,B5NN_^g#?-JOh
%@"b)l/s3C*GS$I`2KPCa)lb'V$8R`o8/pP&(Xb+&.oBO!JX[fAR`df-,_Q<PApGC/CmgWD(EosDC$DRX&=/pk,mg7^HsK.<UnCeS
%"B2C[Z_=ih1'H\p8N8kN*p9Gee+EcaHA<7A=.,d$4DKhFOiF,#juSrn-W?D;]RD2;+NT4/`bp;4ZEWVlU%GmBo;tlHl<8U$PKTLe
%8$fYRDRg7qaN$TT05^XP=j\&BG0:r]a^!#1%=S7mFgH=;cb^:V8o.;nZdjGo^)Z5FMf=?hAG.tW4$?"F#UZ;h#4iSS%C'urh%6)r
%nk`-=FPu+=a!/*sJ1RYgV]t;%1WOctdB)'!h3$=)eJh$rDb('\$`/ESJRa?\mMq#&LEBW]1kUr-Ra`KIE!#_b=LMm?E&W<P8cCUP
%a#juarMLloe_@Wr?8*(lTfA&sY7`]H,VO*E1!TKgY$<I#HQ.A2`G5L5jnB9jqX-3De;.@^5!A2"]]/NZAbP^V1:q>#OOjgSnZ5RJ
%cIJ6JZ2rod%GN='lOk^f?)cgFM-e-L"E-/r``=`*$<c8,gD0u9.W`=JC)5pI"Xa=2AD7]#`Rm>?8k9,lLAgVl-2pF<g`c@k9<5ar
%]d>k9?l;Np"^h&fF/AP&c"]Jp)R[0+)L]NS&VF2FL9LmGjJsNXG`;D39oF]@6j\9E"AHZ'Ss'/VOjd]9fA"VhlhPq'!u<'R5gPfk
%R**ajWB31>-N(8"Y2G_4;F$b:/*eOY"L&$RHo'))@T",mT0&b[DcRKU"7'U-KQVR<qMk/BJ0?%)cVR78hGDF6DItaOeC>1%O4/Y$
%7'T.^e%uqnI`d[l8#o+(,:@uJL!)Y-[D\\@i=Kb%R;9@6:0';g5W!11YUO9A^_V/5UUS%f=N$F\)9\QQ:OQ;-nC2[="&GIQPG(/'
%.']J]dIfMc3"BJV4H4D$c.^jZJJnVAAnueB(,^?9/UXeX'O;^&3MfFS$P.hH2BP=],P9LV-I6SN66gM>/fS7Od<rV-eU%Z$K:el0
%>[koQnYVrm$?.4SQ^`S%-n=Z\*U.@%$Ic^oo,h@1n2k3W:nlNu,2?<X"NN+q.a>s"6;S/G-:$Y&2l>/^6/W$3H:C2Xn_<j.i1RZ6
%mCj2?+,X+),?`:mbUDrZJ.MnG5r;Xo,9\3m,Cjst@c+_Ye?Vfde=`6%0jBkiU<5n!8>Vf>jFM*/g]9A18b]VPB^e;O1,A^#2VZR.
%GsLG!d_#c+>>8dq81bBuZdq$ek>U_-9fr&?51_\2d33RAFGthW<_;ln7d;<#RML.ERuh2BG2Mf>:=R_]I.AkZ.chdiSK-mER`=$@
%%5qf'&`fDj>R,0-@>5<X6FNsh5eVMbETZ@4RV]g`0'ald-<<T^_YZ$29qrb3Y=_=W7\*1B!Jg,#@83?)X:KQEaE?uholF1S=Q(9g
%Q?ShJ'V9_n@]?CW+BDb\;,aX_m?uK=bul<Xf$kD>4<-KIq?PoT$?I,X48S*)p1>]a<TPf"i?3/D7_?Idc0ps@ETgXb%G1&f5Ej5f
%9+a=^NQW4mY3%[j:*anuZW*rJUcVAu`SOKB"tdoKXiqRDo`Bfn7SS3U]Gl?]a[;)B.&e88.E"km!2!F06QI+2=XMbV)f_'$A5uLG
%+1+M#GmiaQ*YX@oe$>0bqH9dOBgdLBU:r,n69%_)$&%(t/2l`@]^Rg(9,kARFKRJ3G_FR^ZC21/G[<JpC&)a7C=NN>8L*,*S7b3.
%R]X`8&Q.g3ntaFUZ*[=(G)[>J/+FMQ[_T<5>0t1E<=X":ahW>rTD=JU%b3j?NrtN"BD<A]'GV2(c01#Ki^EkmFc/1/r-#qFZ)_AF
%L1go8;)9TQICuM?%sh&.4ome):go);Da@\g8@>3]pe8Ek#uFDke&Q]V@DpH)_JC?`[QTu/)''F7+GQ$@&aP"?;qWkGG:l[`j;lgq
%>^-c4)74QV1W&ZjFEGeLQs1tKB:i@Q!^TaH-1LElUXj+F]S.a`f*mXNYR)Y_N@V^R3>io?jX<`.du85u\,Z,f$f6b@T:Se8!:lSt
%c8H%[r&JRQP?pG##Pk2V#OGT2@]MU2UquT]ok31fP56UfNj^F(W'@7I\:A)nJ$PjRi<Ec`)\1Z.K1!$TX9h2*,rI"Y3SD_t<\7E:
%(QcqB"clV/7FG-CIrNA^8VD_c\5I8]oMI9Xcj0JcQ%`rZTO!CIe^EQtBVogXNtf7hdcUq!fQ+Q$=Vi4oGj9&T?9]2]X-O;dUno@k
%+GmT>[ZbMUJ4A(?%+XoBGPoaUUmHQnS,T]<ro?9CXXO*+1k'ed]=c!^rSKj+I`>a_Ec_,fHedN+YOK#T4?VKWmoT;=97`a7n*oo*
%PPW8Yrr2cbL5&gDh`n:;s4j6UVXr\cqA[ZhreB"]BK?+CX"QE$s%:r$(eFXPf&(-prQVZ%[efXFPHRbhII^b$d_Ws~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial -497 19163 a


 pgfr

 restore

 restore

 114.84517 640.99005 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 114.84517 638.49936 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 0 0 0 1 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 1902 18965 a Fl(W)-24 b(AR)-6 b(Crea)-14
b(te)690 19065 y Fk(Crea)-8 b(te)26 b(W)-14 b(a)-8 b(yba)m
(ck-Consumable)30 b(W)-14 b(AR)m(C)27 b(Files)h(fr)m(om)g(Any)g(Webp)-8
b(a)m(ge)1718 19215 y Fj(Mat)27 b(Kelly)f(and)h(Mic)m(hele)f(C.)h(W)-10
b(eigle)1424 19431 y Fi(mkelly@cs.od)o(u.)o(ed)o(u,)21
b(mweigle@cs.o)o(d)o(u.)o(ed)o(u)-497 19163 y


 pgfr

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 1.99255 pgfw

 save

 /pgfsc{}def/pgffc{}def

 0.27 0 0 0.1 setcmykcolor

 /pgffc{0.18 0 0 0.1 setcmykcolor}def

 0.0 570.82516 moveto

 0.0 590.7507 lineto

 466.23041 590.7507 lineto

 471.73277 590.7507 476.19318 586.29028 476.19318 580.78793 curveto

 476.19318 570.82516 lineto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 3.98505 575.94606 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 0 0 0 1
TeXcolorcmyk -497 19163 a Fk(Contribution:)60 b(Enable)45
b(W)-14 b(AR)m(C)45 b(genera)-8 b(tion)44 b(fr)m(om)i(any)g(webp)-8
b(a)m(ge)p 0 0 0 1 TeXcolorcmyk -497 19163 a


 pgfr

 restore

 restore

 save

 /pgffc{0 1 0 0 setcmykcolor}def

 0.0 570.82516 moveto

 0.0 528.10492 lineto

 476.19318 570.82516 moveto

 476.19318 528.10492 lineto

 gsave pgffc pgffill grestore newpath

 restore

 save

 0 0 0 0 setcmykcolor

 0.0 528.10492 moveto

 0.0 532.3772 lineto

 pgfstr

 restore

 save

 0.0027 0 0 0.001 setcmykcolor

 0.0 528.53253 moveto

 0.0 532.80415 lineto

 pgfstr

 restore

 save

 0.0054 0 0 0.002 setcmykcolor

 0.0 528.9595 moveto

 0.0 533.23178 lineto

 pgfstr

 restore

 save

 0.0081 0 0 0.003 setcmykcolor

 0.0 529.38712 moveto

 0.0 533.65875 lineto

 pgfstr

 restore

 save

 0.0108 0 0 0.004 setcmykcolor

 0.0 529.81409 moveto

 0.0 534.08636 lineto

 pgfstr

 restore

 save

 0.0135 0 0 0.005 setcmykcolor

 0.0 530.24104 moveto

 0.0 534.51334 lineto

 pgfstr

 restore

 save

 0.0162 0 0 0.006 setcmykcolor

 0.0 530.66867 moveto

 0.0 534.94029 lineto

 pgfstr

 restore

 save

 0.0189 0 0 0.007 setcmykcolor

 0.0 531.09564 moveto

 0.0 535.36794 lineto

 pgfstr

 restore

 save

 0.0216 0 0 0.008 setcmykcolor

 0.0 531.5226 moveto

 0.0 535.79489 lineto

 pgfstr

 restore

 save

 0.0243 0 0 0.009 setcmykcolor

 0.0 531.95023 moveto

 0.0 536.22185 lineto

 pgfstr

 restore

 save

 0.027 0 0 0.01 setcmykcolor

 0.0 532.3772 moveto

 0.0 536.64949 lineto

 pgfstr

 restore

 save

 0.0297 0 0 0.011 setcmykcolor

 0.0 532.80415 moveto

 0.0 537.07645 lineto

 pgfstr

 restore

 save

 0.0324 0 0 0.012 setcmykcolor

 0.0 533.23178 moveto

 0.0 537.50342 lineto

 pgfstr

 restore

 save

 0.0351 0 0 0.013 setcmykcolor

 0.0 533.65875 moveto

 0.0 537.93103 lineto

 pgfstr

 restore

 save

 0.0378 0 0 0.014 setcmykcolor

 0.0 534.08636 moveto

 0.0 538.358 lineto

 pgfstr

 restore

 save

 0.0405 0 0 0.015 setcmykcolor

 0.0 534.51334 moveto

 0.0 538.78499 lineto

 pgfstr

 restore

 save

 0.0432 0 0 0.016 setcmykcolor

 0.0 534.94029 moveto

 0.0 539.21259 lineto

 pgfstr

 restore

 save

 0.0459 0 0 0.017 setcmykcolor

 0.0 535.36794 moveto

 0.0 539.63956 lineto

 pgfstr

 restore

 save

 0.0486 0 0 0.018 setcmykcolor

 0.0 535.79489 moveto

 0.0 540.06718 lineto

 pgfstr

 restore

 save

 0.0513 0 0 0.019 setcmykcolor

 0.0 536.22185 moveto

 0.0 540.49414 lineto

 pgfstr

 restore

 save

 0.054 0 0 0.02 setcmykcolor

 0.0 536.64949 moveto

 0.0 540.92111 lineto

 pgfstr

 restore

 save

 0.0567 0 0 0.021 setcmykcolor

 0.0 537.07645 moveto

 0.0 541.34874 lineto

 pgfstr

 restore

 save

 0.0594 0 0 0.022 setcmykcolor

 0.0 537.50342 moveto

 0.0 541.7757 lineto

 pgfstr

 restore

 save

 0.0621 0 0 0.023 setcmykcolor

 0.0 537.93103 moveto

 0.0 542.20267 lineto

 pgfstr

 restore

 save

 0.0648 0 0 0.024 setcmykcolor

 0.0 538.358 moveto

 0.0 542.63028 lineto

 pgfstr

 restore

 save

 0.0675 0 0 0.02501 setcmykcolor

 0.0 538.78499 moveto

 0.0 543.05725 lineto

 pgfstr

 restore

 save

 0.0702 0 0 0.026 setcmykcolor

 0.0 539.21259 moveto

 0.0 543.48422 lineto

 pgfstr

 restore

 save

 0.0729 0 0 0.02701 setcmykcolor

 0.0 539.63956 moveto

 0.0 543.91183 lineto

 pgfstr

 restore

 save

 0.0756 0 0 0.028 setcmykcolor

 0.0 540.06718 moveto

 0.0 544.3388 lineto

 pgfstr

 restore

 save

 0.0783 0 0 0.029 setcmykcolor

 0.0 540.49414 moveto

 0.0 544.76643 lineto

 pgfstr

 restore

 save

 0.081 0 0 0.03 setcmykcolor

 0.0 540.92111 moveto

 0.0 545.19339 lineto

 pgfstr

 restore

 save

 0.0837 0 0 0.031 setcmykcolor

 0.0 541.34874 moveto

 0.0 545.62036 lineto

 pgfstr

 restore

 save

 0.0864 0 0 0.032 setcmykcolor

 0.0 541.7757 moveto

 0.0 546.04799 lineto

 pgfstr

 restore

 save

 0.0891 0 0 0.033 setcmykcolor

 0.0 542.20267 moveto

 0.0 546.47495 lineto

 pgfstr

 restore

 save

 0.0918 0 0 0.034 setcmykcolor

 0.0 542.63028 moveto

 0.0 546.90192 lineto

 pgfstr

 restore

 save

 0.0945 0 0 0.035 setcmykcolor

 0.0 543.05725 moveto

 0.0 547.32954 lineto

 pgfstr

 restore

 save

 0.0972 0 0 0.036 setcmykcolor

 0.0 543.48422 moveto

 0.0 547.7565 lineto

 pgfstr

 restore

 save

 0.0999 0 0 0.037 setcmykcolor

 0.0 543.91183 moveto

 0.0 548.18347 lineto

 pgfstr

 restore

 save

 0.1026 0 0 0.038 setcmykcolor

 0.0 544.3388 moveto

 0.0 548.61108 lineto

 pgfstr

 restore

 save

 0.1053 0 0 0.039 setcmykcolor

 0.0 544.76643 moveto

 0.0 549.03807 lineto

 pgfstr

 restore

 save

 0.108 0 0 0.04001 setcmykcolor

 0.0 545.19339 moveto

 0.0 549.46504 lineto

 pgfstr

 restore

 save

 0.1107 0 0 0.041 setcmykcolor

 0.0 545.62036 moveto

 0.0 549.89264 lineto

 pgfstr

 restore

 save

 0.1134 0 0 0.042 setcmykcolor

 0.0 546.04799 moveto

 0.0 550.31963 lineto

 pgfstr

 restore

 save

 0.1161 0 0 0.043 setcmykcolor

 0.0 546.47495 moveto

 0.0 550.74724 lineto

 pgfstr

 restore

 save

 0.1188 0 0 0.044 setcmykcolor

 0.0 546.90192 moveto

 0.0 551.1742 lineto

 pgfstr

 restore

 save

 0.1215 0 0 0.045 setcmykcolor

 0.0 547.32954 moveto

 0.0 551.60117 lineto

 pgfstr

 restore

 save

 0.1242 0 0 0.046 setcmykcolor

 0.0 547.7565 moveto

 0.0 552.0288 lineto

 pgfstr

 restore

 save

 0.1269 0 0 0.047 setcmykcolor

 0.0 548.18347 moveto

 0.0 552.45576 lineto

 pgfstr

 restore

 save

 0.12961 0 0 0.048 setcmykcolor

 0.0 548.61108 moveto

 0.0 552.88272 lineto

 pgfstr

 restore

 save

 0.13231 0 0 0.04901 setcmykcolor

 0.0 549.03807 moveto

 0.0 553.31033 lineto

 pgfstr

 restore

 save

 0.135 0 0 0.05 setcmykcolor

 0.0 549.46504 moveto

 0.0 553.73732 lineto

 pgfstr

 restore

 save

 0.13771 0 0 0.05101 setcmykcolor

 0.0 549.89264 moveto

 0.0 554.16428 lineto

 pgfstr

 restore

 save

 0.1404 0 0 0.052 setcmykcolor

 0.0 550.31963 moveto

 0.0 554.59189 lineto

 pgfstr

 restore

 save

 0.1431 0 0 0.05301 setcmykcolor

 0.0 550.74724 moveto

 0.0 555.01888 lineto

 pgfstr

 restore

 save

 0.1458 0 0 0.054 setcmykcolor

 0.0 551.1742 moveto

 0.0 555.44649 lineto

 pgfstr

 restore

 save

 0.1485 0 0 0.05501 setcmykcolor

 0.0 551.60117 moveto

 0.0 555.87346 lineto

 pgfstr

 restore

 save

 0.1512 0 0 0.056 setcmykcolor

 0.0 552.0288 moveto

 0.0 556.30042 lineto

 pgfstr

 restore

 save

 0.1539 0 0 0.057 setcmykcolor

 0.0 552.45576 moveto

 0.0 556.72804 lineto

 pgfstr

 restore

 save

 0.1566 0 0 0.058 setcmykcolor

 0.0 552.88272 moveto

 0.0 557.15501 lineto

 pgfstr

 restore

 save

 0.1593 0 0 0.059 setcmykcolor

 0.0 553.31033 moveto

 0.0 557.58197 lineto

 pgfstr

 restore

 save

 0.162 0 0 0.06 setcmykcolor

 0.0 553.73732 moveto

 0.0 558.0096 lineto

 pgfstr

 restore

 save

 0.1647 0 0 0.061 setcmykcolor

 0.0 554.16428 moveto

 0.0 558.43657 lineto

 pgfstr

 restore

 save

 0.1674 0 0 0.062 setcmykcolor

 0.0 554.59189 moveto

 0.0 558.86353 lineto

 pgfstr

 restore

 save

 0.1701 0 0 0.063 setcmykcolor

 0.0 555.01888 moveto

 0.0 559.29114 lineto

 pgfstr

 restore

 save

 0.1728 0 0 0.06401 setcmykcolor

 0.0 555.44649 moveto

 0.0 559.71812 lineto

 pgfstr

 restore

 save

 0.1755 0 0 0.065 setcmykcolor

 0.0 555.87346 moveto

 0.0 560.1451 lineto

 pgfstr

 restore

 save

 0.1782 0 0 0.06601 setcmykcolor

 0.0 556.30042 moveto

 0.0 560.57271 lineto

 pgfstr

 restore

 save

 0.18091 0 0 0.067 setcmykcolor

 0.0 556.72804 moveto

 0.0 560.99968 lineto

 pgfstr

 restore

 save

 0.18361 0 0 0.06801 setcmykcolor

 0.0 557.15501 moveto

 0.0 561.42729 lineto

 pgfstr

 restore

 save

 0.18631 0 0 0.069 setcmykcolor

 0.0 557.58197 moveto

 0.0 561.85426 lineto

 pgfstr

 restore

 save

 0.18901 0 0 0.07 setcmykcolor

 0.0 558.0096 moveto

 0.0 562.28122 lineto

 pgfstr

 restore

 save

 0.1917 0 0 0.071 setcmykcolor

 0.0 558.43657 moveto

 0.0 562.70885 lineto

 pgfstr

 restore

 save

 0.1944 0 0 0.072 setcmykcolor

 0.0 558.86353 moveto

 0.0 563.13582 lineto

 pgfstr

 restore

 save

 0.1971 0 0 0.073 setcmykcolor

 0.0 559.29114 moveto

 0.0 563.56277 lineto

 pgfstr

 restore

 save

 0.1998 0 0 0.074 setcmykcolor

 0.0 559.71812 moveto

 0.0 563.9904 lineto

 pgfstr

 restore

 save

 0.2025 0 0 0.07501 setcmykcolor

 0.0 560.1451 moveto

 0.0 564.41737 lineto

 pgfstr

 restore

 save

 0.2052 0 0 0.076 setcmykcolor

 0.0 560.57271 moveto

 0.0 564.84433 lineto

 pgfstr

 restore

 save

 0.2079 0 0 0.07701 setcmykcolor

 0.0 560.99968 moveto

 0.0 565.27196 lineto

 pgfstr

 restore

 save

 0.2106 0 0 0.078 setcmykcolor

 0.0 561.42729 moveto

 0.0 565.69893 lineto

 pgfstr

 restore

 save

 0.2133 0 0 0.07901 setcmykcolor

 0.0 561.85426 moveto

 0.0 566.12654 lineto

 pgfstr

 restore

 save

 0.216 0 0 0.08 setcmykcolor

 0.0 562.28122 moveto

 0.0 566.55351 lineto

 pgfstr

 restore

 save

 0.2187 0 0 0.08101 setcmykcolor

 0.0 562.70885 moveto

 0.0 566.98047 lineto

 pgfstr

 restore

 save

 0.2214 0 0 0.082 setcmykcolor

 0.0 563.13582 moveto

 0.0 567.40811 lineto

 pgfstr

 restore

 save

 0.2241 0 0 0.08301 setcmykcolor

 0.0 563.56277 moveto

 0.0 567.83507 lineto

 pgfstr

 restore

 save

 0.2268 0 0 0.084 setcmykcolor

 0.0 563.9904 moveto

 0.0 568.26202 lineto

 pgfstr

 restore

 save

 0.2295 0 0 0.085 setcmykcolor

 0.0 564.41737 moveto

 0.0 568.68967 lineto

 pgfstr

 restore

 save

 0.23221 0 0 0.086 setcmykcolor

 0.0 564.84433 moveto

 0.0 569.11662 lineto

 pgfstr

 restore

 save

 0.23491 0 0 0.087 setcmykcolor

 0.0 565.27196 moveto

 0.0 569.5436 lineto

 pgfstr

 restore

 save

 0.23761 0 0 0.088 setcmykcolor

 0.0 565.69893 moveto

 0.0 569.9712 lineto

 pgfstr

 restore

 save

 0.2403 0 0 0.089 setcmykcolor

 0.0 566.12654 moveto

 0.0 570.39818 lineto

 pgfstr

 restore

 save

 0.24301 0 0 0.09001 setcmykcolor

 0.0 566.55351 moveto

 0.0 570.82516 lineto

 pgfstr

 restore

 save

 0 0 0 0 setcmykcolor

 476.19318 528.10492 moveto

 476.19316 532.3772 lineto

 pgfstr

 restore

 save

 0.0027 0 0 0.001 setcmykcolor

 476.19316 528.53253 moveto

 476.19316 532.80415 lineto

 pgfstr

 restore

 save

 0.0054 0 0 0.002 setcmykcolor

 476.19316 528.9595 moveto

 476.19316 533.23178 lineto

 pgfstr

 restore

 save

 0.0081 0 0 0.003 setcmykcolor

 476.19316 529.38712 moveto

 476.19316 533.65875 lineto

 pgfstr

 restore

 save

 0.0108 0 0 0.004 setcmykcolor

 476.19316 529.81409 moveto

 476.19316 534.08636 lineto

 pgfstr

 restore

 save

 0.0135 0 0 0.005 setcmykcolor

 476.19316 530.24104 moveto

 476.19316 534.51334 lineto

 pgfstr

 restore

 save

 0.0162 0 0 0.006 setcmykcolor

 476.19316 530.66867 moveto

 476.19316 534.94029 lineto

 pgfstr

 restore

 save

 0.0189 0 0 0.007 setcmykcolor

 476.19316 531.09564 moveto

 476.19316 535.36794 lineto

 pgfstr

 restore

 save

 0.0216 0 0 0.008 setcmykcolor

 476.19316 531.5226 moveto

 476.19316 535.79489 lineto

 pgfstr

 restore

 save

 0.0243 0 0 0.009 setcmykcolor

 476.19316 531.95023 moveto

 476.19316 536.22185 lineto

 pgfstr

 restore

 save

 0.027 0 0 0.01 setcmykcolor

 476.19316 532.3772 moveto

 476.19316 536.64949 lineto

 pgfstr

 restore

 save

 0.0297 0 0 0.011 setcmykcolor

 476.19316 532.80415 moveto

 476.19316 537.07645 lineto

 pgfstr

 restore

 save

 0.0324 0 0 0.012 setcmykcolor

 476.19316 533.23178 moveto

 476.19316 537.50342 lineto

 pgfstr

 restore

 save

 0.0351 0 0 0.013 setcmykcolor

 476.19316 533.65875 moveto

 476.19316 537.93103 lineto

 pgfstr

 restore

 save

 0.0378 0 0 0.014 setcmykcolor

 476.19316 534.08636 moveto

 476.19316 538.358 lineto

 pgfstr

 restore

 save

 0.0405 0 0 0.015 setcmykcolor

 476.19316 534.51334 moveto

 476.19316 538.78499 lineto

 pgfstr

 restore

 save

 0.0432 0 0 0.016 setcmykcolor

 476.19316 534.94029 moveto

 476.19316 539.21259 lineto

 pgfstr

 restore

 save

 0.0459 0 0 0.017 setcmykcolor

 476.19316 535.36794 moveto

 476.19316 539.63956 lineto

 pgfstr

 restore

 save

 0.0486 0 0 0.018 setcmykcolor

 476.19316 535.79489 moveto

 476.19316 540.06718 lineto

 pgfstr

 restore

 save

 0.0513 0 0 0.019 setcmykcolor

 476.19316 536.22185 moveto

 476.19316 540.49414 lineto

 pgfstr

 restore

 save

 0.054 0 0 0.02 setcmykcolor

 476.19316 536.64949 moveto

 476.19316 540.92111 lineto

 pgfstr

 restore

 save

 0.0567 0 0 0.021 setcmykcolor

 476.19316 537.07645 moveto

 476.19316 541.34874 lineto

 pgfstr

 restore

 save

 0.0594 0 0 0.022 setcmykcolor

 476.19316 537.50342 moveto

 476.19316 541.7757 lineto

 pgfstr

 restore

 save

 0.0621 0 0 0.023 setcmykcolor

 476.19316 537.93103 moveto

 476.19316 542.20267 lineto

 pgfstr

 restore

 save

 0.0648 0 0 0.024 setcmykcolor

 476.19316 538.358 moveto

 476.19316 542.63028 lineto

 pgfstr

 restore

 save

 0.0675 0 0 0.02501 setcmykcolor

 476.19316 538.78499 moveto

 476.19316 543.05725 lineto

 pgfstr

 restore

 save

 0.0702 0 0 0.026 setcmykcolor

 476.19316 539.21259 moveto

 476.19316 543.48422 lineto

 pgfstr

 restore

 save

 0.0729 0 0 0.02701 setcmykcolor

 476.19316 539.63956 moveto

 476.19316 543.91183 lineto

 pgfstr

 restore

 save

 0.0756 0 0 0.028 setcmykcolor

 476.19316 540.06718 moveto

 476.19316 544.3388 lineto

 pgfstr

 restore

 save

 0.0783 0 0 0.029 setcmykcolor

 476.19316 540.49414 moveto

 476.19316 544.76643 lineto

 pgfstr

 restore

 save

 0.081 0 0 0.03 setcmykcolor

 476.19316 540.92111 moveto

 476.19316 545.19339 lineto

 pgfstr

 restore

 save

 0.0837 0 0 0.031 setcmykcolor

 476.19316 541.34874 moveto

 476.19316 545.62036 lineto

 pgfstr

 restore

 save

 0.0864 0 0 0.032 setcmykcolor

 476.19316 541.7757 moveto

 476.19316 546.04799 lineto

 pgfstr

 restore

 save

 0.0891 0 0 0.033 setcmykcolor

 476.19316 542.20267 moveto

 476.19316 546.47495 lineto

 pgfstr

 restore

 save

 0.0918 0 0 0.034 setcmykcolor

 476.19316 542.63028 moveto

 476.19316 546.90192 lineto

 pgfstr

 restore

 save

 0.0945 0 0 0.035 setcmykcolor

 476.19316 543.05725 moveto

 476.19316 547.32954 lineto

 pgfstr

 restore

 save

 0.0972 0 0 0.036 setcmykcolor

 476.19316 543.48422 moveto

 476.19316 547.7565 lineto

 pgfstr

 restore

 save

 0.0999 0 0 0.037 setcmykcolor

 476.19316 543.91183 moveto

 476.19316 548.18347 lineto

 pgfstr

 restore

 save

 0.1026 0 0 0.038 setcmykcolor

 476.19316 544.3388 moveto

 476.19316 548.61108 lineto

 pgfstr

 restore

 save

 0.1053 0 0 0.039 setcmykcolor

 476.19316 544.76643 moveto

 476.19316 549.03807 lineto

 pgfstr

 restore

 save

 0.108 0 0 0.04001 setcmykcolor

 476.19316 545.19339 moveto

 476.19318 549.46504 lineto

 pgfstr

 restore

 save

 0.1107 0 0 0.041 setcmykcolor

 476.19316 545.62036 moveto

 476.19316 549.89264 lineto

 pgfstr

 restore

 save

 0.1134 0 0 0.042 setcmykcolor

 476.19316 546.04799 moveto

 476.19316 550.31963 lineto

 pgfstr

 restore

 save

 0.1161 0 0 0.043 setcmykcolor

 476.19316 546.47495 moveto

 476.19316 550.74724 lineto

 pgfstr

 restore

 save

 0.1188 0 0 0.044 setcmykcolor

 476.19316 546.90192 moveto

 476.19316 551.1742 lineto

 pgfstr

 restore

 save

 0.1215 0 0 0.045 setcmykcolor

 476.19316 547.32954 moveto

 476.19316 551.60117 lineto

 pgfstr

 restore

 save

 0.1242 0 0 0.046 setcmykcolor

 476.19316 547.7565 moveto

 476.19316 552.0288 lineto

 pgfstr

 restore

 save

 0.1269 0 0 0.047 setcmykcolor

 476.19316 548.18347 moveto

 476.19316 552.45576 lineto

 pgfstr

 restore

 save

 0.12961 0 0 0.048 setcmykcolor

 476.19316 548.61108 moveto

 476.19316 552.88272 lineto

 pgfstr

 restore

 save

 0.13231 0 0 0.04901 setcmykcolor

 476.19316 549.03807 moveto

 476.19316 553.31033 lineto

 pgfstr

 restore

 save

 0.135 0 0 0.05 setcmykcolor

 476.19318 549.46504 moveto

 476.19316 553.73732 lineto

 pgfstr

 restore

 save

 0.13771 0 0 0.05101 setcmykcolor

 476.19316 549.89264 moveto

 476.19316 554.16428 lineto

 pgfstr

 restore

 save

 0.1404 0 0 0.052 setcmykcolor

 476.19316 550.31963 moveto

 476.19316 554.59189 lineto

 pgfstr

 restore

 save

 0.1431 0 0 0.05301 setcmykcolor

 476.19316 550.74724 moveto

 476.19316 555.01888 lineto

 pgfstr

 restore

 save

 0.1458 0 0 0.054 setcmykcolor

 476.19316 551.1742 moveto

 476.19316 555.44649 lineto

 pgfstr

 restore

 save

 0.1485 0 0 0.05501 setcmykcolor

 476.19316 551.60117 moveto

 476.19316 555.87346 lineto

 pgfstr

 restore

 save

 0.1512 0 0 0.056 setcmykcolor

 476.19316 552.0288 moveto

 476.19316 556.30042 lineto

 pgfstr

 restore

 save

 0.1539 0 0 0.057 setcmykcolor

 476.19316 552.45576 moveto

 476.19316 556.72804 lineto

 pgfstr

 restore

 save

 0.1566 0 0 0.058 setcmykcolor

 476.19316 552.88272 moveto

 476.19316 557.15501 lineto

 pgfstr

 restore

 save

 0.1593 0 0 0.059 setcmykcolor

 476.19316 553.31033 moveto

 476.19316 557.58197 lineto

 pgfstr

 restore

 save

 0.162 0 0 0.06 setcmykcolor

 476.19316 553.73732 moveto

 476.19316 558.0096 lineto

 pgfstr

 restore

 save

 0.1647 0 0 0.061 setcmykcolor

 476.19316 554.16428 moveto

 476.19316 558.43657 lineto

 pgfstr

 restore

 save

 0.1674 0 0 0.062 setcmykcolor

 476.19316 554.59189 moveto

 476.19316 558.86353 lineto

 pgfstr

 restore

 save

 0.1701 0 0 0.063 setcmykcolor

 476.19316 555.01888 moveto

 476.19316 559.29114 lineto

 pgfstr

 restore

 save

 0.1728 0 0 0.06401 setcmykcolor

 476.19316 555.44649 moveto

 476.19316 559.71812 lineto

 pgfstr

 restore

 save

 0.1755 0 0 0.065 setcmykcolor

 476.19316 555.87346 moveto

 476.19316 560.1451 lineto

 pgfstr

 restore

 save

 0.1782 0 0 0.06601 setcmykcolor

 476.19316 556.30042 moveto

 476.19316 560.57271 lineto

 pgfstr

 restore

 save

 0.18091 0 0 0.067 setcmykcolor

 476.19316 556.72804 moveto

 476.19316 560.99968 lineto

 pgfstr

 restore

 save

 0.18361 0 0 0.06801 setcmykcolor

 476.19316 557.15501 moveto

 476.19316 561.42729 lineto

 pgfstr

 restore

 save

 0.18631 0 0 0.069 setcmykcolor

 476.19316 557.58197 moveto

 476.19316 561.85426 lineto

 pgfstr

 restore

 save

 0.18901 0 0 0.07 setcmykcolor

 476.19316 558.0096 moveto

 476.19316 562.28122 lineto

 pgfstr

 restore

 save

 0.1917 0 0 0.071 setcmykcolor

 476.19316 558.43657 moveto

 476.19316 562.70885 lineto

 pgfstr

 restore

 save

 0.1944 0 0 0.072 setcmykcolor

 476.19316 558.86353 moveto

 476.19316 563.13582 lineto

 pgfstr

 restore

 save

 0.1971 0 0 0.073 setcmykcolor

 476.19316 559.29114 moveto

 476.19316 563.56277 lineto

 pgfstr

 restore

 save

 0.1998 0 0 0.074 setcmykcolor

 476.19316 559.71812 moveto

 476.19316 563.9904 lineto

 pgfstr

 restore

 save

 0.2025 0 0 0.07501 setcmykcolor

 476.19316 560.1451 moveto

 476.19316 564.41737 lineto

 pgfstr

 restore

 save

 0.2052 0 0 0.076 setcmykcolor

 476.19316 560.57271 moveto

 476.19316 564.84433 lineto

 pgfstr

 restore

 save

 0.2079 0 0 0.07701 setcmykcolor

 476.19316 560.99968 moveto

 476.19316 565.27196 lineto

 pgfstr

 restore

 save

 0.2106 0 0 0.078 setcmykcolor

 476.19316 561.42729 moveto

 476.19316 565.69893 lineto

 pgfstr

 restore

 save

 0.2133 0 0 0.07901 setcmykcolor

 476.19316 561.85426 moveto

 476.19316 566.12654 lineto

 pgfstr

 restore

 save

 0.216 0 0 0.08 setcmykcolor

 476.19316 562.28122 moveto

 476.19316 566.55351 lineto

 pgfstr

 restore

 save

 0.2187 0 0 0.08101 setcmykcolor

 476.19316 562.70885 moveto

 476.19316 566.98047 lineto

 pgfstr

 restore

 save

 0.2214 0 0 0.082 setcmykcolor

 476.19316 563.13582 moveto

 476.19316 567.40811 lineto

 pgfstr

 restore

 save

 0.2241 0 0 0.08301 setcmykcolor

 476.19316 563.56277 moveto

 476.19316 567.83507 lineto

 pgfstr

 restore

 save

 0.2268 0 0 0.084 setcmykcolor

 476.19316 563.9904 moveto

 476.19316 568.26202 lineto

 pgfstr

 restore

 save

 0.2295 0 0 0.085 setcmykcolor

 476.19316 564.41737 moveto

 476.19316 568.68967 lineto

 pgfstr

 restore

 save

 0.23221 0 0 0.086 setcmykcolor

 476.19316 564.84433 moveto

 476.19316 569.11662 lineto

 pgfstr

 restore

 save

 0.23491 0 0 0.087 setcmykcolor

 476.19316 565.27196 moveto

 476.19316 569.5436 lineto

 pgfstr

 restore

 save

 0.23761 0 0 0.088 setcmykcolor

 476.19316 565.69893 moveto

 476.19316 569.9712 lineto

 pgfstr

 restore

 save

 0.2403 0 0 0.089 setcmykcolor

 476.19316 566.12654 moveto

 476.19316 570.39818 lineto

 pgfstr

 restore

 save

 0.24301 0 0 0.09001 setcmykcolor

 476.19316 566.55351 moveto

 476.19318 570.82516 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 4.98138 558.92967 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -497 19163
a Fh(Preserving)19 b(con)n(ten)n(t)i(b)r(ehind)h(authen)n(tication)e
(on)h(the)h(w)n(eb)f(is)g(di\016cult.)35 b(Getting)21
b(this)h(con)n(ten)n(t)e(in)n(to)h(the)h(W)-9 b(AR)n(C)21
b(format)-497 19262 y(is)26 b(lab)r(orious,)e(inaccessible)g(and)i
(sometimes)e(not)i(p)r(ossible.)35 b(A)26 b(Go)r(ogle)f(Chrome)f
(extension)h(w)n(as)g(dev)n(elop)r(ed)f(to)i(allo)n(w)e(a)-497
19362 y(user)j(to)h(preserv)n(e)d(the)j(con)n(ten)n(t)f(of)g(an)n(y)g
(w)n(ebpage)f(in)n(to)h(the)h(W)-9 b(AR)n(C)28 b(format.)-497
19163 y


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 1.99255 pgfw

 save

 /pgfsc{}def/pgffc{}def

 0.27 0 0 0.1 setcmykcolor

 /pgffc{0.18 0 0 0.1 setcmykcolor}def

 0.0 501.20547 moveto

 0.0 521.13101 lineto

 466.23041 521.13101 lineto

 471.73277 521.13101 476.19318 516.67061 476.19318 511.16824 curveto

 476.19318 501.20547 lineto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 3.98505 506.32639 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 0 0 0 1 TeXcolorcmyk -497 19163 a Fk(Pr)m(oblems)45
b(Addressed)e(By)i(Tool)p 0 0 0 1 TeXcolorcmyk -497 19163
a


 pgfr

 restore

 restore

 save

 /pgffc{0 1 0 0 setcmykcolor}def

 0.0 501.20547 moveto

 0.0 289.77577 lineto

 476.19318 501.20547 moveto

 476.19318 289.77577 lineto

 gsave pgffc pgffill grestore newpath

 restore

 save

 0 0 0 0 setcmykcolor

 0.0 289.77577 moveto

 0.0 310.92003 lineto

 pgfstr

 restore

 save

 0.0027 0 0 0.001 setcmykcolor

 0.0 291.89212 moveto

 0.0 313.03316 lineto

 pgfstr

 restore

 save

 0.0054 0 0 0.002 setcmykcolor

 0.0 294.00525 moveto

 0.0 315.14952 lineto

 pgfstr

 restore

 save

 0.0081 0 0 0.003 setcmykcolor

 0.0 296.12161 moveto

 0.0 317.26265 lineto

 pgfstr

 restore

 save

 0.0108 0 0 0.004 setcmykcolor

 0.0 298.23474 moveto

 0.0 319.37901 lineto

 pgfstr

 restore

 save

 0.0135 0 0 0.005 setcmykcolor

 0.0 300.3479 moveto

 0.0 321.49214 lineto

 pgfstr

 restore

 save

 0.0162 0 0 0.006 setcmykcolor

 0.0 302.46423 moveto

 0.0 323.60529 lineto

 pgfstr

 restore

 save

 0.0189 0 0 0.007 setcmykcolor

 0.0 304.5774 moveto

 0.0 325.72163 lineto

 pgfstr

 restore

 save

 0.0216 0 0 0.008 setcmykcolor

 0.0 306.6905 moveto

 0.0 327.8348 lineto

 pgfstr

 restore

 save

 0.0243 0 0 0.009 setcmykcolor

 0.0 308.80688 moveto

 0.0 329.9479 lineto

 pgfstr

 restore

 save

 0.027 0 0 0.01 setcmykcolor

 0.0 310.92003 moveto

 0.0 332.06429 lineto

 pgfstr

 restore

 save

 0.0297 0 0 0.011 setcmykcolor

 0.0 313.03316 moveto

 0.0 334.1774 lineto

 pgfstr

 restore

 save

 0.0324 0 0 0.012 setcmykcolor

 0.0 315.14952 moveto

 0.0 336.29056 lineto

 pgfstr

 restore

 save

 0.0351 0 0 0.013 setcmykcolor

 0.0 317.26265 moveto

 0.0 338.40692 lineto

 pgfstr

 restore

 save

 0.0378 0 0 0.014 setcmykcolor

 0.0 319.37901 moveto

 0.0 340.52005 lineto

 pgfstr

 restore

 save

 0.0405 0 0 0.015 setcmykcolor

 0.0 321.49214 moveto

 0.0 342.6332 lineto

 pgfstr

 restore

 save

 0.0432 0 0 0.016 setcmykcolor

 0.0 323.60529 moveto

 0.0 344.74954 lineto

 pgfstr

 restore

 save

 0.0459 0 0 0.017 setcmykcolor

 0.0 325.72163 moveto

 0.0 346.86269 lineto

 pgfstr

 restore

 save

 0.0486 0 0 0.018 setcmykcolor

 0.0 327.8348 moveto

 0.0 348.97903 lineto

 pgfstr

 restore

 save

 0.0513 0 0 0.019 setcmykcolor

 0.0 329.9479 moveto

 0.0 351.09218 lineto

 pgfstr

 restore

 save

 0.054 0 0 0.02 setcmykcolor

 0.0 332.06429 moveto

 0.0 353.2053 lineto

 pgfstr

 restore

 save

 0.0567 0 0 0.021 setcmykcolor

 0.0 334.1774 moveto

 0.0 355.32169 lineto

 pgfstr

 restore

 save

 0.0594 0 0 0.022 setcmykcolor

 0.0 336.29056 moveto

 0.0 357.4348 lineto

 pgfstr

 restore

 save

 0.0621 0 0 0.023 setcmykcolor

 0.0 338.40692 moveto

 0.0 359.54796 lineto

 pgfstr

 restore

 save

 0.0648 0 0 0.024 setcmykcolor

 0.0 340.52005 moveto

 0.0 361.6643 lineto

 pgfstr

 restore

 save

 0.0675 0 0 0.02501 setcmykcolor

 0.0 342.6332 moveto

 0.0 363.77745 lineto

 pgfstr

 restore

 save

 0.0702 0 0 0.026 setcmykcolor

 0.0 344.74954 moveto

 0.0 365.89058 lineto

 pgfstr

 restore

 save

 0.0729 0 0 0.02701 setcmykcolor

 0.0 346.86269 moveto

 0.0 368.00694 lineto

 pgfstr

 restore

 save

 0.0756 0 0 0.028 setcmykcolor

 0.0 348.97903 moveto

 0.0 370.12009 lineto

 pgfstr

 restore

 save

 0.0783 0 0 0.029 setcmykcolor

 0.0 351.09218 moveto

 0.0 372.23643 lineto

 pgfstr

 restore

 save

 0.081 0 0 0.03 setcmykcolor

 0.0 353.2053 moveto

 0.0 374.34958 lineto

 pgfstr

 restore

 save

 0.0837 0 0 0.031 setcmykcolor

 0.0 355.32169 moveto

 0.0 376.4627 lineto

 pgfstr

 restore

 save

 0.0864 0 0 0.032 setcmykcolor

 0.0 357.4348 moveto

 0.0 378.57907 lineto

 pgfstr

 restore

 save

 0.0891 0 0 0.033 setcmykcolor

 0.0 359.54796 moveto

 0.0 380.6922 lineto

 pgfstr

 restore

 save

 0.0918 0 0 0.034 setcmykcolor

 0.0 361.6643 moveto

 0.0 382.80534 lineto

 pgfstr

 restore

 save

 0.0945 0 0 0.035 setcmykcolor

 0.0 363.77745 moveto

 0.0 384.9217 lineto

 pgfstr

 restore

 save

 0.0972 0 0 0.036 setcmykcolor

 0.0 365.89058 moveto

 0.0 387.03485 lineto

 pgfstr

 restore

 save

 0.0999 0 0 0.037 setcmykcolor

 0.0 368.00694 moveto

 0.0 389.14798 lineto

 pgfstr

 restore

 save

 0.1026 0 0 0.038 setcmykcolor

 0.0 370.12009 moveto

 0.0 391.26434 lineto

 pgfstr

 restore

 save

 0.1053 0 0 0.039 setcmykcolor

 0.0 372.23643 moveto

 0.0 393.37747 lineto

 pgfstr

 restore

 save

 0.108 0 0 0.04001 setcmykcolor

 0.0 374.34958 moveto

 0.0 395.49062 lineto

 pgfstr

 restore

 save

 0.1107 0 0 0.041 setcmykcolor

 0.0 376.4627 moveto

 0.0 397.60698 lineto

 pgfstr

 restore

 save

 0.1134 0 0 0.042 setcmykcolor

 0.0 378.57907 moveto

 0.0 399.7201 lineto

 pgfstr

 restore

 save

 0.1161 0 0 0.043 setcmykcolor

 0.0 380.6922 moveto

 0.0 401.83647 lineto

 pgfstr

 restore

 save

 0.1188 0 0 0.044 setcmykcolor

 0.0 382.80534 moveto

 0.0 403.9496 lineto

 pgfstr

 restore

 save

 0.1215 0 0 0.045 setcmykcolor

 0.0 384.9217 moveto

 0.0 406.06274 lineto

 pgfstr

 restore

 save

 0.1242 0 0 0.046 setcmykcolor

 0.0 387.03485 moveto

 0.0 408.17911 lineto

 pgfstr

 restore

 save

 0.1269 0 0 0.047 setcmykcolor

 0.0 389.14798 moveto

 0.0 410.29224 lineto

 pgfstr

 restore

 save

 0.12961 0 0 0.048 setcmykcolor

 0.0 391.26434 moveto

 0.0 412.40538 lineto

 pgfstr

 restore

 save

 0.13231 0 0 0.04901 setcmykcolor

 0.0 393.37747 moveto

 0.0 414.52174 lineto

 pgfstr

 restore

 save

 0.135 0 0 0.05 setcmykcolor

 0.0 395.49062 moveto

 0.0 416.63487 lineto

 pgfstr

 restore

 save

 0.13771 0 0 0.05101 setcmykcolor

 0.0 397.60698 moveto

 0.0 418.74802 lineto

 pgfstr

 restore

 save

 0.1404 0 0 0.052 setcmykcolor

 0.0 399.7201 moveto

 0.0 420.86436 lineto

 pgfstr

 restore

 save

 0.1431 0 0 0.05301 setcmykcolor

 0.0 401.83647 moveto

 0.0 422.97751 lineto

 pgfstr

 restore

 save

 0.1458 0 0 0.054 setcmykcolor

 0.0 403.9496 moveto

 0.0 425.09387 lineto

 pgfstr

 restore

 save

 0.1485 0 0 0.05501 setcmykcolor

 0.0 406.06274 moveto

 0.0 427.20699 lineto

 pgfstr

 restore

 save

 0.1512 0 0 0.056 setcmykcolor

 0.0 408.17911 moveto

 0.0 429.32014 lineto

 pgfstr

 restore

 save

 0.1539 0 0 0.057 setcmykcolor

 0.0 410.29224 moveto

 0.0 431.4365 lineto

 pgfstr

 restore

 save

 0.1566 0 0 0.058 setcmykcolor

 0.0 412.40538 moveto

 0.0 433.54964 lineto

 pgfstr

 restore

 save

 0.1593 0 0 0.059 setcmykcolor

 0.0 414.52174 moveto

 0.0 435.66278 lineto

 pgfstr

 restore

 save

 0.162 0 0 0.06 setcmykcolor

 0.0 416.63487 moveto

 0.0 437.77913 lineto

 pgfstr

 restore

 save

 0.1647 0 0 0.061 setcmykcolor

 0.0 418.74802 moveto

 0.0 439.89227 lineto

 pgfstr

 restore

 save

 0.1674 0 0 0.062 setcmykcolor

 0.0 420.86436 moveto

 0.0 442.0054 lineto

 pgfstr

 restore

 save

 0.1701 0 0 0.063 setcmykcolor

 0.0 422.97751 moveto

 0.0 444.12177 lineto

 pgfstr

 restore

 save

 0.1728 0 0 0.06401 setcmykcolor

 0.0 425.09387 moveto

 0.0 446.23491 lineto

 pgfstr

 restore

 save

 0.1755 0 0 0.065 setcmykcolor

 0.0 427.20699 moveto

 0.0 448.34804 lineto

 pgfstr

 restore

 save

 0.1782 0 0 0.06601 setcmykcolor

 0.0 429.32014 moveto

 0.0 450.4644 lineto

 pgfstr

 restore

 save

 0.18091 0 0 0.067 setcmykcolor

 0.0 431.4365 moveto

 0.0 452.57755 lineto

 pgfstr

 restore

 save

 0.18361 0 0 0.06801 setcmykcolor

 0.0 433.54964 moveto

 0.0 454.6939 lineto

 pgfstr

 restore

 save

 0.18631 0 0 0.069 setcmykcolor

 0.0 435.66278 moveto

 0.0 456.80704 lineto

 pgfstr

 restore

 save

 0.18901 0 0 0.07 setcmykcolor

 0.0 437.77913 moveto

 0.0 458.92017 lineto

 pgfstr

 restore

 save

 0.1917 0 0 0.071 setcmykcolor

 0.0 439.89227 moveto

 0.0 461.03653 lineto

 pgfstr

 restore

 save

 0.1944 0 0 0.072 setcmykcolor

 0.0 442.0054 moveto

 0.0 463.14967 lineto

 pgfstr

 restore

 save

 0.1971 0 0 0.073 setcmykcolor

 0.0 444.12177 moveto

 0.0 465.2628 lineto

 pgfstr

 restore

 save

 0.1998 0 0 0.074 setcmykcolor

 0.0 446.23491 moveto

 0.0 467.37917 lineto

 pgfstr

 restore

 save

 0.2025 0 0 0.07501 setcmykcolor

 0.0 448.34804 moveto

 0.0 469.4923 lineto

 pgfstr

 restore

 save

 0.2052 0 0 0.076 setcmykcolor

 0.0 450.4644 moveto

 0.0 471.60544 lineto

 pgfstr

 restore

 save

 0.2079 0 0 0.07701 setcmykcolor

 0.0 452.57755 moveto

 0.0 473.7218 lineto

 pgfstr

 restore

 save

 0.2106 0 0 0.078 setcmykcolor

 0.0 454.6939 moveto

 0.0 475.83493 lineto

 pgfstr

 restore

 save

 0.2133 0 0 0.07901 setcmykcolor

 0.0 456.80704 moveto

 0.0 477.95131 lineto

 pgfstr

 restore

 save

 0.216 0 0 0.08 setcmykcolor

 0.0 458.92017 moveto

 0.0 480.06442 lineto

 pgfstr

 restore

 save

 0.2187 0 0 0.08101 setcmykcolor

 0.0 461.03653 moveto

 0.0 482.17757 lineto

 pgfstr

 restore

 save

 0.2214 0 0 0.082 setcmykcolor

 0.0 463.14967 moveto

 0.0 484.29393 lineto

 pgfstr

 restore

 save

 0.2241 0 0 0.08301 setcmykcolor

 0.0 465.2628 moveto

 0.0 486.40706 lineto

 pgfstr

 restore

 save

 0.2268 0 0 0.084 setcmykcolor

 0.0 467.37917 moveto

 0.0 488.5202 lineto

 pgfstr

 restore

 save

 0.2295 0 0 0.085 setcmykcolor

 0.0 469.4923 moveto

 0.0 490.63657 lineto

 pgfstr

 restore

 save

 0.23221 0 0 0.086 setcmykcolor

 0.0 471.60544 moveto

 0.0 492.7497 lineto

 pgfstr

 restore

 save

 0.23491 0 0 0.087 setcmykcolor

 0.0 473.7218 moveto

 0.0 494.86284 lineto

 pgfstr

 restore

 save

 0.23761 0 0 0.088 setcmykcolor

 0.0 475.83493 moveto

 0.0 496.97919 lineto

 pgfstr

 restore

 save

 0.2403 0 0 0.089 setcmykcolor

 0.0 477.95131 moveto

 0.0 499.09233 lineto

 pgfstr

 restore

 save

 0.24301 0 0 0.09001 setcmykcolor

 0.0 480.06442 moveto

 0.0 501.20547 lineto

 pgfstr

 restore

 save

 0 0 0 0 setcmykcolor

 476.19318 289.77577 moveto

 476.19316 310.92003 lineto

 pgfstr

 restore

 save

 0.0027 0 0 0.001 setcmykcolor

 476.19316 291.89212 moveto

 476.19316 313.03316 lineto

 pgfstr

 restore

 save

 0.0054 0 0 0.002 setcmykcolor

 476.19316 294.00525 moveto

 476.19316 315.14952 lineto

 pgfstr

 restore

 save

 0.0081 0 0 0.003 setcmykcolor

 476.19316 296.12161 moveto

 476.19316 317.26265 lineto

 pgfstr

 restore

 save

 0.0108 0 0 0.004 setcmykcolor

 476.19316 298.23474 moveto

 476.19316 319.37901 lineto

 pgfstr

 restore

 save

 0.0135 0 0 0.005 setcmykcolor

 476.19316 300.3479 moveto

 476.19316 321.49214 lineto

 pgfstr

 restore

 save

 0.0162 0 0 0.006 setcmykcolor

 476.19316 302.46423 moveto

 476.19316 323.60529 lineto

 pgfstr

 restore

 save

 0.0189 0 0 0.007 setcmykcolor

 476.19316 304.5774 moveto

 476.19316 325.72163 lineto

 pgfstr

 restore

 save

 0.0216 0 0 0.008 setcmykcolor

 476.19316 306.6905 moveto

 476.19316 327.8348 lineto

 pgfstr

 restore

 save

 0.0243 0 0 0.009 setcmykcolor

 476.19316 308.80688 moveto

 476.19316 329.9479 lineto

 pgfstr

 restore

 save

 0.027 0 0 0.01 setcmykcolor

 476.19316 310.92003 moveto

 476.19316 332.06429 lineto

 pgfstr

 restore

 save

 0.0297 0 0 0.011 setcmykcolor

 476.19316 313.03316 moveto

 476.19316 334.1774 lineto

 pgfstr

 restore

 save

 0.0324 0 0 0.012 setcmykcolor

 476.19316 315.14952 moveto

 476.19316 336.29056 lineto

 pgfstr

 restore

 save

 0.0351 0 0 0.013 setcmykcolor

 476.19316 317.26265 moveto

 476.19316 338.40692 lineto

 pgfstr

 restore

 save

 0.0378 0 0 0.014 setcmykcolor

 476.19316 319.37901 moveto

 476.19316 340.52005 lineto

 pgfstr

 restore

 save

 0.0405 0 0 0.015 setcmykcolor

 476.19316 321.49214 moveto

 476.19316 342.6332 lineto

 pgfstr

 restore

 save

 0.0432 0 0 0.016 setcmykcolor

 476.19316 323.60529 moveto

 476.19316 344.74954 lineto

 pgfstr

 restore

 save

 0.0459 0 0 0.017 setcmykcolor

 476.19316 325.72163 moveto

 476.19316 346.86269 lineto

 pgfstr

 restore

 save

 0.0486 0 0 0.018 setcmykcolor

 476.19316 327.8348 moveto

 476.19316 348.97903 lineto

 pgfstr

 restore

 save

 0.0513 0 0 0.019 setcmykcolor

 476.19316 329.9479 moveto

 476.19316 351.09218 lineto

 pgfstr

 restore

 save

 0.054 0 0 0.02 setcmykcolor

 476.19316 332.06429 moveto

 476.19316 353.2053 lineto

 pgfstr

 restore

 save

 0.0567 0 0 0.021 setcmykcolor

 476.19316 334.1774 moveto

 476.19316 355.32169 lineto

 pgfstr

 restore

 save

 0.0594 0 0 0.022 setcmykcolor

 476.19316 336.29056 moveto

 476.19316 357.4348 lineto

 pgfstr

 restore

 save

 0.0621 0 0 0.023 setcmykcolor

 476.19316 338.40692 moveto

 476.19316 359.54796 lineto

 pgfstr

 restore

 save

 0.0648 0 0 0.024 setcmykcolor

 476.19316 340.52005 moveto

 476.19316 361.6643 lineto

 pgfstr

 restore

 save

 0.0675 0 0 0.02501 setcmykcolor

 476.19316 342.6332 moveto

 476.19316 363.77745 lineto

 pgfstr

 restore

 save

 0.0702 0 0 0.026 setcmykcolor

 476.19316 344.74954 moveto

 476.19316 365.89058 lineto

 pgfstr

 restore

 save

 0.0729 0 0 0.02701 setcmykcolor

 476.19316 346.86269 moveto

 476.19316 368.00694 lineto

 pgfstr

 restore

 save

 0.0756 0 0 0.028 setcmykcolor

 476.19316 348.97903 moveto

 476.19316 370.12009 lineto

 pgfstr

 restore

 save

 0.0783 0 0 0.029 setcmykcolor

 476.19316 351.09218 moveto

 476.19316 372.23643 lineto

 pgfstr

 restore

 save

 0.081 0 0 0.03 setcmykcolor

 476.19316 353.2053 moveto

 476.19316 374.34958 lineto

 pgfstr

 restore

 save

 0.0837 0 0 0.031 setcmykcolor

 476.19316 355.32169 moveto

 476.19316 376.4627 lineto

 pgfstr

 restore

 save

 0.0864 0 0 0.032 setcmykcolor

 476.19316 357.4348 moveto

 476.19316 378.57907 lineto

 pgfstr

 restore

 save

 0.0891 0 0 0.033 setcmykcolor

 476.19316 359.54796 moveto

 476.19316 380.6922 lineto

 pgfstr

 restore

 save

 0.0918 0 0 0.034 setcmykcolor

 476.19316 361.6643 moveto

 476.19316 382.80534 lineto

 pgfstr

 restore

 save

 0.0945 0 0 0.035 setcmykcolor

 476.19316 363.77745 moveto

 476.19316 384.9217 lineto

 pgfstr

 restore

 save

 0.0972 0 0 0.036 setcmykcolor

 476.19316 365.89058 moveto

 476.19316 387.03485 lineto

 pgfstr

 restore

 save

 0.0999 0 0 0.037 setcmykcolor

 476.19316 368.00694 moveto

 476.19316 389.14798 lineto

 pgfstr

 restore

 save

 0.1026 0 0 0.038 setcmykcolor

 476.19316 370.12009 moveto

 476.19316 391.26434 lineto

 pgfstr

 restore

 save

 0.1053 0 0 0.039 setcmykcolor

 476.19316 372.23643 moveto

 476.19316 393.37747 lineto

 pgfstr

 restore

 save

 0.108 0 0 0.04001 setcmykcolor

 476.19316 374.34958 moveto

 476.19318 395.49062 lineto

 pgfstr

 restore

 save

 0.1107 0 0 0.041 setcmykcolor

 476.19316 376.4627 moveto

 476.19316 397.60698 lineto

 pgfstr

 restore

 save

 0.1134 0 0 0.042 setcmykcolor

 476.19316 378.57907 moveto

 476.19316 399.7201 lineto

 pgfstr

 restore

 save

 0.1161 0 0 0.043 setcmykcolor

 476.19316 380.6922 moveto

 476.19316 401.83647 lineto

 pgfstr

 restore

 save

 0.1188 0 0 0.044 setcmykcolor

 476.19316 382.80534 moveto

 476.19316 403.9496 lineto

 pgfstr

 restore

 save

 0.1215 0 0 0.045 setcmykcolor

 476.19316 384.9217 moveto

 476.19316 406.06274 lineto

 pgfstr

 restore

 save

 0.1242 0 0 0.046 setcmykcolor

 476.19316 387.03485 moveto

 476.19316 408.17911 lineto

 pgfstr

 restore

 save

 0.1269 0 0 0.047 setcmykcolor

 476.19316 389.14798 moveto

 476.19316 410.29224 lineto

 pgfstr

 restore

 save

 0.12961 0 0 0.048 setcmykcolor

 476.19316 391.26434 moveto

 476.19316 412.40538 lineto

 pgfstr

 restore

 save

 0.13231 0 0 0.04901 setcmykcolor

 476.19316 393.37747 moveto

 476.19316 414.52174 lineto

 pgfstr

 restore

 save

 0.135 0 0 0.05 setcmykcolor

 476.19318 395.49062 moveto

 476.19316 416.63487 lineto

 pgfstr

 restore

 save

 0.13771 0 0 0.05101 setcmykcolor

 476.19316 397.60698 moveto

 476.19316 418.74802 lineto

 pgfstr

 restore

 save

 0.1404 0 0 0.052 setcmykcolor

 476.19316 399.7201 moveto

 476.19316 420.86436 lineto

 pgfstr

 restore

 save

 0.1431 0 0 0.05301 setcmykcolor

 476.19316 401.83647 moveto

 476.19316 422.97751 lineto

 pgfstr

 restore

 save

 0.1458 0 0 0.054 setcmykcolor

 476.19316 403.9496 moveto

 476.19316 425.09387 lineto

 pgfstr

 restore

 save

 0.1485 0 0 0.05501 setcmykcolor

 476.19316 406.06274 moveto

 476.19316 427.20699 lineto

 pgfstr

 restore

 save

 0.1512 0 0 0.056 setcmykcolor

 476.19316 408.17911 moveto

 476.19316 429.32014 lineto

 pgfstr

 restore

 save

 0.1539 0 0 0.057 setcmykcolor

 476.19316 410.29224 moveto

 476.19316 431.4365 lineto

 pgfstr

 restore

 save

 0.1566 0 0 0.058 setcmykcolor

 476.19316 412.40538 moveto

 476.19316 433.54964 lineto

 pgfstr

 restore

 save

 0.1593 0 0 0.059 setcmykcolor

 476.19316 414.52174 moveto

 476.19316 435.66278 lineto

 pgfstr

 restore

 save

 0.162 0 0 0.06 setcmykcolor

 476.19316 416.63487 moveto

 476.19316 437.77913 lineto

 pgfstr

 restore

 save

 0.1647 0 0 0.061 setcmykcolor

 476.19316 418.74802 moveto

 476.19316 439.89227 lineto

 pgfstr

 restore

 save

 0.1674 0 0 0.062 setcmykcolor

 476.19316 420.86436 moveto

 476.19316 442.0054 lineto

 pgfstr

 restore

 save

 0.1701 0 0 0.063 setcmykcolor

 476.19316 422.97751 moveto

 476.19316 444.12177 lineto

 pgfstr

 restore

 save

 0.1728 0 0 0.06401 setcmykcolor

 476.19316 425.09387 moveto

 476.19316 446.23491 lineto

 pgfstr

 restore

 save

 0.1755 0 0 0.065 setcmykcolor

 476.19316 427.20699 moveto

 476.19316 448.34804 lineto

 pgfstr

 restore

 save

 0.1782 0 0 0.06601 setcmykcolor

 476.19316 429.32014 moveto

 476.19316 450.4644 lineto

 pgfstr

 restore

 save

 0.18091 0 0 0.067 setcmykcolor

 476.19316 431.4365 moveto

 476.19316 452.57755 lineto

 pgfstr

 restore

 save

 0.18361 0 0 0.06801 setcmykcolor

 476.19316 433.54964 moveto

 476.19316 454.6939 lineto

 pgfstr

 restore

 save

 0.18631 0 0 0.069 setcmykcolor

 476.19316 435.66278 moveto

 476.19316 456.80704 lineto

 pgfstr

 restore

 save

 0.18901 0 0 0.07 setcmykcolor

 476.19316 437.77913 moveto

 476.19316 458.92017 lineto

 pgfstr

 restore

 save

 0.1917 0 0 0.071 setcmykcolor

 476.19316 439.89227 moveto

 476.19316 461.03653 lineto

 pgfstr

 restore

 save

 0.1944 0 0 0.072 setcmykcolor

 476.19316 442.0054 moveto

 476.19316 463.14967 lineto

 pgfstr

 restore

 save

 0.1971 0 0 0.073 setcmykcolor

 476.19316 444.12177 moveto

 476.19316 465.2628 lineto

 pgfstr

 restore

 save

 0.1998 0 0 0.074 setcmykcolor

 476.19316 446.23491 moveto

 476.19316 467.37917 lineto

 pgfstr

 restore

 save

 0.2025 0 0 0.07501 setcmykcolor

 476.19316 448.34804 moveto

 476.19316 469.4923 lineto

 pgfstr

 restore

 save

 0.2052 0 0 0.076 setcmykcolor

 476.19316 450.4644 moveto

 476.19316 471.60544 lineto

 pgfstr

 restore

 save

 0.2079 0 0 0.07701 setcmykcolor

 476.19316 452.57755 moveto

 476.19316 473.7218 lineto

 pgfstr

 restore

 save

 0.2106 0 0 0.078 setcmykcolor

 476.19316 454.6939 moveto

 476.19316 475.83493 lineto

 pgfstr

 restore

 save

 0.2133 0 0 0.07901 setcmykcolor

 476.19316 456.80704 moveto

 476.19316 477.95131 lineto

 pgfstr

 restore

 save

 0.216 0 0 0.08 setcmykcolor

 476.19316 458.92017 moveto

 476.19316 480.06442 lineto

 pgfstr

 restore

 save

 0.2187 0 0 0.08101 setcmykcolor

 476.19316 461.03653 moveto

 476.19316 482.17757 lineto

 pgfstr

 restore

 save

 0.2214 0 0 0.082 setcmykcolor

 476.19316 463.14967 moveto

 476.19316 484.29393 lineto

 pgfstr

 restore

 save

 0.2241 0 0 0.08301 setcmykcolor

 476.19316 465.2628 moveto

 476.19316 486.40706 lineto

 pgfstr

 restore

 save

 0.2268 0 0 0.084 setcmykcolor

 476.19316 467.37917 moveto

 476.19316 488.5202 lineto

 pgfstr

 restore

 save

 0.2295 0 0 0.085 setcmykcolor

 476.19316 469.4923 moveto

 476.19316 490.63657 lineto

 pgfstr

 restore

 save

 0.23221 0 0 0.086 setcmykcolor

 476.19316 471.60544 moveto

 476.19316 492.7497 lineto

 pgfstr

 restore

 save

 0.23491 0 0 0.087 setcmykcolor

 476.19316 473.7218 moveto

 476.19316 494.86284 lineto

 pgfstr

 restore

 save

 0.23761 0 0 0.088 setcmykcolor

 476.19316 475.83493 moveto

 476.19316 496.97919 lineto

 pgfstr

 restore

 save

 0.2403 0 0 0.089 setcmykcolor

 476.19316 477.95131 moveto

 476.19316 499.09233 lineto

 pgfstr

 restore

 save

 0.24301 0 0 0.09001 setcmykcolor

 476.19316 480.06442 moveto

 476.19318 501.20547 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 4.98138 487.97505 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -497 19163 a Fg(No)37 b(Con)m(text)-497 19262 y Fh(Aliquam)65
b(a)g(enim)g(vitae)g(mi)g(in)n(terdum)g(hendrerit.)148
b(Quisque)64 b(eleifend)h(pharetra)e(orci)h(eget)h(adipiscing.)-497
19362 y(In)g(non)g(diam)g(id)g(mi)g(sagittis)e(blandit.)149
b(Nunc)65 b(in)g(neque)g(a)f(neque)g(lob)r(ortis)g(feugiat)g(bib)r
(endum)i(non)-497 19462 y(v)n(elit.)127 b(Cras)57 b(nec)g(lacinia)g
(lorem.)126 b(Nunc)58 b(vitae)f(v)n(elit)h(et)g(n)n(unc)f(faucibus)h
(consectetur.)126 b(Aenean)57 b(phare-)-497 19561 y(tra)51
b(lob)r(ortis)f(massa.)108 b(Susp)r(endisse)51 b(p)r(oten)n(ti.)108
b(Cras)50 b(tortor)g(eros,)56 b(p)r(orttitor)51 b(eu)g(luctus)h(at,)57
b(aliquet)51 b(ut)h(est.)-497 19760 y Fg(Not)37 b(WYSIWYG)-497
19860 y Fh(Proin)80 b(sit)h(amet)g(ipsum)h(vitae)e(ipsum)h(fringilla)f
(facilisis)h(non)g(at)g(nisi.)197 b(Cras)80 b(so)r(dales)g(p)r
(orttitor)-497 19960 y(ligula,)74 b(id)66 b(molestie)f(sapien)f
(placerat)g(tempus.)150 b(Duis)66 b(sit)f(amet)g(o)r(dio)g(diam.)150
b(Susp)r(endisse)65 b(p)r(orttitor)-497 20159 y Fg(Unsuitable)39
b(for)e(P)m(ersonal)h(Arc)m(hiving)-497 20259 y Fh(Cras)90
b(justo)i(arcu,)106 b(p)r(orttitor)90 b(eget)h(hendrerit)f(non,)107
b(in)n(terdum)91 b(ac)g(massa.)226 b(P)n(ellen)n(tesque)90
b(v)-5 b(ar-)-497 20358 y(ius,)89 b(orci)76 b(nec)g(in)n(terdum)g(v)n
(enenatis,)88 b(lorem)76 b(urna)f(rhoncus)h(mi,)89 b(eu)76
b(so)r(dales)g(lectus)g(an)n(te)g(ac)g(sem.)-497 20557
y Fg(No)37 b(Authen)m(tication)-497 20657 y Fh(Proin)28
b(placerat)f(in)n(terdum)h(ipsum)h(quis)f(luctus.)39
b(Aliquam)29 b(quis)f(nisl)g(in)h(sem)f(ornare)f(sollicitudin.)39
b(Mauris)27 b(nec)i(lorem)-497 20757 y(orci,)e(ut)h(imp)r(erdiet)f
(nisi.)37 b(Morbi)27 b(laoreet,)f(orci)g(quis)i(pretium)f(congue,)g
(risus)f(quam)h(malesuada)f(magna,)-497 19163 y


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 1.99255 pgfw

 save

 /pgfsc{}def/pgffc{}def

 0.27 0 0 0.1 setcmykcolor

 /pgffc{0.18 0 0 0.1 setcmykcolor}def

 483.16708 570.82516 moveto

 483.16708 590.7507 lineto

 949.3975 590.7507 lineto

 954.89986 590.7507 959.36028 586.29028 959.36028 580.78793 curveto

 959.36028 570.82516 lineto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 487.15213 575.47621 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 0 0 0 1
TeXcolorcmyk -497 19163 a Fk(Our)46 b(methods)e(are)h(a)-8
b(t)45 b(the)f(perf)m(ormance/speed)f(sweet)g(point)p
0 0 0 1 TeXcolorcmyk -497 19163 a


 pgfr

 restore

 restore

 save

 /pgffc{0 1 0 0 setcmykcolor}def

 483.16708 570.82516 moveto

 483.16708 320.81073 lineto

 959.36028 570.82516 moveto

 959.36028 320.81073 lineto

 gsave pgffc pgffill grestore newpath

 restore

 save

 0 0 0 0 setcmykcolor

 483.16708 320.81073 moveto

 483.16707 345.81369 lineto

 pgfstr

 restore

 save

 0.0027 0 0 0.001 setcmykcolor

 483.16707 323.3133 moveto

 483.16707 348.31245 lineto

 pgfstr

 restore

 save

 0.0054 0 0 0.002 setcmykcolor

 483.16707 325.81207 moveto

 483.16707 350.81505 lineto

 pgfstr

 restore

 save

 0.0081 0 0 0.003 setcmykcolor

 483.16707 328.31467 moveto

 483.16707 353.31381 lineto

 pgfstr

 restore

 save

 0.0108 0 0 0.004 setcmykcolor

 483.16707 330.81342 moveto

 483.16707 355.8164 lineto

 pgfstr

 restore

 save

 0.0135 0 0 0.005 setcmykcolor

 483.16707 333.3122 moveto

 483.16707 358.31517 lineto

 pgfstr

 restore

 save

 0.0162 0 0 0.006 setcmykcolor

 483.16707 335.81479 moveto

 483.16707 360.81395 lineto

 pgfstr

 restore

 save

 0.0189 0 0 0.007 setcmykcolor

 483.16707 338.31357 moveto

 483.16707 363.31653 lineto

 pgfstr

 restore

 save

 0.0216 0 0 0.008 setcmykcolor

 483.16707 340.81233 moveto

 483.16707 365.81529 lineto

 pgfstr

 restore

 save

 0.0243 0 0 0.009 setcmykcolor

 483.16707 343.31493 moveto

 483.16707 368.31407 lineto

 pgfstr

 restore

 save

 0.027 0 0 0.01 setcmykcolor

 483.16707 345.81369 moveto

 483.16707 370.81665 lineto

 pgfstr

 restore

 save

 0.0297 0 0 0.011 setcmykcolor

 483.16707 348.31245 moveto

 483.16707 373.31543 lineto

 pgfstr

 restore

 save

 0.0324 0 0 0.012 setcmykcolor

 483.16707 350.81505 moveto

 483.16707 375.8142 lineto

 pgfstr

 restore

 save

 0.0351 0 0 0.013 setcmykcolor

 483.16707 353.31381 moveto

 483.16707 378.31677 lineto

 pgfstr

 restore

 save

 0.0378 0 0 0.014 setcmykcolor

 483.16707 355.8164 moveto

 483.16707 380.81555 lineto

 pgfstr

 restore

 save

 0.0405 0 0 0.015 setcmykcolor

 483.16707 358.31517 moveto

 483.16708 383.31433 lineto

 pgfstr

 restore

 save

 0.0432 0 0 0.016 setcmykcolor

 483.16707 360.81395 moveto

 483.16707 385.8169 lineto

 pgfstr

 restore

 save

 0.0459 0 0 0.017 setcmykcolor

 483.16707 363.31653 moveto

 483.16707 388.31567 lineto

 pgfstr

 restore

 save

 0.0486 0 0 0.018 setcmykcolor

 483.16707 365.81529 moveto

 483.16707 390.81827 lineto

 pgfstr

 restore

 save

 0.0513 0 0 0.019 setcmykcolor

 483.16707 368.31407 moveto

 483.16707 393.31703 lineto

 pgfstr

 restore

 save

 0.054 0 0 0.02 setcmykcolor

 483.16707 370.81665 moveto

 483.16707 395.81581 lineto

 pgfstr

 restore

 save

 0.0567 0 0 0.021 setcmykcolor

 483.16707 373.31543 moveto

 483.16707 398.3184 lineto

 pgfstr

 restore

 save

 0.0594 0 0 0.022 setcmykcolor

 483.16707 375.8142 moveto

 483.16707 400.81718 lineto

 pgfstr

 restore

 save

 0.0621 0 0 0.023 setcmykcolor

 483.16707 378.31677 moveto

 483.16707 403.31593 lineto

 pgfstr

 restore

 save

 0.0648 0 0 0.024 setcmykcolor

 483.16707 380.81555 moveto

 483.16707 405.81853 lineto

 pgfstr

 restore

 save

 0.0675 0 0 0.02501 setcmykcolor

 483.16708 383.31433 moveto

 483.16707 408.3173 lineto

 pgfstr

 restore

 save

 0.0702 0 0 0.026 setcmykcolor

 483.16707 385.8169 moveto

 483.16707 410.81606 lineto

 pgfstr

 restore

 save

 0.0729 0 0 0.02701 setcmykcolor

 483.16707 388.31567 moveto

 483.16707 413.31865 lineto

 pgfstr

 restore

 save

 0.0756 0 0 0.028 setcmykcolor

 483.16707 390.81827 moveto

 483.16707 415.81743 lineto

 pgfstr

 restore

 save

 0.0783 0 0 0.029 setcmykcolor

 483.16707 393.31703 moveto

 483.16707 418.32 lineto

 pgfstr

 restore

 save

 0.081 0 0 0.03 setcmykcolor

 483.16707 395.81581 moveto

 483.16707 420.81877 lineto

 pgfstr

 restore

 save

 0.0837 0 0 0.031 setcmykcolor

 483.16707 398.3184 moveto

 483.16707 423.31755 lineto

 pgfstr

 restore

 save

 0.0864 0 0 0.032 setcmykcolor

 483.16707 400.81718 moveto

 483.16707 425.82013 lineto

 pgfstr

 restore

 save

 0.0891 0 0 0.033 setcmykcolor

 483.16707 403.31593 moveto

 483.16707 428.3189 lineto

 pgfstr

 restore

 save

 0.0918 0 0 0.034 setcmykcolor

 483.16707 405.81853 moveto

 483.16707 430.81767 lineto

 pgfstr

 restore

 save

 0.0945 0 0 0.035 setcmykcolor

 483.16707 408.3173 moveto

 483.16707 433.32027 lineto

 pgfstr

 restore

 save

 0.0972 0 0 0.036 setcmykcolor

 483.16707 410.81606 moveto

 483.16707 435.81903 lineto

 pgfstr

 restore

 save

 0.0999 0 0 0.037 setcmykcolor

 483.16707 413.31865 moveto

 483.16707 438.3178 lineto

 pgfstr

 restore

 save

 0.1026 0 0 0.038 setcmykcolor

 483.16707 415.81743 moveto

 483.16707 440.82039 lineto

 pgfstr

 restore

 save

 0.1053 0 0 0.039 setcmykcolor

 483.16707 418.32 moveto

 483.16707 443.31915 lineto

 pgfstr

 restore

 save

 0.108 0 0 0.04001 setcmykcolor

 483.16707 420.81877 moveto

 483.16708 445.81793 lineto

 pgfstr

 restore

 save

 0.1107 0 0 0.041 setcmykcolor

 483.16707 423.31755 moveto

 483.16707 448.32051 lineto

 pgfstr

 restore

 save

 0.1134 0 0 0.042 setcmykcolor

 483.16707 425.82013 moveto

 483.16707 450.81929 lineto

 pgfstr

 restore

 save

 0.1161 0 0 0.043 setcmykcolor

 483.16707 428.3189 moveto

 483.16707 453.32188 lineto

 pgfstr

 restore

 save

 0.1188 0 0 0.044 setcmykcolor

 483.16707 430.81767 moveto

 483.16707 455.82065 lineto

 pgfstr

 restore

 save

 0.1215 0 0 0.045 setcmykcolor

 483.16707 433.32027 moveto

 483.16707 458.31941 lineto

 pgfstr

 restore

 save

 0.1242 0 0 0.046 setcmykcolor

 483.16707 435.81903 moveto

 483.16707 460.822 lineto

 pgfstr

 restore

 save

 0.1269 0 0 0.047 setcmykcolor

 483.16707 438.3178 moveto

 483.16707 463.32079 lineto

 pgfstr

 restore

 save

 0.12961 0 0 0.048 setcmykcolor

 483.16707 440.82039 moveto

 483.16707 465.81955 lineto

 pgfstr

 restore

 save

 0.13231 0 0 0.04901 setcmykcolor

 483.16707 443.31915 moveto

 483.16707 468.32213 lineto

 pgfstr

 restore

 save

 0.135 0 0 0.05 setcmykcolor

 483.16708 445.81793 moveto

 483.16707 470.8209 lineto

 pgfstr

 restore

 save

 0.13771 0 0 0.05101 setcmykcolor

 483.16707 448.32051 moveto

 483.16707 473.31967 lineto

 pgfstr

 restore

 save

 0.1404 0 0 0.052 setcmykcolor

 483.16707 450.81929 moveto

 483.16707 475.82225 lineto

 pgfstr

 restore

 save

 0.1431 0 0 0.05301 setcmykcolor

 483.16707 453.32188 moveto

 483.16707 478.32103 lineto

 pgfstr

 restore

 save

 0.1458 0 0 0.054 setcmykcolor

 483.16707 455.82065 moveto

 483.16707 480.82362 lineto

 pgfstr

 restore

 save

 0.1485 0 0 0.05501 setcmykcolor

 483.16707 458.31941 moveto

 483.16707 483.32237 lineto

 pgfstr

 restore

 save

 0.1512 0 0 0.056 setcmykcolor

 483.16707 460.822 moveto

 483.16707 485.82115 lineto

 pgfstr

 restore

 save

 0.1539 0 0 0.057 setcmykcolor

 483.16707 463.32079 moveto

 483.16707 488.32375 lineto

 pgfstr

 restore

 save

 0.1566 0 0 0.058 setcmykcolor

 483.16707 465.81955 moveto

 483.16707 490.8225 lineto

 pgfstr

 restore

 save

 0.1593 0 0 0.059 setcmykcolor

 483.16707 468.32213 moveto

 483.16707 493.32127 lineto

 pgfstr

 restore

 save

 0.162 0 0 0.06 setcmykcolor

 483.16707 470.8209 moveto

 483.16707 495.82387 lineto

 pgfstr

 restore

 save

 0.1647 0 0 0.061 setcmykcolor

 483.16707 473.31967 moveto

 483.16707 498.32263 lineto

 pgfstr

 restore

 save

 0.1674 0 0 0.062 setcmykcolor

 483.16707 475.82225 moveto

 483.16707 500.8214 lineto

 pgfstr

 restore

 save

 0.1701 0 0 0.063 setcmykcolor

 483.16707 478.32103 moveto

 483.16707 503.32399 lineto

 pgfstr

 restore

 save

 0.1728 0 0 0.06401 setcmykcolor

 483.16707 480.82362 moveto

 483.16707 505.82278 lineto

 pgfstr

 restore

 save

 0.1755 0 0 0.065 setcmykcolor

 483.16707 483.32237 moveto

 483.16708 508.32155 lineto

 pgfstr

 restore

 save

 0.1782 0 0 0.06601 setcmykcolor

 483.16707 485.82115 moveto

 483.16707 510.82413 lineto

 pgfstr

 restore

 save

 0.18091 0 0 0.067 setcmykcolor

 483.16707 488.32375 moveto

 483.16707 513.3229 lineto

 pgfstr

 restore

 save

 0.18361 0 0 0.06801 setcmykcolor

 483.16707 490.8225 moveto

 483.16707 515.82549 lineto

 pgfstr

 restore

 save

 0.18631 0 0 0.069 setcmykcolor

 483.16707 493.32127 moveto

 483.16707 518.32425 lineto

 pgfstr

 restore

 save

 0.18901 0 0 0.07 setcmykcolor

 483.16707 495.82387 moveto

 483.16707 520.82303 lineto

 pgfstr

 restore

 save

 0.1917 0 0 0.071 setcmykcolor

 483.16707 498.32263 moveto

 483.16707 523.3256 lineto

 pgfstr

 restore

 save

 0.1944 0 0 0.072 setcmykcolor

 483.16707 500.8214 moveto

 483.16707 525.82439 lineto

 pgfstr

 restore

 save

 0.1971 0 0 0.073 setcmykcolor

 483.16707 503.32399 moveto

 483.16707 528.32315 lineto

 pgfstr

 restore

 save

 0.1998 0 0 0.074 setcmykcolor

 483.16707 505.82278 moveto

 483.16707 530.82573 lineto

 pgfstr

 restore

 save

 0.2025 0 0 0.07501 setcmykcolor

 483.16708 508.32155 moveto

 483.16707 533.32451 lineto

 pgfstr

 restore

 save

 0.2052 0 0 0.076 setcmykcolor

 483.16707 510.82413 moveto

 483.16707 535.82327 lineto

 pgfstr

 restore

 save

 0.2079 0 0 0.07701 setcmykcolor

 483.16707 513.3229 moveto

 483.16707 538.32587 lineto

 pgfstr

 restore

 save

 0.2106 0 0 0.078 setcmykcolor

 483.16707 515.82549 moveto

 483.16707 540.82463 lineto

 pgfstr

 restore

 save

 0.2133 0 0 0.07901 setcmykcolor

 483.16707 518.32425 moveto

 483.16707 543.32722 lineto

 pgfstr

 restore

 save

 0.216 0 0 0.08 setcmykcolor

 483.16707 520.82303 moveto

 483.16707 545.82599 lineto

 pgfstr

 restore

 save

 0.2187 0 0 0.08101 setcmykcolor

 483.16707 523.3256 moveto

 483.16707 548.32475 lineto

 pgfstr

 restore

 save

 0.2214 0 0 0.082 setcmykcolor

 483.16707 525.82439 moveto

 483.16707 550.82735 lineto

 pgfstr

 restore

 save

 0.2241 0 0 0.08301 setcmykcolor

 483.16707 528.32315 moveto

 483.16707 553.32611 lineto

 pgfstr

 restore

 save

 0.2268 0 0 0.084 setcmykcolor

 483.16707 530.82573 moveto

 483.16707 555.82487 lineto

 pgfstr

 restore

 save

 0.2295 0 0 0.085 setcmykcolor

 483.16707 533.32451 moveto

 483.16707 558.32747 lineto

 pgfstr

 restore

 save

 0.23221 0 0 0.086 setcmykcolor

 483.16707 535.82327 moveto

 483.16707 560.82626 lineto

 pgfstr

 restore

 save

 0.23491 0 0 0.087 setcmykcolor

 483.16707 538.32587 moveto

 483.16707 563.32501 lineto

 pgfstr

 restore

 save

 0.23761 0 0 0.088 setcmykcolor

 483.16707 540.82463 moveto

 483.16707 565.8276 lineto

 pgfstr

 restore

 save

 0.2403 0 0 0.089 setcmykcolor

 483.16707 543.32722 moveto

 483.16707 568.32639 lineto

 pgfstr

 restore

 save

 0.24301 0 0 0.09001 setcmykcolor

 483.16707 545.82599 moveto

 483.16708 570.82516 lineto

 pgfstr

 restore

 save

 0 0 0 0 setcmykcolor

 959.36028 320.81073 moveto

 959.36026 345.81369 lineto

 pgfstr

 restore

 save

 0.0027 0 0 0.001 setcmykcolor

 959.36026 323.3133 moveto

 959.36026 348.31245 lineto

 pgfstr

 restore

 save

 0.0054 0 0 0.002 setcmykcolor

 959.36026 325.81207 moveto

 959.36026 350.81505 lineto

 pgfstr

 restore

 save

 0.0081 0 0 0.003 setcmykcolor

 959.36026 328.31467 moveto

 959.36026 353.31381 lineto

 pgfstr

 restore

 save

 0.0108 0 0 0.004 setcmykcolor

 959.36026 330.81342 moveto

 959.36026 355.8164 lineto

 pgfstr

 restore

 save

 0.0135 0 0 0.005 setcmykcolor

 959.36026 333.3122 moveto

 959.36026 358.31517 lineto

 pgfstr

 restore

 save

 0.0162 0 0 0.006 setcmykcolor

 959.36026 335.81479 moveto

 959.36026 360.81395 lineto

 pgfstr

 restore

 save

 0.0189 0 0 0.007 setcmykcolor

 959.36026 338.31357 moveto

 959.36026 363.31653 lineto

 pgfstr

 restore

 save

 0.0216 0 0 0.008 setcmykcolor

 959.36026 340.81233 moveto

 959.36026 365.81529 lineto

 pgfstr

 restore

 save

 0.0243 0 0 0.009 setcmykcolor

 959.36026 343.31493 moveto

 959.36026 368.31407 lineto

 pgfstr

 restore

 save

 0.027 0 0 0.01 setcmykcolor

 959.36026 345.81369 moveto

 959.36026 370.81665 lineto

 pgfstr

 restore

 save

 0.0297 0 0 0.011 setcmykcolor

 959.36026 348.31245 moveto

 959.36026 373.31543 lineto

 pgfstr

 restore

 save

 0.0324 0 0 0.012 setcmykcolor

 959.36026 350.81505 moveto

 959.36026 375.8142 lineto

 pgfstr

 restore

 save

 0.0351 0 0 0.013 setcmykcolor

 959.36026 353.31381 moveto

 959.36026 378.31677 lineto

 pgfstr

 restore

 save

 0.0378 0 0 0.014 setcmykcolor

 959.36026 355.8164 moveto

 959.36026 380.81555 lineto

 pgfstr

 restore

 save

 0.0405 0 0 0.015 setcmykcolor

 959.36026 358.31517 moveto

 959.36026 383.31433 lineto

 pgfstr

 restore

 save

 0.0432 0 0 0.016 setcmykcolor

 959.36026 360.81395 moveto

 959.36026 385.8169 lineto

 pgfstr

 restore

 save

 0.0459 0 0 0.017 setcmykcolor

 959.36026 363.31653 moveto

 959.36026 388.31567 lineto

 pgfstr

 restore

 save

 0.0486 0 0 0.018 setcmykcolor

 959.36026 365.81529 moveto

 959.36026 390.81827 lineto

 pgfstr

 restore

 save

 0.0513 0 0 0.019 setcmykcolor

 959.36026 368.31407 moveto

 959.36026 393.31703 lineto

 pgfstr

 restore

 save

 0.054 0 0 0.02 setcmykcolor

 959.36026 370.81665 moveto

 959.36026 395.81581 lineto

 pgfstr

 restore

 save

 0.0567 0 0 0.021 setcmykcolor

 959.36026 373.31543 moveto

 959.36026 398.3184 lineto

 pgfstr

 restore

 save

 0.0594 0 0 0.022 setcmykcolor

 959.36026 375.8142 moveto

 959.36026 400.81718 lineto

 pgfstr

 restore

 save

 0.0621 0 0 0.023 setcmykcolor

 959.36026 378.31677 moveto

 959.36026 403.31593 lineto

 pgfstr

 restore

 save

 0.0648 0 0 0.024 setcmykcolor

 959.36026 380.81555 moveto

 959.36026 405.81853 lineto

 pgfstr

 restore

 save

 0.0675 0 0 0.02501 setcmykcolor

 959.36026 383.31433 moveto

 959.36026 408.3173 lineto

 pgfstr

 restore

 save

 0.0702 0 0 0.026 setcmykcolor

 959.36026 385.8169 moveto

 959.36026 410.81606 lineto

 pgfstr

 restore

 save

 0.0729 0 0 0.02701 setcmykcolor

 959.36026 388.31567 moveto

 959.36026 413.31865 lineto

 pgfstr

 restore

 save

 0.0756 0 0 0.028 setcmykcolor

 959.36026 390.81827 moveto

 959.36026 415.81743 lineto

 pgfstr

 restore

 save

 0.0783 0 0 0.029 setcmykcolor

 959.36026 393.31703 moveto

 959.36026 418.32 lineto

 pgfstr

 restore

 save

 0.081 0 0 0.03 setcmykcolor

 959.36026 395.81581 moveto

 959.36026 420.81877 lineto

 pgfstr

 restore

 save

 0.0837 0 0 0.031 setcmykcolor

 959.36026 398.3184 moveto

 959.36026 423.31755 lineto

 pgfstr

 restore

 save

 0.0864 0 0 0.032 setcmykcolor

 959.36026 400.81718 moveto

 959.36026 425.82013 lineto

 pgfstr

 restore

 save

 0.0891 0 0 0.033 setcmykcolor

 959.36026 403.31593 moveto

 959.36026 428.3189 lineto

 pgfstr

 restore

 save

 0.0918 0 0 0.034 setcmykcolor

 959.36026 405.81853 moveto

 959.36026 430.81767 lineto

 pgfstr

 restore

 save

 0.0945 0 0 0.035 setcmykcolor

 959.36026 408.3173 moveto

 959.36026 433.32027 lineto

 pgfstr

 restore

 save

 0.0972 0 0 0.036 setcmykcolor

 959.36026 410.81606 moveto

 959.36026 435.81903 lineto

 pgfstr

 restore

 save

 0.0999 0 0 0.037 setcmykcolor

 959.36026 413.31865 moveto

 959.36026 438.3178 lineto

 pgfstr

 restore

 save

 0.1026 0 0 0.038 setcmykcolor

 959.36026 415.81743 moveto

 959.36026 440.82039 lineto

 pgfstr

 restore

 save

 0.1053 0 0 0.039 setcmykcolor

 959.36026 418.32 moveto

 959.36026 443.31915 lineto

 pgfstr

 restore

 save

 0.108 0 0 0.04001 setcmykcolor

 959.36026 420.81877 moveto

 959.36028 445.81793 lineto

 pgfstr

 restore

 save

 0.1107 0 0 0.041 setcmykcolor

 959.36026 423.31755 moveto

 959.36026 448.32051 lineto

 pgfstr

 restore

 save

 0.1134 0 0 0.042 setcmykcolor

 959.36026 425.82013 moveto

 959.36026 450.81929 lineto

 pgfstr

 restore

 save

 0.1161 0 0 0.043 setcmykcolor

 959.36026 428.3189 moveto

 959.36026 453.32188 lineto

 pgfstr

 restore

 save

 0.1188 0 0 0.044 setcmykcolor

 959.36026 430.81767 moveto

 959.36026 455.82065 lineto

 pgfstr

 restore

 save

 0.1215 0 0 0.045 setcmykcolor

 959.36026 433.32027 moveto

 959.36026 458.31941 lineto

 pgfstr

 restore

 save

 0.1242 0 0 0.046 setcmykcolor

 959.36026 435.81903 moveto

 959.36026 460.822 lineto

 pgfstr

 restore

 save

 0.1269 0 0 0.047 setcmykcolor

 959.36026 438.3178 moveto

 959.36026 463.32079 lineto

 pgfstr

 restore

 save

 0.12961 0 0 0.048 setcmykcolor

 959.36026 440.82039 moveto

 959.36026 465.81955 lineto

 pgfstr

 restore

 save

 0.13231 0 0 0.04901 setcmykcolor

 959.36026 443.31915 moveto

 959.36026 468.32213 lineto

 pgfstr

 restore

 save

 0.135 0 0 0.05 setcmykcolor

 959.36028 445.81793 moveto

 959.36026 470.8209 lineto

 pgfstr

 restore

 save

 0.13771 0 0 0.05101 setcmykcolor

 959.36026 448.32051 moveto

 959.36026 473.31967 lineto

 pgfstr

 restore

 save

 0.1404 0 0 0.052 setcmykcolor

 959.36026 450.81929 moveto

 959.36026 475.82225 lineto

 pgfstr

 restore

 save

 0.1431 0 0 0.05301 setcmykcolor

 959.36026 453.32188 moveto

 959.36026 478.32103 lineto

 pgfstr

 restore

 save

 0.1458 0 0 0.054 setcmykcolor

 959.36026 455.82065 moveto

 959.36026 480.82362 lineto

 pgfstr

 restore

 save

 0.1485 0 0 0.05501 setcmykcolor

 959.36026 458.31941 moveto

 959.36026 483.32237 lineto

 pgfstr

 restore

 save

 0.1512 0 0 0.056 setcmykcolor

 959.36026 460.822 moveto

 959.36026 485.82115 lineto

 pgfstr

 restore

 save

 0.1539 0 0 0.057 setcmykcolor

 959.36026 463.32079 moveto

 959.36026 488.32375 lineto

 pgfstr

 restore

 save

 0.1566 0 0 0.058 setcmykcolor

 959.36026 465.81955 moveto

 959.36026 490.8225 lineto

 pgfstr

 restore

 save

 0.1593 0 0 0.059 setcmykcolor

 959.36026 468.32213 moveto

 959.36026 493.32127 lineto

 pgfstr

 restore

 save

 0.162 0 0 0.06 setcmykcolor

 959.36026 470.8209 moveto

 959.36026 495.82387 lineto

 pgfstr

 restore

 save

 0.1647 0 0 0.061 setcmykcolor

 959.36026 473.31967 moveto

 959.36026 498.32263 lineto

 pgfstr

 restore

 save

 0.1674 0 0 0.062 setcmykcolor

 959.36026 475.82225 moveto

 959.36026 500.8214 lineto

 pgfstr

 restore

 save

 0.1701 0 0 0.063 setcmykcolor

 959.36026 478.32103 moveto

 959.36026 503.32399 lineto

 pgfstr

 restore

 save

 0.1728 0 0 0.06401 setcmykcolor

 959.36026 480.82362 moveto

 959.36026 505.82278 lineto

 pgfstr

 restore

 save

 0.1755 0 0 0.065 setcmykcolor

 959.36026 483.32237 moveto

 959.36026 508.32155 lineto

 pgfstr

 restore

 save

 0.1782 0 0 0.06601 setcmykcolor

 959.36026 485.82115 moveto

 959.36026 510.82413 lineto

 pgfstr

 restore

 save

 0.18091 0 0 0.067 setcmykcolor

 959.36026 488.32375 moveto

 959.36026 513.3229 lineto

 pgfstr

 restore

 save

 0.18361 0 0 0.06801 setcmykcolor

 959.36026 490.8225 moveto

 959.36026 515.82549 lineto

 pgfstr

 restore

 save

 0.18631 0 0 0.069 setcmykcolor

 959.36026 493.32127 moveto

 959.36026 518.32425 lineto

 pgfstr

 restore

 save

 0.18901 0 0 0.07 setcmykcolor

 959.36026 495.82387 moveto

 959.36026 520.82303 lineto

 pgfstr

 restore

 save

 0.1917 0 0 0.071 setcmykcolor

 959.36026 498.32263 moveto

 959.36026 523.3256 lineto

 pgfstr

 restore

 save

 0.1944 0 0 0.072 setcmykcolor

 959.36026 500.8214 moveto

 959.36026 525.82439 lineto

 pgfstr

 restore

 save

 0.1971 0 0 0.073 setcmykcolor

 959.36026 503.32399 moveto

 959.36026 528.32315 lineto

 pgfstr

 restore

 save

 0.1998 0 0 0.074 setcmykcolor

 959.36026 505.82278 moveto

 959.36026 530.82573 lineto

 pgfstr

 restore

 save

 0.2025 0 0 0.07501 setcmykcolor

 959.36026 508.32155 moveto

 959.36026 533.32451 lineto

 pgfstr

 restore

 save

 0.2052 0 0 0.076 setcmykcolor

 959.36026 510.82413 moveto

 959.36026 535.82327 lineto

 pgfstr

 restore

 save

 0.2079 0 0 0.07701 setcmykcolor

 959.36026 513.3229 moveto

 959.36026 538.32587 lineto

 pgfstr

 restore

 save

 0.2106 0 0 0.078 setcmykcolor

 959.36026 515.82549 moveto

 959.36026 540.82463 lineto

 pgfstr

 restore

 save

 0.2133 0 0 0.07901 setcmykcolor

 959.36026 518.32425 moveto

 959.36026 543.32722 lineto

 pgfstr

 restore

 save

 0.216 0 0 0.08 setcmykcolor

 959.36026 520.82303 moveto

 959.36026 545.82599 lineto

 pgfstr

 restore

 save

 0.2187 0 0 0.08101 setcmykcolor

 959.36026 523.3256 moveto

 959.36026 548.32475 lineto

 pgfstr

 restore

 save

 0.2214 0 0 0.082 setcmykcolor

 959.36026 525.82439 moveto

 959.36026 550.82735 lineto

 pgfstr

 restore

 save

 0.2241 0 0 0.08301 setcmykcolor

 959.36026 528.32315 moveto

 959.36026 553.32611 lineto

 pgfstr

 restore

 save

 0.2268 0 0 0.084 setcmykcolor

 959.36026 530.82573 moveto

 959.36026 555.82487 lineto

 pgfstr

 restore

 save

 0.2295 0 0 0.085 setcmykcolor

 959.36026 533.32451 moveto

 959.36026 558.32747 lineto

 pgfstr

 restore

 save

 0.23221 0 0 0.086 setcmykcolor

 959.36026 535.82327 moveto

 959.36026 560.82626 lineto

 pgfstr

 restore

 save

 0.23491 0 0 0.087 setcmykcolor

 959.36026 538.32587 moveto

 959.36026 563.32501 lineto

 pgfstr

 restore

 save

 0.23761 0 0 0.088 setcmykcolor

 959.36026 540.82463 moveto

 959.36026 565.8276 lineto

 pgfstr

 restore

 save

 0.2403 0 0 0.089 setcmykcolor

 959.36026 543.32722 moveto

 959.36026 568.32639 lineto

 pgfstr

 restore

 save

 0.24301 0 0 0.09001 setcmykcolor

 959.36026 545.82599 moveto

 959.36028 570.82516 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 488.14847 421.43471 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a

 -298 18943
a -298 18943 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 0.05 setcmykcolor

 0.0 -8.17525 moveto

 198.48311 -8.17525 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 -5.70844 moveto

 198.48311 -5.70844 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 -3.57115 moveto

 198.48311 -3.57115 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 -1.68631 moveto

 198.48311 -1.68631 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 0.0 moveto

 198.48311 0.0 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 0.0 moveto

 198.48311 0.0 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 11.09303 moveto

 198.48311 11.09303 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 17.58252 moveto

 198.48311 17.58252 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 22.18665 moveto

 198.48311 22.18665 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 25.7578 moveto

 198.48311 25.7578 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 28.67558 moveto

 198.48311 28.67558 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 31.14238 moveto

 198.48311 31.14238 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 33.27968 moveto

 198.48311 33.27968 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 35.1645 moveto

 198.48311 35.1645 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 36.85085 moveto

 198.48311 36.85085 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 36.85085 moveto

 198.48311 36.85085 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 47.94388 moveto

 198.48311 47.94388 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 54.43338 moveto

 198.48311 54.43338 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 59.0375 moveto

 198.48311 59.0375 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 62.60866 moveto

 198.48311 62.60866 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 65.52643 moveto

 198.48311 65.52643 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 67.99324 moveto

 198.48311 67.99324 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 70.13054 moveto

 198.48311 70.13054 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 72.01537 moveto

 198.48311 72.01537 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 73.7017 moveto

 198.48311 73.7017 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 73.7017 moveto

 198.48311 73.7017 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 84.79474 moveto

 198.48311 84.79474 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 91.28424 moveto

 198.48311 91.28424 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 95.88835 moveto

 198.48311 95.88835 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 99.45952 moveto

 198.48311 99.45952 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 102.37729 moveto

 198.48311 102.37729 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 104.8441 moveto

 198.48311 104.8441 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 106.98138 moveto

 198.48311 106.98138 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 108.86623 moveto

 198.48311 108.86623 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 110.55257 moveto

 198.48311 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 0.0 moveto

 198.48311 0.0 lineto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 -12.61955 -3.33252 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Ff(10)-228 18920 y Fe(0)-298
18943 y


 pgfr

 restore

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 0.0 0.0 moveto

 198.48311 0.0 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 0.0 moveto

 2.32986 0.0 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 36.85085 moveto

 198.48311 36.85085 lineto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 -12.61955 33.51831 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Ff(10)-228 18920 y Fe(1)-298 18943
y


 pgfr

 restore

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 0.0 36.85085 moveto

 198.48311 36.85085 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 36.85085 moveto

 2.32986 36.85085 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 73.7017 moveto

 198.48311 73.7017 lineto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 -12.61955 70.36917 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Ff(10)-228 18920 y Fe(2)-298 18943 y


 pgfr

 restore

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 0.0 73.7017 moveto

 198.48311 73.7017 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 73.7017 moveto

 2.32986 73.7017 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 110.55257 moveto

 198.48311 110.55257 lineto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 -12.61955 107.22003 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298
18943 a Ff(10)-228 18920 y Fe(3)-298 18943 y


 pgfr

 restore

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 0.0 110.55257 moveto

 198.48311 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 110.55257 moveto

 2.32986 110.55257 lineto

 pgfstr

 restore

 0.0 -8.47552 moveto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 -2.11603 -13.54453 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943
a Ff(0)-298 18943 y


 pgfr

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 0.0 -8.47552 moveto

 0.0 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 -8.47552 moveto

 0.0 -6.14565 lineto

 pgfstr

 restore

 39.69661 -8.47552 moveto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 35.46452 -13.54453 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Ff(20)-298 18943 y


 pgfr

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 39.69661 -8.47552 moveto

 39.69661 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 39.69661 -8.47552 moveto

 39.69661 -6.14565 lineto

 pgfstr

 restore

 79.39323 -8.47552 moveto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 75.16115 -13.54453 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298
18943 a Ff(40)-298 18943 y


 pgfr

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 79.39323 -8.47552 moveto

 79.39323 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 79.39323 -8.47552 moveto

 79.39323 -6.14565 lineto

 pgfstr

 restore

 119.08986 -8.47552 moveto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 114.85776 -13.54453 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Ff(60)-298 18943
y


 pgfr

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 119.08986 -8.47552 moveto

 119.08986 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 119.08986 -8.47552 moveto

 119.08986 -6.14565 lineto

 pgfstr

 restore

 158.78648 -8.47552 moveto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 154.55438 -13.54453 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Ff(80)-298 18943 y


 pgfr

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 158.78648 -8.47552 moveto

 158.78648 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 158.78648 -8.47552 moveto

 158.78648 -6.14565 lineto

 pgfstr

 restore

 198.48311 -8.47552 moveto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 192.13496 -13.54453 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Ff(100)-298
18943 y


 pgfr

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 198.48311 -8.47552 moveto

 198.48311 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 198.48311 -8.47552 moveto

 198.48311 -6.14565 lineto

 pgfstr

 restore

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 110.55257 moveto

 0.0 -8.47552 lineto

 198.48311 -8.47552 moveto

 198.48311 110.55257 lineto

 pgfstr

 restore

 99.24155 -8.47552 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 35.68442 -24.34018 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Ff(Success)25 b(Rate)f(\(\045,)f(Larger)h(is)f(b)r
(etter\))-298 18943 y


 pgfr

 restore

 restore

 0.0 55.27628 moveto

 pgfstr

 save

 save

 [0.0 1.0 -1.0 0.0 -17.93303 4.61447 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Ff(Run)n(time)h(\(smaller)f(is)g(b)r
(etter\))-298 18943 y


 pgfr

 restore

 restore

 99.24155 110.55257 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 13.25632 112.09866 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Ff(The)h(main)f(algorithms)h
(starting)g(within)f(20\045)h(IED)-298 18943 y


 pgfr

 restore

 restore

 10.44646 0.0 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 15.1062 -1.99255 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943
a Ff(Original)e Fc(ICIA)-298 18943 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 10.24721 -0.19925 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -296 18941 a

 -296
18941 a -296 18941 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{1 1 0 0 setcmykcolor}def

 4.65973 0.0 moveto

 4.65973 2.57352 2.57352 4.65973 0.0 4.65973 curveto

 -2.57352 4.65973 -4.65973 2.57352 -4.65973 0.0 curveto

 -4.65973 -2.57352 -2.57352 -4.65973 0.0 -4.65973 curveto

 2.57352 -4.65973 4.65973 -2.57352 4.65973 0.0 curveto

 closepath

 0.0 0.0 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 -298 18943 a


 pgfr

 restore

 restore

 save

 /pgffc{0 0 0 1 setcmykcolor}def

 10.44646 0.0 moveto

 11.84439 0.0 moveto

 11.84439 0.77205 11.21852 1.39792 10.44646 1.39792 curveto

 9.6744 1.39792 9.04852 0.77205 9.04852 0.0 curveto

 9.04852 -0.77205 9.6744 -1.39792 10.44646 -1.39792 curveto

 11.21852 -1.39792 11.84439 -0.77205 11.84439 0.0 curveto

 closepath

 10.44646 0.0 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 77.29388 32.4829 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 43.29616 29.78697 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Fc(CoLiNe)-298
18943 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 77.09464 32.28365 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -296 18941 a

 -296 18941 a -296 18941 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{1 0 1 0 setcmykcolor}def

 -4.65973 -4.65973 moveto

 -4.65973 -4.65973 moveto

 -4.65973 4.65973 lineto

 4.65973 4.65973 lineto

 4.65973 -4.65973 lineto

 closepath

 4.65973 4.65973 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 -298 18943
a


 pgfr

 restore

 restore

 save

 /pgffc{0 0 0 1 setcmykcolor}def

 77.29388 32.4829 moveto

 78.69182 32.4829 moveto

 78.69182 33.25496 78.06595 33.88083 77.29388 33.88083 curveto

 76.52182 33.88083 75.89597 33.25496 75.89597 32.4829 curveto

 75.89597 31.71083 76.52182 31.08496 77.29388 31.08496 curveto

 78.06595 31.08496 78.69182 31.71083 78.69182 32.4829 curveto

 closepath

 77.29388 32.4829 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 78.34048 9.62093 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 83.00023 6.925 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Fc(LinCoDe)-298 18943 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 78.14124 9.42168 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -296 18941 a

 -296
18941 a -296 18941 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{0 1 1 0 setcmykcolor}def

 -4.03531 -2.32986 moveto

 0.0 4.65973 lineto

 4.03531 -2.32986 lineto

 closepath

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 -298 18943 a


 pgfr

 restore

 restore

 save

 /pgffc{0 0 0 1 setcmykcolor}def

 78.34048 9.62093 moveto

 79.73842 9.62093 moveto

 79.73842 10.39299 79.11255 11.01886 78.34048 11.01886 curveto

 77.56842 11.01886 76.94255 10.39299 76.94255 9.62093 curveto

 76.94255 8.84886 77.56842 8.223 78.34048 8.223 curveto

 79.11255 8.223 79.73842 8.84886 79.73842 9.62093 curveto

 closepath

 78.34048 9.62093 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 112.84724 33.5018 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 117.50699 30.80588 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Fc(CoDe)-298
18943 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 112.648 33.30254 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -296 18941 a

 -296 18941 a -296 18941 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{0 0 1 0 setcmykcolor}def

 4.03531 2.32986 moveto

 0.0 -4.65973 lineto

 -4.03531 2.32986 lineto

 closepath

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 -298 18943
a


 pgfr

 restore

 restore

 save

 /pgffc{0 0 0 1 setcmykcolor}def

 112.84724 33.5018 moveto

 114.24518 33.5018 moveto

 114.24518 34.27385 113.61931 34.89972 112.84724 34.89972 curveto

 112.07518 34.89972 111.44931 34.27385 111.44931 33.5018 curveto

 111.44931 32.72974 112.07518 32.10387 112.84724 32.10387 curveto

 113.61931 32.10387 114.24518 32.72974 114.24518 33.5018 curveto

 closepath

 112.84724 33.5018 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 72.30719 49.98335 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 76.96692 47.28743 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Fc(CoNe)-298 18943 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 72.10793 49.7841 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -296 18941 a

 -296
18941 a -296 18941 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{0 0 0 0.5 setcmykcolor}def

 -2.4712 -4.11865 moveto

 -2.4712 -4.11865 moveto

 -4.11867 -2.47119 lineto

 2.47119 4.11867 lineto

 4.11865 2.4712 lineto

 closepath

 2.47119 4.11867 moveto

 2.4712 -4.11865 moveto

 2.4712 -4.11865 moveto

 -4.11865 2.4712 lineto

 -2.47119 4.11867 lineto

 4.11867 -2.47119 lineto

 closepath

 -2.47119 4.11867 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 -298 18943 a


 pgfr

 restore

 restore

 save

 /pgffc{0 0 0 1 setcmykcolor}def

 72.30719 49.98335 moveto

 73.70511 49.98335 moveto

 73.70511 50.75542 73.07925 51.38129 72.30719 51.38129 curveto

 71.53513 51.38129 70.90926 50.75542 70.90926 49.98335 curveto

 70.90926 49.21129 71.53513 48.58542 72.30719 48.58542 curveto

 73.07925 48.58542 73.70511 49.21129 73.70511 49.98335 curveto

 closepath

 72.30719 49.98335 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 82.75127 96.29883 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 87.41101 94.34415 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -298 18943 a Ff(L-BF)n(GS)i(\(with)g
(reg\))-298 18943 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 82.55202 96.09958 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 -296 18941 a

 -296 18941 a -296 18941
a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{0.25 0.5 0.25 0.5 setcmykcolor}def

 -4.65973 -1.16492 moveto

 -4.65973 -1.16492 moveto

 -4.65973 1.16493 lineto

 4.65973 1.16493 lineto

 4.65973 -1.16492 lineto

 closepath

 4.65973 1.16493 moveto

 -1.16492 -4.65973 moveto

 -1.16492 -4.65973 moveto

 -1.16492 4.65973 lineto

 1.16493 4.65973 lineto

 1.16493 -4.65973 lineto

 closepath

 1.16493 4.65973 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 -298 18943 a


 pgfr

 restore

 restore

 save

 /pgffc{0 0 0 1 setcmykcolor}def

 82.75127 96.29883 moveto

 84.14919 96.29883 moveto

 84.14919 97.07089 83.52333 97.69675 82.75127 97.69675 curveto

 81.9792 97.69675 81.35333 97.07089 81.35333 96.29883 curveto

 81.35333 95.52676 81.9792 94.9009 82.75127 94.9009 curveto

 83.52333 94.9009 84.14919 95.52676 84.14919 96.29883 curveto

 closepath

 82.75127 96.29883 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 1626 18943 a

 1626 18943 a 1626 18943 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 0.05 setcmykcolor

 0.0 -8.17525 moveto

 198.48311 -8.17525 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 -5.70844 moveto

 198.48311 -5.70844 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 -3.57115 moveto

 198.48311 -3.57115 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 -1.68631 moveto

 198.48311 -1.68631 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 0.0 moveto

 198.48311 0.0 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 0.0 moveto

 198.48311 0.0 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 11.09303 moveto

 198.48311 11.09303 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 17.58252 moveto

 198.48311 17.58252 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 22.18665 moveto

 198.48311 22.18665 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 25.7578 moveto

 198.48311 25.7578 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 28.67558 moveto

 198.48311 28.67558 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 31.14238 moveto

 198.48311 31.14238 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 33.27968 moveto

 198.48311 33.27968 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 35.1645 moveto

 198.48311 35.1645 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 36.85085 moveto

 198.48311 36.85085 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 36.85085 moveto

 198.48311 36.85085 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 47.94388 moveto

 198.48311 47.94388 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 54.43338 moveto

 198.48311 54.43338 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 59.0375 moveto

 198.48311 59.0375 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 62.60866 moveto

 198.48311 62.60866 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 65.52643 moveto

 198.48311 65.52643 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 67.99324 moveto

 198.48311 67.99324 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 70.13054 moveto

 198.48311 70.13054 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 72.01537 moveto

 198.48311 72.01537 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 73.7017 moveto

 198.48311 73.7017 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 73.7017 moveto

 198.48311 73.7017 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 84.79474 moveto

 198.48311 84.79474 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 91.28424 moveto

 198.48311 91.28424 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 95.88835 moveto

 198.48311 95.88835 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 99.45952 moveto

 198.48311 99.45952 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 102.37729 moveto

 198.48311 102.37729 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 104.8441 moveto

 198.48311 104.8441 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 106.98138 moveto

 198.48311 106.98138 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 108.86623 moveto

 198.48311 108.86623 lineto

 pgfstr

 restore

 save

 0 0 0 0.05 setcmykcolor

 0.0 110.55257 moveto

 198.48311 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 0.0 moveto

 198.48311 0.0 lineto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 -12.61955 -3.33252 ] concat

 pgfs



 0 0 0 1 setcmykcolor

1626 18943 a Ff(10)1696 18920 y Fe(0)1626 18943 y


 pgfr

 restore

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 0.0 0.0 moveto

 198.48311 0.0 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 0.0 moveto

 2.32986 0.0 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 36.85085 moveto

 198.48311 36.85085 lineto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 -12.61955 33.51831 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626
18943 a Ff(10)1696 18920 y Fe(1)1626 18943 y


 pgfr

 restore

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 0.0 36.85085 moveto

 198.48311 36.85085 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 36.85085 moveto

 2.32986 36.85085 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 73.7017 moveto

 198.48311 73.7017 lineto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 -12.61955 70.36917 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943
a Ff(10)1696 18920 y Fe(2)1626 18943 y


 pgfr

 restore

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 0.0 73.7017 moveto

 198.48311 73.7017 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 73.7017 moveto

 2.32986 73.7017 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 110.55257 moveto

 198.48311 110.55257 lineto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 -12.61955 107.22003 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943 a Ff(10)1696
18920 y Fe(3)1626 18943 y


 pgfr

 restore

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 0.0 110.55257 moveto

 198.48311 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 110.55257 moveto

 2.32986 110.55257 lineto

 pgfstr

 restore

 0.0 -8.47552 moveto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 -2.11603 -13.54453 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943 a Ff(0)1626 18943
y


 pgfr

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 0.0 -8.47552 moveto

 0.0 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 -8.47552 moveto

 0.0 -6.14565 lineto

 pgfstr

 restore

 39.69661 -8.47552 moveto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 35.46452 -13.54453 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943 a Ff(20)1626 18943 y


 pgfr

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 39.69661 -8.47552 moveto

 39.69661 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 39.69661 -8.47552 moveto

 39.69661 -6.14565 lineto

 pgfstr

 restore

 79.39323 -8.47552 moveto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 75.16115 -13.54453 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943 a Ff(40)1626
18943 y


 pgfr

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 79.39323 -8.47552 moveto

 79.39323 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 79.39323 -8.47552 moveto

 79.39323 -6.14565 lineto

 pgfstr

 restore

 119.08986 -8.47552 moveto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 114.85776 -13.54453 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943 a Ff(60)1626 18943 y


 pgfr

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 119.08986 -8.47552 moveto

 119.08986 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 119.08986 -8.47552 moveto

 119.08986 -6.14565 lineto

 pgfstr

 restore

 158.78648 -8.47552 moveto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 154.55438 -13.54453 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943 a
Ff(80)1626 18943 y


 pgfr

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 158.78648 -8.47552 moveto

 158.78648 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 158.78648 -8.47552 moveto

 158.78648 -6.14565 lineto

 pgfstr

 restore

 198.48311 -8.47552 moveto

 pgfstr

 save

 0 0 0 1 setcmykcolor

 save

 0 0 0 1 setcmykcolor

 restore

 save

 [1.0 0.0 0.0 1.0 192.13496 -13.54453 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943 a Ff(100)1626 18943 y


 pgfr

 restore

 restore

 save

 0 0 0 0.25 setcmykcolor

 198.48311 -8.47552 moveto

 198.48311 110.55257 lineto

 pgfstr

 restore

 save

 0 0 0 1 setcmykcolor

 198.48311 -8.47552 moveto

 198.48311 -6.14565 lineto

 pgfstr

 restore

 restore

 save

 0 0 0 1 setcmykcolor

 0.0 110.55257 moveto

 0.0 -8.47552 lineto

 198.48311 -8.47552 moveto

 198.48311 110.55257 lineto

 pgfstr

 restore

 99.24155 -8.47552 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 35.68442 -24.34018 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626
18943 a Ff(Success)h(Rate)f(\(\045,)f(Larger)h(is)f(b)r(etter\))1626
18943 y


 pgfr

 restore

 restore

 0.0 55.27628 moveto

 pgfstr

 save

 save

 [0.0 1.0 -1.0 0.0 -17.93303 4.61447 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943 a Ff(Run)n(time)h(\(smaller)f(is)g(b)r(etter\))1626
18943 y


 pgfr

 restore

 restore

 99.24155 110.55257 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -17.31604 112.09866 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1895 18943 a Ff(All)g(algorithms)g(with)g Fd(V)2577
18920 y Fe(norm)2743 18943 y Ff(and)h(regularisation)1626
18943 y


 pgfr

 restore

 restore

 52.53874 22.75456 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 24.98668 28.2431 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943 a Fc(ICIA)g Ff(+)g Fd(V)1943 18920
y Fe(norm)1626 18943 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 52.3395 22.5553 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1628 18941 a

 1628 18941 a 1628
18941 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{0.5 0.5 0 0.5 setcmykcolor}def

 4.65973 0.0 moveto

 4.65973 2.57352 2.57352 4.65973 0.0 4.65973 curveto

 -2.57352 4.65973 -4.65973 2.57352 -4.65973 0.0 curveto

 -4.65973 -2.57352 -2.57352 -4.65973 0.0 -4.65973 curveto

 2.57352 -4.65973 4.65973 -2.57352 4.65973 0.0 curveto

 closepath

 0.0 0.0 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 1626 18943 a


 pgfr

 restore

 restore

 save

 /pgffc{0 0 0 1 setcmykcolor}def

 52.53874 22.75456 moveto

 53.93668 22.75456 moveto

 53.93668 23.52663 53.3108 24.15248 52.53874 24.15248 curveto

 51.76668 24.15248 51.14082 23.52663 51.14082 22.75456 curveto

 51.14082 21.9825 51.76668 21.35663 52.53874 21.35663 curveto

 53.3108 21.35663 53.93668 21.9825 53.93668 22.75456 curveto

 closepath

 52.53874 22.75456 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 103.47606 39.73038 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 88.80707 44.39012 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943 a Fc(CoLiNe)1626 18943
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 103.27681 39.53113 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1628 18941 a

 1628 18941 a 1628 18941 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{0.5 0 0.5 0.5 setcmykcolor}def

 -4.65973 -4.65973 moveto

 -4.65973 -4.65973 moveto

 -4.65973 4.65973 lineto

 4.65973 4.65973 lineto

 4.65973 -4.65973 lineto

 closepath

 4.65973 4.65973 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 1626 18943 a


 pgfr

 restore

 restore

 save

 /pgffc{0 0 0 1 setcmykcolor}def

 103.47606 39.73038 moveto

 104.874 39.73038 moveto

 104.874 40.50244 104.24812 41.12831 103.47606 41.12831 curveto

 102.704 41.12831 102.07813 40.50244 102.07813 39.73038 curveto

 102.07813 38.95831 102.704 38.33244 103.47606 38.33244 curveto

 104.24812 38.33244 104.874 38.95831 104.874 39.73038 curveto

 closepath

 103.47606 39.73038 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 111.02118 20.3226 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 115.68092 17.6267 ] concat

 pgfs



 0 0 0 1 setcmykcolor

1626 18943 a Fc(LinCoDe)1626 18943 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 110.82193 20.12335 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1628 18941 a

 1628
18941 a 1628 18941 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{0 0.5 0.5 0.5 setcmykcolor}def

 -4.03531 -2.32986 moveto

 0.0 4.65973 lineto

 4.03531 -2.32986 lineto

 closepath

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 1626 18943 a


 pgfr

 restore

 restore

 save

 /pgffc{0 0 0 1 setcmykcolor}def

 111.02118 20.3226 moveto

 112.41911 20.3226 moveto

 112.41911 21.09467 111.79324 21.72054 111.02118 21.72054 curveto

 110.24911 21.72054 109.62325 21.09467 109.62325 20.3226 curveto

 109.62325 19.55054 110.24911 18.92468 111.02118 18.92468 curveto

 111.79324 18.92468 112.41911 19.55054 112.41911 20.3226 curveto

 closepath

 111.02118 20.3226 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 131.06967 41.1187 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 135.72942 38.42278 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943 a Fc(CoDe)1626
18943 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 130.87042 40.91945 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1628 18941 a

 1628 18941 a 1628 18941 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{0 0 0.5 0.5 setcmykcolor}def

 4.03531 2.32986 moveto

 0.0 -4.65973 lineto

 -4.03531 2.32986 lineto

 closepath

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 1626 18943
a


 pgfr

 restore

 restore

 save

 /pgffc{0 0 0 1 setcmykcolor}def

 131.06967 41.1187 moveto

 132.4676 41.1187 moveto

 132.4676 41.89076 131.84174 42.51663 131.06967 42.51663 curveto

 130.2976 42.51663 129.67174 41.89076 129.67174 41.1187 curveto

 129.67174 40.34663 130.2976 39.72076 131.06967 39.72076 curveto

 131.84174 39.72076 132.4676 40.34663 132.4676 41.1187 curveto

 closepath

 131.06967 41.1187 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 132.88666 67.29262 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 137.5464 64.5967 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943 a Fc(CoNe)1626 18943 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 132.68741 67.09337 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1628 18941 a

 1628
18941 a 1628 18941 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{0 0 0 0.75 setcmykcolor}def

 -2.4712 -4.11865 moveto

 -2.4712 -4.11865 moveto

 -4.11867 -2.47119 lineto

 2.47119 4.11867 lineto

 4.11865 2.4712 lineto

 closepath

 2.47119 4.11867 moveto

 2.4712 -4.11865 moveto

 2.4712 -4.11865 moveto

 -4.11865 2.4712 lineto

 -2.47119 4.11867 lineto

 4.11867 -2.47119 lineto

 closepath

 -2.47119 4.11867 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 1626 18943 a


 pgfr

 restore

 restore

 save

 /pgffc{0 0 0 1 setcmykcolor}def

 132.88666 67.29262 moveto

 134.28459 67.29262 moveto

 134.28459 68.06468 133.65872 68.69054 132.88666 68.69054 curveto

 132.1146 68.69054 131.48872 68.06468 131.48872 67.29262 curveto

 131.48872 66.52055 132.1146 65.89468 132.88666 65.89468 curveto

 133.65872 65.89468 134.28459 66.52055 134.28459 67.29262 curveto

 closepath

 132.88666 67.29262 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 82.75127 96.29883 moveto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 87.41101 93.6029 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1626 18943 a Ff(L-BF)n(GS)1626
18943 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 82.55202 96.09958 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1628 18941 a

 1628 18941 a 1628 18941 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{0.25 0.5 0.25 0.5 setcmykcolor}def

 -4.65973 -1.16492 moveto

 -4.65973 -1.16492 moveto

 -4.65973 1.16493 lineto

 4.65973 1.16493 lineto

 4.65973 -1.16492 lineto

 closepath

 4.65973 1.16493 moveto

 -1.16492 -4.65973 moveto

 -1.16492 -4.65973 moveto

 -1.16492 4.65973 lineto

 1.16493 4.65973 lineto

 1.16493 -4.65973 lineto

 closepath

 1.16493 4.65973 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 1626 18943
a


 pgfr

 restore

 restore

 save

 /pgffc{0 0 0 1 setcmykcolor}def

 82.75127 96.29883 moveto

 84.14919 96.29883 moveto

 84.14919 97.07089 83.52333 97.69675 82.75127 97.69675 curveto

 81.9792 97.69675 81.35333 97.07089 81.35333 96.29883 curveto

 81.35333 95.52676 81.9792 94.9009 82.75127 94.9009 curveto

 83.52333 94.9009 84.14919 95.52676 84.14919 96.29883 curveto

 closepath

 82.75127 96.29883 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 restore

 newpath

 restore

 pgfc


 -497 19362 a Fb(Fitting)43 b(a)g(m)m(ultip)s(erson)e(AAM.)80
b Fh(The)38 b(b)r(est)g(sp)r(eed{)-497 19462 y(p)r(erformance)33
b(tradeo\013s)g(come)h(from)f(the)h(t)n(w)n(o)g(new)g(algo-)-497
19561 y(rithms)28 b Fa(CoDe)34 b Fh(and)27 b Fa(LinCoDe)6
b Fh(.)38 b(Note)27 b(that)h Fa(ICIA)f Fh(is)g(prac-)-497
19661 y(tically)38 b(useless)g(on)g(this)h(di\016cult)g(m)n(ulti-p)r
(erson)e(dataset)-497 19760 y(with)53 b(a)f(success)g(rate)f(near)h
(zero)f(\(left\).)112 b(It)53 b(can)f(b)r(e)-497 19860
y(impro)n(v)n(ed)d(\(righ)n(t\))g(b)n(y)h(using)f(the)h(orthonormal)d
(incre-)-497 19960 y(men)n(tal)e(w)n(arp)e(and)i(regularisation.)85
b(The)44 b Fa(CoDe)52 b Fh(algo-)p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 1475 19362 a(rithm)44 b(with)h(regularisation)c
(\(righ)n(t\))i(is)h(as)g(accurate)e(as)1475 19462 y(the)e(slo)n(w,)i
(appro)n(ximation-free,)e(comp)r(ositional)f(Gauss-)1475
19561 y(Newton)34 b Fa(CoNe)41 b Fh(metho)r(d)34 b(but)g(is)f(sev)n(en)
g(times)h(more)f(e\016-)1475 19661 y(cien)n(t.)1475 19760
y(The)23 b(exp)r(erimen)n(ts)e(w)n(ere)h(p)r(erformed)g(with)h(lea)n(v)
n(e)e(one)h(iden-)1475 19860 y(tit)n(y)f(out)g(on)g(a)g(mixture)g(of)g
(t)n(w)n(o)f(databases)f(\(XM2VTS)j(and)1475 19960 y(IMM\).)-497
19163 y


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 1.99255 pgfw

 save

 /pgfsc{}def/pgffc{}def

 0.27 0 0 0.1 setcmykcolor

 /pgffc{0.18 0 0 0.1 setcmykcolor}def

 0.0 36.42018 moveto

 0.0 56.34572 lineto

 224.64687 56.34572 lineto

 230.14922 56.34572 234.60963 51.8853 234.60963 46.38295 curveto

 234.60963 36.42018 lineto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 3.98505 41.54109 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 0 0 0 1 TeXcolorcmyk -497 19163 a Fk(References)p
0 0 0 1 TeXcolorcmyk -497 19163 a


 pgfr

 restore

 restore

 save

 /pgffc{0 1 0 0 setcmykcolor}def

 0.0 36.42018 moveto

 0.0 0.0 lineto

 234.60963 36.42018 moveto

 234.60963 0.0 lineto

 gsave pgffc pgffill grestore newpath

 restore

 save

 0 0 0 0 setcmykcolor

 0.0 0.0 moveto

 0.0 3.64221 lineto

 pgfstr

 restore

 save

 0.0027 0 0 0.001 setcmykcolor

 0.0 0.36453 moveto

 0.0 4.00623 lineto

 pgfstr

 restore

 save

 0.0054 0 0 0.002 setcmykcolor

 0.0 0.72855 moveto

 0.0 4.37079 lineto

 pgfstr

 restore

 save

 0.0081 0 0 0.003 setcmykcolor

 0.0 1.09311 moveto

 0.0 4.73479 lineto

 pgfstr

 restore

 save

 0.0108 0 0 0.004 setcmykcolor

 0.0 1.4571 moveto

 0.0 5.09935 lineto

 pgfstr

 restore

 save

 0.0135 0 0 0.005 setcmykcolor

 0.0 1.82109 moveto

 0.0 5.46333 lineto

 pgfstr

 restore

 save

 0.0162 0 0 0.006 setcmykcolor

 0.0 2.18565 moveto

 0.0 5.82735 lineto

 pgfstr

 restore

 save

 0.0189 0 0 0.007 setcmykcolor

 0.0 2.54967 moveto

 0.0 6.19191 lineto

 pgfstr

 restore

 save

 0.0216 0 0 0.008 setcmykcolor

 0.0 2.91367 moveto

 0.0 6.55591 lineto

 pgfstr

 restore

 save

 0.0243 0 0 0.009 setcmykcolor

 0.0 3.27823 moveto

 0.0 6.9199 lineto

 pgfstr

 restore

 save

 0.027 0 0 0.01 setcmykcolor

 0.0 3.64221 moveto

 0.0 7.28445 lineto

 pgfstr

 restore

 save

 0.0297 0 0 0.011 setcmykcolor

 0.0 4.00623 moveto

 0.0 7.64847 lineto

 pgfstr

 restore

 save

 0.0324 0 0 0.012 setcmykcolor

 0.0 4.37079 moveto

 0.0 8.01247 lineto

 pgfstr

 restore

 save

 0.0351 0 0 0.013 setcmykcolor

 0.0 4.73479 moveto

 0.0 8.37703 lineto

 pgfstr

 restore

 save

 0.0378 0 0 0.014 setcmykcolor

 0.0 5.09935 moveto

 0.0 8.74103 lineto

 pgfstr

 restore

 save

 0.0405 0 0 0.015 setcmykcolor

 0.0 5.46333 moveto

 0.0 9.10504 lineto

 pgfstr

 restore

 save

 0.0432 0 0 0.016 setcmykcolor

 0.0 5.82735 moveto

 0.0 9.46959 lineto

 pgfstr

 restore

 save

 0.0459 0 0 0.017 setcmykcolor

 0.0 6.19191 moveto

 0.0 9.83359 lineto

 pgfstr

 restore

 save

 0.0486 0 0 0.018 setcmykcolor

 0.0 6.55591 moveto

 0.0 10.19815 lineto

 pgfstr

 restore

 save

 0.0513 0 0 0.019 setcmykcolor

 0.0 6.9199 moveto

 0.0 10.56215 lineto

 pgfstr

 restore

 save

 0.054 0 0 0.02 setcmykcolor

 0.0 7.28445 moveto

 0.0 10.92616 lineto

 pgfstr

 restore

 save

 0.0567 0 0 0.021 setcmykcolor

 0.0 7.64847 moveto

 0.0 11.29071 lineto

 pgfstr

 restore

 save

 0.0594 0 0 0.022 setcmykcolor

 0.0 8.01247 moveto

 0.0 11.65471 lineto

 pgfstr

 restore

 save

 0.0621 0 0 0.023 setcmykcolor

 0.0 8.37703 moveto

 0.0 12.0187 lineto

 pgfstr

 restore

 save

 0.0648 0 0 0.024 setcmykcolor

 0.0 8.74103 moveto

 0.0 12.38327 lineto

 pgfstr

 restore

 save

 0.0675 0 0 0.02501 setcmykcolor

 0.0 9.10504 moveto

 0.0 12.74728 lineto

 pgfstr

 restore

 save

 0.0702 0 0 0.026 setcmykcolor

 0.0 9.46959 moveto

 0.0 13.11127 lineto

 pgfstr

 restore

 save

 0.0729 0 0 0.02701 setcmykcolor

 0.0 9.83359 moveto

 0.0 13.47583 lineto

 pgfstr

 restore

 save

 0.0756 0 0 0.028 setcmykcolor

 0.0 10.19815 moveto

 0.0 13.83983 lineto

 pgfstr

 restore

 save

 0.0783 0 0 0.029 setcmykcolor

 0.0 10.56215 moveto

 0.0 14.20439 lineto

 pgfstr

 restore

 save

 0.081 0 0 0.03 setcmykcolor

 0.0 10.92616 moveto

 0.0 14.5684 lineto

 pgfstr

 restore

 save

 0.0837 0 0 0.031 setcmykcolor

 0.0 11.29071 moveto

 0.0 14.93239 lineto

 pgfstr

 restore

 save

 0.0864 0 0 0.032 setcmykcolor

 0.0 11.65471 moveto

 0.0 15.29695 lineto

 pgfstr

 restore

 save

 0.0891 0 0 0.033 setcmykcolor

 0.0 12.0187 moveto

 0.0 15.66095 lineto

 pgfstr

 restore

 save

 0.0918 0 0 0.034 setcmykcolor

 0.0 12.38327 moveto

 0.0 16.02496 lineto

 pgfstr

 restore

 save

 0.0945 0 0 0.035 setcmykcolor

 0.0 12.74728 moveto

 0.0 16.38953 lineto

 pgfstr

 restore

 save

 0.0972 0 0 0.036 setcmykcolor

 0.0 13.11127 moveto

 0.0 16.75351 lineto

 pgfstr

 restore

 save

 0.0999 0 0 0.037 setcmykcolor

 0.0 13.47583 moveto

 0.0 17.11751 lineto

 pgfstr

 restore

 save

 0.1026 0 0 0.038 setcmykcolor

 0.0 13.83983 moveto

 0.0 17.48207 lineto

 pgfstr

 restore

 save

 0.1053 0 0 0.039 setcmykcolor

 0.0 14.20439 moveto

 0.0 17.84608 lineto

 pgfstr

 restore

 save

 0.108 0 0 0.04001 setcmykcolor

 0.0 14.5684 moveto

 0.0 18.21008 lineto

 pgfstr

 restore

 save

 0.1107 0 0 0.041 setcmykcolor

 0.0 14.93239 moveto

 0.0 18.57463 lineto

 pgfstr

 restore

 save

 0.1134 0 0 0.042 setcmykcolor

 0.0 15.29695 moveto

 0.0 18.93863 lineto

 pgfstr

 restore

 save

 0.1161 0 0 0.043 setcmykcolor

 0.0 15.66095 moveto

 0.0 19.30319 lineto

 pgfstr

 restore

 save

 0.1188 0 0 0.044 setcmykcolor

 0.0 16.02496 moveto

 0.0 19.6672 lineto

 pgfstr

 restore

 save

 0.1215 0 0 0.045 setcmykcolor

 0.0 16.38953 moveto

 0.0 20.0312 lineto

 pgfstr

 restore

 save

 0.1242 0 0 0.046 setcmykcolor

 0.0 16.75351 moveto

 0.0 20.39575 lineto

 pgfstr

 restore

 save

 0.1269 0 0 0.047 setcmykcolor

 0.0 17.11751 moveto

 0.0 20.75975 lineto

 pgfstr

 restore

 save

 0.12961 0 0 0.048 setcmykcolor

 0.0 17.48207 moveto

 0.0 21.12376 lineto

 pgfstr

 restore

 save

 0.13231 0 0 0.04901 setcmykcolor

 0.0 17.84608 moveto

 0.0 21.48833 lineto

 pgfstr

 restore

 save

 0.135 0 0 0.05 setcmykcolor

 0.0 18.21008 moveto

 0.0 21.85233 lineto

 pgfstr

 restore

 save

 0.13771 0 0 0.05101 setcmykcolor

 0.0 18.57463 moveto

 0.0 22.21631 lineto

 pgfstr

 restore

 save

 0.1404 0 0 0.052 setcmykcolor

 0.0 18.93863 moveto

 0.0 22.58087 lineto

 pgfstr

 restore

 save

 0.1431 0 0 0.05301 setcmykcolor

 0.0 19.30319 moveto

 0.0 22.94489 lineto

 pgfstr

 restore

 save

 0.1458 0 0 0.054 setcmykcolor

 0.0 19.6672 moveto

 0.0 23.30945 lineto

 pgfstr

 restore

 save

 0.1485 0 0 0.05501 setcmykcolor

 0.0 20.0312 moveto

 0.0 23.67345 lineto

 pgfstr

 restore

 save

 0.1512 0 0 0.056 setcmykcolor

 0.0 20.39575 moveto

 0.0 24.03743 lineto

 pgfstr

 restore

 save

 0.1539 0 0 0.057 setcmykcolor

 0.0 20.75975 moveto

 0.0 24.402 lineto

 pgfstr

 restore

 save

 0.1566 0 0 0.058 setcmykcolor

 0.0 21.12376 moveto

 0.0 24.766 lineto

 pgfstr

 restore

 save

 0.1593 0 0 0.059 setcmykcolor

 0.0 21.48833 moveto

 0.0 25.13 lineto

 pgfstr

 restore

 save

 0.162 0 0 0.06 setcmykcolor

 0.0 21.85233 moveto

 0.0 25.49457 lineto

 pgfstr

 restore

 save

 0.1647 0 0 0.061 setcmykcolor

 0.0 22.21631 moveto

 0.0 25.85855 lineto

 pgfstr

 restore

 save

 0.1674 0 0 0.062 setcmykcolor

 0.0 22.58087 moveto

 0.0 26.22256 lineto

 pgfstr

 restore

 save

 0.1701 0 0 0.063 setcmykcolor

 0.0 22.94489 moveto

 0.0 26.58713 lineto

 pgfstr

 restore

 save

 0.1728 0 0 0.06401 setcmykcolor

 0.0 23.30945 moveto

 0.0 26.95113 lineto

 pgfstr

 restore

 save

 0.1755 0 0 0.065 setcmykcolor

 0.0 23.67345 moveto

 0.0 27.31512 lineto

 pgfstr

 restore

 save

 0.1782 0 0 0.06601 setcmykcolor

 0.0 24.03743 moveto

 0.0 27.67967 lineto

 pgfstr

 restore

 save

 0.18091 0 0 0.067 setcmykcolor

 0.0 24.402 moveto

 0.0 28.04369 lineto

 pgfstr

 restore

 save

 0.18361 0 0 0.06801 setcmykcolor

 0.0 24.766 moveto

 0.0 28.40823 lineto

 pgfstr

 restore

 save

 0.18631 0 0 0.069 setcmykcolor

 0.0 25.13 moveto

 0.0 28.77225 lineto

 pgfstr

 restore

 save

 0.18901 0 0 0.07 setcmykcolor

 0.0 25.49457 moveto

 0.0 29.13625 lineto

 pgfstr

 restore

 save

 0.1917 0 0 0.071 setcmykcolor

 0.0 25.85855 moveto

 0.0 29.5008 lineto

 pgfstr

 restore

 save

 0.1944 0 0 0.072 setcmykcolor

 0.0 26.22256 moveto

 0.0 29.8648 lineto

 pgfstr

 restore

 save

 0.1971 0 0 0.073 setcmykcolor

 0.0 26.58713 moveto

 0.0 30.2288 lineto

 pgfstr

 restore

 save

 0.1998 0 0 0.074 setcmykcolor

 0.0 26.95113 moveto

 0.0 30.59337 lineto

 pgfstr

 restore

 save

 0.2025 0 0 0.07501 setcmykcolor

 0.0 27.31512 moveto

 0.0 30.95737 lineto

 pgfstr

 restore

 save

 0.2052 0 0 0.076 setcmykcolor

 0.0 27.67967 moveto

 0.0 31.32138 lineto

 pgfstr

 restore

 save

 0.2079 0 0 0.07701 setcmykcolor

 0.0 28.04369 moveto

 0.0 31.68591 lineto

 pgfstr

 restore

 save

 0.2106 0 0 0.078 setcmykcolor

 0.0 28.40823 moveto

 0.0 32.04993 lineto

 pgfstr

 restore

 save

 0.2133 0 0 0.07901 setcmykcolor

 0.0 28.77225 moveto

 0.0 32.41449 lineto

 pgfstr

 restore

 save

 0.216 0 0 0.08 setcmykcolor

 0.0 29.13625 moveto

 0.0 32.77849 lineto

 pgfstr

 restore

 save

 0.2187 0 0 0.08101 setcmykcolor

 0.0 29.5008 moveto

 0.0 33.1425 lineto

 pgfstr

 restore

 save

 0.2214 0 0 0.082 setcmykcolor

 0.0 29.8648 moveto

 0.0 33.50703 lineto

 pgfstr

 restore

 save

 0.2241 0 0 0.08301 setcmykcolor

 0.0 30.2288 moveto

 0.0 33.87105 lineto

 pgfstr

 restore

 save

 0.2268 0 0 0.084 setcmykcolor

 0.0 30.59337 moveto

 0.0 34.23505 lineto

 pgfstr

 restore

 save

 0.2295 0 0 0.085 setcmykcolor

 0.0 30.95737 moveto

 0.0 34.59961 lineto

 pgfstr

 restore

 save

 0.23221 0 0 0.086 setcmykcolor

 0.0 31.32138 moveto

 0.0 34.9636 lineto

 pgfstr

 restore

 save

 0.23491 0 0 0.087 setcmykcolor

 0.0 31.68591 moveto

 0.0 35.3276 lineto

 pgfstr

 restore

 save

 0.23761 0 0 0.088 setcmykcolor

 0.0 32.04993 moveto

 0.0 35.69217 lineto

 pgfstr

 restore

 save

 0.2403 0 0 0.089 setcmykcolor

 0.0 32.41449 moveto

 0.0 36.05617 lineto

 pgfstr

 restore

 save

 0.24301 0 0 0.09001 setcmykcolor

 0.0 32.77849 moveto

 0.0 36.42018 lineto

 pgfstr

 restore

 save

 0 0 0 0 setcmykcolor

 234.60963 0.0 moveto

 234.60962 3.64221 lineto

 pgfstr

 restore

 save

 0.0027 0 0 0.001 setcmykcolor

 234.60962 0.36453 moveto

 234.60962 4.00623 lineto

 pgfstr

 restore

 save

 0.0054 0 0 0.002 setcmykcolor

 234.60962 0.72855 moveto

 234.60962 4.37079 lineto

 pgfstr

 restore

 save

 0.0081 0 0 0.003 setcmykcolor

 234.60962 1.09311 moveto

 234.60962 4.73479 lineto

 pgfstr

 restore

 save

 0.0108 0 0 0.004 setcmykcolor

 234.60962 1.4571 moveto

 234.60962 5.09935 lineto

 pgfstr

 restore

 save

 0.0135 0 0 0.005 setcmykcolor

 234.60962 1.82109 moveto

 234.60962 5.46333 lineto

 pgfstr

 restore

 save

 0.0162 0 0 0.006 setcmykcolor

 234.60962 2.18565 moveto

 234.60962 5.82735 lineto

 pgfstr

 restore

 save

 0.0189 0 0 0.007 setcmykcolor

 234.60962 2.54967 moveto

 234.60962 6.19191 lineto

 pgfstr

 restore

 save

 0.0216 0 0 0.008 setcmykcolor

 234.60962 2.91367 moveto

 234.60962 6.55591 lineto

 pgfstr

 restore

 save

 0.0243 0 0 0.009 setcmykcolor

 234.60962 3.27823 moveto

 234.60962 6.9199 lineto

 pgfstr

 restore

 save

 0.027 0 0 0.01 setcmykcolor

 234.60962 3.64221 moveto

 234.60962 7.28445 lineto

 pgfstr

 restore

 save

 0.0297 0 0 0.011 setcmykcolor

 234.60962 4.00623 moveto

 234.60962 7.64847 lineto

 pgfstr

 restore

 save

 0.0324 0 0 0.012 setcmykcolor

 234.60962 4.37079 moveto

 234.60962 8.01247 lineto

 pgfstr

 restore

 save

 0.0351 0 0 0.013 setcmykcolor

 234.60962 4.73479 moveto

 234.60962 8.37703 lineto

 pgfstr

 restore

 save

 0.0378 0 0 0.014 setcmykcolor

 234.60962 5.09935 moveto

 234.60962 8.74103 lineto

 pgfstr

 restore

 save

 0.0405 0 0 0.015 setcmykcolor

 234.60962 5.46333 moveto

 234.60963 9.10504 lineto

 pgfstr

 restore

 save

 0.0432 0 0 0.016 setcmykcolor

 234.60962 5.82735 moveto

 234.60962 9.46959 lineto

 pgfstr

 restore

 save

 0.0459 0 0 0.017 setcmykcolor

 234.60962 6.19191 moveto

 234.60962 9.83359 lineto

 pgfstr

 restore

 save

 0.0486 0 0 0.018 setcmykcolor

 234.60962 6.55591 moveto

 234.60962 10.19815 lineto

 pgfstr

 restore

 save

 0.0513 0 0 0.019 setcmykcolor

 234.60962 6.9199 moveto

 234.60962 10.56215 lineto

 pgfstr

 restore

 save

 0.054 0 0 0.02 setcmykcolor

 234.60962 7.28445 moveto

 234.60962 10.92616 lineto

 pgfstr

 restore

 save

 0.0567 0 0 0.021 setcmykcolor

 234.60962 7.64847 moveto

 234.60962 11.29071 lineto

 pgfstr

 restore

 save

 0.0594 0 0 0.022 setcmykcolor

 234.60962 8.01247 moveto

 234.60962 11.65471 lineto

 pgfstr

 restore

 save

 0.0621 0 0 0.023 setcmykcolor

 234.60962 8.37703 moveto

 234.60962 12.0187 lineto

 pgfstr

 restore

 save

 0.0648 0 0 0.024 setcmykcolor

 234.60962 8.74103 moveto

 234.60962 12.38327 lineto

 pgfstr

 restore

 save

 0.0675 0 0 0.02501 setcmykcolor

 234.60963 9.10504 moveto

 234.60962 12.74728 lineto

 pgfstr

 restore

 save

 0.0702 0 0 0.026 setcmykcolor

 234.60962 9.46959 moveto

 234.60962 13.11127 lineto

 pgfstr

 restore

 save

 0.0729 0 0 0.02701 setcmykcolor

 234.60962 9.83359 moveto

 234.60962 13.47583 lineto

 pgfstr

 restore

 save

 0.0756 0 0 0.028 setcmykcolor

 234.60962 10.19815 moveto

 234.60962 13.83983 lineto

 pgfstr

 restore

 save

 0.0783 0 0 0.029 setcmykcolor

 234.60962 10.56215 moveto

 234.60962 14.20439 lineto

 pgfstr

 restore

 save

 0.081 0 0 0.03 setcmykcolor

 234.60962 10.92616 moveto

 234.60962 14.5684 lineto

 pgfstr

 restore

 save

 0.0837 0 0 0.031 setcmykcolor

 234.60962 11.29071 moveto

 234.60962 14.93239 lineto

 pgfstr

 restore

 save

 0.0864 0 0 0.032 setcmykcolor

 234.60962 11.65471 moveto

 234.60962 15.29695 lineto

 pgfstr

 restore

 save

 0.0891 0 0 0.033 setcmykcolor

 234.60962 12.0187 moveto

 234.60962 15.66095 lineto

 pgfstr

 restore

 save

 0.0918 0 0 0.034 setcmykcolor

 234.60962 12.38327 moveto

 234.60962 16.02496 lineto

 pgfstr

 restore

 save

 0.0945 0 0 0.035 setcmykcolor

 234.60962 12.74728 moveto

 234.60962 16.38953 lineto

 pgfstr

 restore

 save

 0.0972 0 0 0.036 setcmykcolor

 234.60962 13.11127 moveto

 234.60962 16.75351 lineto

 pgfstr

 restore

 save

 0.0999 0 0 0.037 setcmykcolor

 234.60962 13.47583 moveto

 234.60962 17.11751 lineto

 pgfstr

 restore

 save

 0.1026 0 0 0.038 setcmykcolor

 234.60962 13.83983 moveto

 234.60962 17.48207 lineto

 pgfstr

 restore

 save

 0.1053 0 0 0.039 setcmykcolor

 234.60962 14.20439 moveto

 234.60962 17.84608 lineto

 pgfstr

 restore

 save

 0.108 0 0 0.04001 setcmykcolor

 234.60962 14.5684 moveto

 234.60963 18.21008 lineto

 pgfstr

 restore

 save

 0.1107 0 0 0.041 setcmykcolor

 234.60962 14.93239 moveto

 234.60962 18.57463 lineto

 pgfstr

 restore

 save

 0.1134 0 0 0.042 setcmykcolor

 234.60962 15.29695 moveto

 234.60962 18.93863 lineto

 pgfstr

 restore

 save

 0.1161 0 0 0.043 setcmykcolor

 234.60962 15.66095 moveto

 234.60962 19.30319 lineto

 pgfstr

 restore

 save

 0.1188 0 0 0.044 setcmykcolor

 234.60962 16.02496 moveto

 234.60962 19.6672 lineto

 pgfstr

 restore

 save

 0.1215 0 0 0.045 setcmykcolor

 234.60962 16.38953 moveto

 234.60962 20.0312 lineto

 pgfstr

 restore

 save

 0.1242 0 0 0.046 setcmykcolor

 234.60962 16.75351 moveto

 234.60962 20.39575 lineto

 pgfstr

 restore

 save

 0.1269 0 0 0.047 setcmykcolor

 234.60962 17.11751 moveto

 234.60962 20.75975 lineto

 pgfstr

 restore

 save

 0.12961 0 0 0.048 setcmykcolor

 234.60962 17.48207 moveto

 234.60962 21.12376 lineto

 pgfstr

 restore

 save

 0.13231 0 0 0.04901 setcmykcolor

 234.60962 17.84608 moveto

 234.60962 21.48833 lineto

 pgfstr

 restore

 save

 0.135 0 0 0.05 setcmykcolor

 234.60963 18.21008 moveto

 234.60962 21.85233 lineto

 pgfstr

 restore

 save

 0.13771 0 0 0.05101 setcmykcolor

 234.60962 18.57463 moveto

 234.60962 22.21631 lineto

 pgfstr

 restore

 save

 0.1404 0 0 0.052 setcmykcolor

 234.60962 18.93863 moveto

 234.60962 22.58087 lineto

 pgfstr

 restore

 save

 0.1431 0 0 0.05301 setcmykcolor

 234.60962 19.30319 moveto

 234.60962 22.94489 lineto

 pgfstr

 restore

 save

 0.1458 0 0 0.054 setcmykcolor

 234.60962 19.6672 moveto

 234.60962 23.30945 lineto

 pgfstr

 restore

 save

 0.1485 0 0 0.05501 setcmykcolor

 234.60962 20.0312 moveto

 234.60962 23.67345 lineto

 pgfstr

 restore

 save

 0.1512 0 0 0.056 setcmykcolor

 234.60962 20.39575 moveto

 234.60962 24.03743 lineto

 pgfstr

 restore

 save

 0.1539 0 0 0.057 setcmykcolor

 234.60962 20.75975 moveto

 234.60962 24.402 lineto

 pgfstr

 restore

 save

 0.1566 0 0 0.058 setcmykcolor

 234.60962 21.12376 moveto

 234.60962 24.766 lineto

 pgfstr

 restore

 save

 0.1593 0 0 0.059 setcmykcolor

 234.60962 21.48833 moveto

 234.60962 25.13 lineto

 pgfstr

 restore

 save

 0.162 0 0 0.06 setcmykcolor

 234.60962 21.85233 moveto

 234.60962 25.49457 lineto

 pgfstr

 restore

 save

 0.1647 0 0 0.061 setcmykcolor

 234.60962 22.21631 moveto

 234.60962 25.85855 lineto

 pgfstr

 restore

 save

 0.1674 0 0 0.062 setcmykcolor

 234.60962 22.58087 moveto

 234.60962 26.22256 lineto

 pgfstr

 restore

 save

 0.1701 0 0 0.063 setcmykcolor

 234.60962 22.94489 moveto

 234.60962 26.58713 lineto

 pgfstr

 restore

 save

 0.1728 0 0 0.06401 setcmykcolor

 234.60962 23.30945 moveto

 234.60962 26.95113 lineto

 pgfstr

 restore

 save

 0.1755 0 0 0.065 setcmykcolor

 234.60962 23.67345 moveto

 234.60963 27.31512 lineto

 pgfstr

 restore

 save

 0.1782 0 0 0.06601 setcmykcolor

 234.60962 24.03743 moveto

 234.60962 27.67967 lineto

 pgfstr

 restore

 save

 0.18091 0 0 0.067 setcmykcolor

 234.60962 24.402 moveto

 234.60962 28.04369 lineto

 pgfstr

 restore

 save

 0.18361 0 0 0.06801 setcmykcolor

 234.60962 24.766 moveto

 234.60962 28.40823 lineto

 pgfstr

 restore

 save

 0.18631 0 0 0.069 setcmykcolor

 234.60962 25.13 moveto

 234.60962 28.77225 lineto

 pgfstr

 restore

 save

 0.18901 0 0 0.07 setcmykcolor

 234.60962 25.49457 moveto

 234.60962 29.13625 lineto

 pgfstr

 restore

 save

 0.1917 0 0 0.071 setcmykcolor

 234.60962 25.85855 moveto

 234.60962 29.5008 lineto

 pgfstr

 restore

 save

 0.1944 0 0 0.072 setcmykcolor

 234.60962 26.22256 moveto

 234.60962 29.8648 lineto

 pgfstr

 restore

 save

 0.1971 0 0 0.073 setcmykcolor

 234.60962 26.58713 moveto

 234.60962 30.2288 lineto

 pgfstr

 restore

 save

 0.1998 0 0 0.074 setcmykcolor

 234.60962 26.95113 moveto

 234.60962 30.59337 lineto

 pgfstr

 restore

 save

 0.2025 0 0 0.07501 setcmykcolor

 234.60963 27.31512 moveto

 234.60962 30.95737 lineto

 pgfstr

 restore

 save

 0.2052 0 0 0.076 setcmykcolor

 234.60962 27.67967 moveto

 234.60962 31.32138 lineto

 pgfstr

 restore

 save

 0.2079 0 0 0.07701 setcmykcolor

 234.60962 28.04369 moveto

 234.60962 31.68591 lineto

 pgfstr

 restore

 save

 0.2106 0 0 0.078 setcmykcolor

 234.60962 28.40823 moveto

 234.60962 32.04993 lineto

 pgfstr

 restore

 save

 0.2133 0 0 0.07901 setcmykcolor

 234.60962 28.77225 moveto

 234.60962 32.41449 lineto

 pgfstr

 restore

 save

 0.216 0 0 0.08 setcmykcolor

 234.60962 29.13625 moveto

 234.60962 32.77849 lineto

 pgfstr

 restore

 save

 0.2187 0 0 0.08101 setcmykcolor

 234.60962 29.5008 moveto

 234.60962 33.1425 lineto

 pgfstr

 restore

 save

 0.2214 0 0 0.082 setcmykcolor

 234.60962 29.8648 moveto

 234.60962 33.50703 lineto

 pgfstr

 restore

 save

 0.2241 0 0 0.08301 setcmykcolor

 234.60962 30.2288 moveto

 234.60962 33.87105 lineto

 pgfstr

 restore

 save

 0.2268 0 0 0.084 setcmykcolor

 234.60962 30.59337 moveto

 234.60962 34.23505 lineto

 pgfstr

 restore

 save

 0.2295 0 0 0.085 setcmykcolor

 234.60962 30.95737 moveto

 234.60962 34.59961 lineto

 pgfstr

 restore

 save

 0.23221 0 0 0.086 setcmykcolor

 234.60962 31.32138 moveto

 234.60962 34.9636 lineto

 pgfstr

 restore

 save

 0.23491 0 0 0.087 setcmykcolor

 234.60962 31.68591 moveto

 234.60962 35.3276 lineto

 pgfstr

 restore

 save

 0.23761 0 0 0.088 setcmykcolor

 234.60962 32.04993 moveto

 234.60962 35.69217 lineto

 pgfstr

 restore

 save

 0.2403 0 0 0.089 setcmykcolor

 234.60962 32.41449 moveto

 234.60962 36.05617 lineto

 pgfstr

 restore

 save

 0.24301 0 0 0.09001 setcmykcolor

 234.60962 32.77849 moveto

 234.60963 36.42018 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 4.98138 31.4388 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 0 0 0 1 TeXcolorcmyk
-497 19232 a Ff([1])p 0 0 0 1 TeXcolorcmyk 41 w(B.)e(Am)n(b)r(erg,)h
(A.)f(Blak)n(e,)h(T.)f(V)-6 b(etter)27 b(On)21 b(Comp)r(ositional)f
(Image)-381 19303 y(Alignmen)n(t)35 b(with)g(an)h(Application)f(to)g
(Activ)n(ce)h(App)r(earance)-381 19370 y(Mo)r(dels)31
b(In)24 b Fc(CVPR'09)p Ff(,)g(2009.)-497 19163 y


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 1.99255 pgfw

 save

 /pgfsc{}def/pgffc{}def

 0.27 0 0 0.1 setcmykcolor

 /pgffc{0.18 0 0 0.1 setcmykcolor}def

 483.16708 293.91129 moveto

 483.16708 313.83682 lineto

 949.3975 313.83682 lineto

 954.89986 313.83682 959.36028 309.37642 959.36028 303.87405 curveto

 959.36028 293.91129 lineto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 487.15213 299.0322 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 0 0 0 1
TeXcolorcmyk -497 19163 a Fk(Tra)m(cking)46 b(5000)f(frames)f(with)h(a)
h(general)e(model)p 0 0 0 1 TeXcolorcmyk -497 19163 a


 pgfr

 restore

 restore

 save

 /pgffc{0 1 0 0 setcmykcolor}def

 483.16708 293.91129 moveto

 483.16708 0.0 lineto

 959.36028 293.91129 moveto

 959.36028 0.0 lineto

 gsave pgffc pgffill grestore newpath

 restore

 save

 0 0 0 0 setcmykcolor

 483.16708 0.0 moveto

 483.16707 29.39291 lineto

 pgfstr

 restore

 save

 0.0027 0 0 0.001 setcmykcolor

 483.16707 2.94197 moveto

 483.16707 32.3304 lineto

 pgfstr

 restore

 save

 0.0054 0 0 0.002 setcmykcolor

 483.16707 5.87947 moveto

 483.16707 35.27238 lineto

 pgfstr

 restore

 save

 0.0081 0 0 0.003 setcmykcolor

 483.16707 8.82144 moveto

 483.16707 38.20988 lineto

 pgfstr

 restore

 save

 0.0108 0 0 0.004 setcmykcolor

 483.16707 11.75896 moveto

 483.16707 41.15187 lineto

 pgfstr

 restore

 save

 0.0135 0 0 0.005 setcmykcolor

 483.16707 14.69644 moveto

 483.16707 44.08936 lineto

 pgfstr

 restore

 save

 0.0162 0 0 0.006 setcmykcolor

 483.16707 17.63843 moveto

 483.16707 47.02687 lineto

 pgfstr

 restore

 save

 0.0189 0 0 0.007 setcmykcolor

 483.16707 20.57593 moveto

 483.16707 49.96886 lineto

 pgfstr

 restore

 save

 0.0216 0 0 0.008 setcmykcolor

 483.16707 23.51343 moveto

 483.16707 52.90634 lineto

 pgfstr

 restore

 save

 0.0243 0 0 0.009 setcmykcolor

 483.16707 26.4554 moveto

 483.16707 55.84386 lineto

 pgfstr

 restore

 save

 0.027 0 0 0.01 setcmykcolor

 483.16707 29.39291 moveto

 483.16707 58.78583 lineto

 pgfstr

 restore

 save

 0.0297 0 0 0.011 setcmykcolor

 483.16707 32.3304 moveto

 483.16707 61.72333 lineto

 pgfstr

 restore

 save

 0.0324 0 0 0.012 setcmykcolor

 483.16707 35.27238 moveto

 483.16707 64.66083 lineto

 pgfstr

 restore

 save

 0.0351 0 0 0.013 setcmykcolor

 483.16707 38.20988 moveto

 483.16707 67.60281 lineto

 pgfstr

 restore

 save

 0.0378 0 0 0.014 setcmykcolor

 483.16707 41.15187 moveto

 483.16707 70.5403 lineto

 pgfstr

 restore

 save

 0.0405 0 0 0.015 setcmykcolor

 483.16707 44.08936 moveto

 483.16708 73.47781 lineto

 pgfstr

 restore

 save

 0.0432 0 0 0.016 setcmykcolor

 483.16707 47.02687 moveto

 483.16707 76.41978 lineto

 pgfstr

 restore

 save

 0.0459 0 0 0.017 setcmykcolor

 483.16707 49.96886 moveto

 483.16707 79.35728 lineto

 pgfstr

 restore

 save

 0.0486 0 0 0.018 setcmykcolor

 483.16707 52.90634 moveto

 483.16707 82.29927 lineto

 pgfstr

 restore

 save

 0.0513 0 0 0.019 setcmykcolor

 483.16707 55.84386 moveto

 483.16707 85.23677 lineto

 pgfstr

 restore

 save

 0.054 0 0 0.02 setcmykcolor

 483.16707 58.78583 moveto

 483.16707 88.17427 lineto

 pgfstr

 restore

 save

 0.0567 0 0 0.021 setcmykcolor

 483.16707 61.72333 moveto

 483.16707 91.11626 lineto

 pgfstr

 restore

 save

 0.0594 0 0 0.022 setcmykcolor

 483.16707 64.66083 moveto

 483.16707 94.05376 lineto

 pgfstr

 restore

 save

 0.0621 0 0 0.023 setcmykcolor

 483.16707 67.60281 moveto

 483.16707 96.99124 lineto

 pgfstr

 restore

 save

 0.0648 0 0 0.024 setcmykcolor

 483.16707 70.5403 moveto

 483.16707 99.93324 lineto

 pgfstr

 restore

 save

 0.0675 0 0 0.02501 setcmykcolor

 483.16708 73.47781 moveto

 483.16707 102.87073 lineto

 pgfstr

 restore

 save

 0.0702 0 0 0.026 setcmykcolor

 483.16707 76.41978 moveto

 483.16707 105.80823 lineto

 pgfstr

 restore

 save

 0.0729 0 0 0.02701 setcmykcolor

 483.16707 79.35728 moveto

 483.16707 108.75021 lineto

 pgfstr

 restore

 save

 0.0756 0 0 0.028 setcmykcolor

 483.16707 82.29927 moveto

 483.16707 111.68771 lineto

 pgfstr

 restore

 save

 0.0783 0 0 0.029 setcmykcolor

 483.16707 85.23677 moveto

 483.16707 114.62968 lineto

 pgfstr

 restore

 save

 0.081 0 0 0.03 setcmykcolor

 483.16707 88.17427 moveto

 483.16707 117.5672 lineto

 pgfstr

 restore

 save

 0.0837 0 0 0.031 setcmykcolor

 483.16707 91.11626 moveto

 483.16707 120.50468 lineto

 pgfstr

 restore

 save

 0.0864 0 0 0.032 setcmykcolor

 483.16707 94.05376 moveto

 483.16707 123.44667 lineto

 pgfstr

 restore

 save

 0.0891 0 0 0.033 setcmykcolor

 483.16707 96.99124 moveto

 483.16707 126.38419 lineto

 pgfstr

 restore

 save

 0.0918 0 0 0.034 setcmykcolor

 483.16707 99.93324 moveto

 483.16707 129.32167 lineto

 pgfstr

 restore

 save

 0.0945 0 0 0.035 setcmykcolor

 483.16707 102.87073 moveto

 483.16707 132.26366 lineto

 pgfstr

 restore

 save

 0.0972 0 0 0.036 setcmykcolor

 483.16707 105.80823 moveto

 483.16707 135.20116 lineto

 pgfstr

 restore

 save

 0.0999 0 0 0.037 setcmykcolor

 483.16707 108.75021 moveto

 483.16707 138.13866 lineto

 pgfstr

 restore

 save

 0.1026 0 0 0.038 setcmykcolor

 483.16707 111.68771 moveto

 483.16707 141.08063 lineto

 pgfstr

 restore

 save

 0.1053 0 0 0.039 setcmykcolor

 483.16707 114.62968 moveto

 483.16707 144.01814 lineto

 pgfstr

 restore

 save

 0.108 0 0 0.04001 setcmykcolor

 483.16707 117.5672 moveto

 483.16708 146.95563 lineto

 pgfstr

 restore

 save

 0.1107 0 0 0.041 setcmykcolor

 483.16707 120.50468 moveto

 483.16707 149.89761 lineto

 pgfstr

 restore

 save

 0.1134 0 0 0.042 setcmykcolor

 483.16707 123.44667 moveto

 483.16707 152.83511 lineto

 pgfstr

 restore

 save

 0.1161 0 0 0.043 setcmykcolor

 483.16707 126.38419 moveto

 483.16707 155.7771 lineto

 pgfstr

 restore

 save

 0.1188 0 0 0.044 setcmykcolor

 483.16707 129.32167 moveto

 483.16707 158.71458 lineto

 pgfstr

 restore

 save

 0.1215 0 0 0.045 setcmykcolor

 483.16707 132.26366 moveto

 483.16707 161.6521 lineto

 pgfstr

 restore

 save

 0.1242 0 0 0.046 setcmykcolor

 483.16707 135.20116 moveto

 483.16707 164.59407 lineto

 pgfstr

 restore

 save

 0.1269 0 0 0.047 setcmykcolor

 483.16707 138.13866 moveto

 483.16707 167.53157 lineto

 pgfstr

 restore

 save

 0.12961 0 0 0.048 setcmykcolor

 483.16707 141.08063 moveto

 483.16707 170.46909 lineto

 pgfstr

 restore

 save

 0.13231 0 0 0.04901 setcmykcolor

 483.16707 144.01814 moveto

 483.16707 173.41106 lineto

 pgfstr

 restore

 save

 0.135 0 0 0.05 setcmykcolor

 483.16708 146.95563 moveto

 483.16707 176.34856 lineto

 pgfstr

 restore

 save

 0.13771 0 0 0.05101 setcmykcolor

 483.16707 149.89761 moveto

 483.16707 179.28606 lineto

 pgfstr

 restore

 save

 0.1404 0 0 0.052 setcmykcolor

 483.16707 152.83511 moveto

 483.16707 182.22804 lineto

 pgfstr

 restore

 save

 0.1431 0 0 0.05301 setcmykcolor

 483.16707 155.7771 moveto

 483.16707 185.16553 lineto

 pgfstr

 restore

 save

 0.1458 0 0 0.054 setcmykcolor

 483.16707 158.71458 moveto

 483.16707 188.10753 lineto

 pgfstr

 restore

 save

 0.1485 0 0 0.05501 setcmykcolor

 483.16707 161.6521 moveto

 483.16707 191.04501 lineto

 pgfstr

 restore

 save

 0.1512 0 0 0.056 setcmykcolor

 483.16707 164.59407 moveto

 483.16707 193.98251 lineto

 pgfstr

 restore

 save

 0.1539 0 0 0.057 setcmykcolor

 483.16707 167.53157 moveto

 483.16707 196.9245 lineto

 pgfstr

 restore

 save

 0.1566 0 0 0.058 setcmykcolor

 483.16707 170.46909 moveto

 483.16707 199.862 lineto

 pgfstr

 restore

 save

 0.1593 0 0 0.059 setcmykcolor

 483.16707 173.41106 moveto

 483.16707 202.7995 lineto

 pgfstr

 restore

 save

 0.162 0 0 0.06 setcmykcolor

 483.16707 176.34856 moveto

 483.16707 205.74149 lineto

 pgfstr

 restore

 save

 0.1647 0 0 0.061 setcmykcolor

 483.16707 179.28606 moveto

 483.16707 208.67899 lineto

 pgfstr

 restore

 save

 0.1674 0 0 0.062 setcmykcolor

 483.16707 182.22804 moveto

 483.16707 211.61647 lineto

 pgfstr

 restore

 save

 0.1701 0 0 0.063 setcmykcolor

 483.16707 185.16553 moveto

 483.16707 214.55847 lineto

 pgfstr

 restore

 save

 0.1728 0 0 0.06401 setcmykcolor

 483.16707 188.10753 moveto

 483.16707 217.49596 lineto

 pgfstr

 restore

 save

 0.1755 0 0 0.065 setcmykcolor

 483.16707 191.04501 moveto

 483.16708 220.43346 lineto

 pgfstr

 restore

 save

 0.1782 0 0 0.06601 setcmykcolor

 483.16707 193.98251 moveto

 483.16707 223.37544 lineto

 pgfstr

 restore

 save

 0.18091 0 0 0.067 setcmykcolor

 483.16707 196.9245 moveto

 483.16707 226.31294 lineto

 pgfstr

 restore

 save

 0.18361 0 0 0.06801 setcmykcolor

 483.16707 199.862 moveto

 483.16707 229.25491 lineto

 pgfstr

 restore

 save

 0.18631 0 0 0.069 setcmykcolor

 483.16707 202.7995 moveto

 483.16707 232.19243 lineto

 pgfstr

 restore

 save

 0.18901 0 0 0.07 setcmykcolor

 483.16707 205.74149 moveto

 483.16707 235.12991 lineto

 pgfstr

 restore

 save

 0.1917 0 0 0.071 setcmykcolor

 483.16707 208.67899 moveto

 483.16707 238.0719 lineto

 pgfstr

 restore

 save

 0.1944 0 0 0.072 setcmykcolor

 483.16707 211.61647 moveto

 483.16707 241.0094 lineto

 pgfstr

 restore

 save

 0.1971 0 0 0.073 setcmykcolor

 483.16707 214.55847 moveto

 483.16707 243.9469 lineto

 pgfstr

 restore

 save

 0.1998 0 0 0.074 setcmykcolor

 483.16707 217.49596 moveto

 483.16707 246.88887 lineto

 pgfstr

 restore

 save

 0.2025 0 0 0.07501 setcmykcolor

 483.16708 220.43346 moveto

 483.16707 249.82639 lineto

 pgfstr

 restore

 save

 0.2052 0 0 0.076 setcmykcolor

 483.16707 223.37544 moveto

 483.16707 252.76389 lineto

 pgfstr

 restore

 save

 0.2079 0 0 0.07701 setcmykcolor

 483.16707 226.31294 moveto

 483.16707 255.70586 lineto

 pgfstr

 restore

 save

 0.2106 0 0 0.078 setcmykcolor

 483.16707 229.25491 moveto

 483.16707 258.64337 lineto

 pgfstr

 restore

 save

 0.2133 0 0 0.07901 setcmykcolor

 483.16707 232.19243 moveto

 483.16707 261.58534 lineto

 pgfstr

 restore

 save

 0.216 0 0 0.08 setcmykcolor

 483.16707 235.12991 moveto

 483.16707 264.52284 lineto

 pgfstr

 restore

 save

 0.2187 0 0 0.08101 setcmykcolor

 483.16707 238.0719 moveto

 483.16707 267.46034 lineto

 pgfstr

 restore

 save

 0.2214 0 0 0.082 setcmykcolor

 483.16707 241.0094 moveto

 483.16707 270.40233 lineto

 pgfstr

 restore

 save

 0.2241 0 0 0.08301 setcmykcolor

 483.16707 243.9469 moveto

 483.16707 273.33981 lineto

 pgfstr

 restore

 save

 0.2268 0 0 0.084 setcmykcolor

 483.16707 246.88887 moveto

 483.16707 276.27733 lineto

 pgfstr

 restore

 save

 0.2295 0 0 0.085 setcmykcolor

 483.16707 249.82639 moveto

 483.16707 279.2193 lineto

 pgfstr

 restore

 save

 0.23221 0 0 0.086 setcmykcolor

 483.16707 252.76389 moveto

 483.16707 282.1568 lineto

 pgfstr

 restore

 save

 0.23491 0 0 0.087 setcmykcolor

 483.16707 255.70586 moveto

 483.16707 285.09431 lineto

 pgfstr

 restore

 save

 0.23761 0 0 0.088 setcmykcolor

 483.16707 258.64337 moveto

 483.16707 288.03629 lineto

 pgfstr

 restore

 save

 0.2403 0 0 0.089 setcmykcolor

 483.16707 261.58534 moveto

 483.16707 290.97379 lineto

 pgfstr

 restore

 save

 0.24301 0 0 0.09001 setcmykcolor

 483.16707 264.52284 moveto

 483.16708 293.91129 lineto

 pgfstr

 restore

 save

 0 0 0 0 setcmykcolor

 959.36028 0.0 moveto

 959.36026 29.39291 lineto

 pgfstr

 restore

 save

 0.0027 0 0 0.001 setcmykcolor

 959.36026 2.94197 moveto

 959.36026 32.3304 lineto

 pgfstr

 restore

 save

 0.0054 0 0 0.002 setcmykcolor

 959.36026 5.87947 moveto

 959.36026 35.27238 lineto

 pgfstr

 restore

 save

 0.0081 0 0 0.003 setcmykcolor

 959.36026 8.82144 moveto

 959.36026 38.20988 lineto

 pgfstr

 restore

 save

 0.0108 0 0 0.004 setcmykcolor

 959.36026 11.75896 moveto

 959.36026 41.15187 lineto

 pgfstr

 restore

 save

 0.0135 0 0 0.005 setcmykcolor

 959.36026 14.69644 moveto

 959.36026 44.08936 lineto

 pgfstr

 restore

 save

 0.0162 0 0 0.006 setcmykcolor

 959.36026 17.63843 moveto

 959.36026 47.02687 lineto

 pgfstr

 restore

 save

 0.0189 0 0 0.007 setcmykcolor

 959.36026 20.57593 moveto

 959.36026 49.96886 lineto

 pgfstr

 restore

 save

 0.0216 0 0 0.008 setcmykcolor

 959.36026 23.51343 moveto

 959.36026 52.90634 lineto

 pgfstr

 restore

 save

 0.0243 0 0 0.009 setcmykcolor

 959.36026 26.4554 moveto

 959.36026 55.84386 lineto

 pgfstr

 restore

 save

 0.027 0 0 0.01 setcmykcolor

 959.36026 29.39291 moveto

 959.36026 58.78583 lineto

 pgfstr

 restore

 save

 0.0297 0 0 0.011 setcmykcolor

 959.36026 32.3304 moveto

 959.36026 61.72333 lineto

 pgfstr

 restore

 save

 0.0324 0 0 0.012 setcmykcolor

 959.36026 35.27238 moveto

 959.36026 64.66083 lineto

 pgfstr

 restore

 save

 0.0351 0 0 0.013 setcmykcolor

 959.36026 38.20988 moveto

 959.36026 67.60281 lineto

 pgfstr

 restore

 save

 0.0378 0 0 0.014 setcmykcolor

 959.36026 41.15187 moveto

 959.36026 70.5403 lineto

 pgfstr

 restore

 save

 0.0405 0 0 0.015 setcmykcolor

 959.36026 44.08936 moveto

 959.36026 73.47781 lineto

 pgfstr

 restore

 save

 0.0432 0 0 0.016 setcmykcolor

 959.36026 47.02687 moveto

 959.36026 76.41978 lineto

 pgfstr

 restore

 save

 0.0459 0 0 0.017 setcmykcolor

 959.36026 49.96886 moveto

 959.36026 79.35728 lineto

 pgfstr

 restore

 save

 0.0486 0 0 0.018 setcmykcolor

 959.36026 52.90634 moveto

 959.36026 82.29927 lineto

 pgfstr

 restore

 save

 0.0513 0 0 0.019 setcmykcolor

 959.36026 55.84386 moveto

 959.36026 85.23677 lineto

 pgfstr

 restore

 save

 0.054 0 0 0.02 setcmykcolor

 959.36026 58.78583 moveto

 959.36026 88.17427 lineto

 pgfstr

 restore

 save

 0.0567 0 0 0.021 setcmykcolor

 959.36026 61.72333 moveto

 959.36026 91.11626 lineto

 pgfstr

 restore

 save

 0.0594 0 0 0.022 setcmykcolor

 959.36026 64.66083 moveto

 959.36026 94.05376 lineto

 pgfstr

 restore

 save

 0.0621 0 0 0.023 setcmykcolor

 959.36026 67.60281 moveto

 959.36026 96.99124 lineto

 pgfstr

 restore

 save

 0.0648 0 0 0.024 setcmykcolor

 959.36026 70.5403 moveto

 959.36026 99.93324 lineto

 pgfstr

 restore

 save

 0.0675 0 0 0.02501 setcmykcolor

 959.36026 73.47781 moveto

 959.36026 102.87073 lineto

 pgfstr

 restore

 save

 0.0702 0 0 0.026 setcmykcolor

 959.36026 76.41978 moveto

 959.36026 105.80823 lineto

 pgfstr

 restore

 save

 0.0729 0 0 0.02701 setcmykcolor

 959.36026 79.35728 moveto

 959.36026 108.75021 lineto

 pgfstr

 restore

 save

 0.0756 0 0 0.028 setcmykcolor

 959.36026 82.29927 moveto

 959.36026 111.68771 lineto

 pgfstr

 restore

 save

 0.0783 0 0 0.029 setcmykcolor

 959.36026 85.23677 moveto

 959.36026 114.62968 lineto

 pgfstr

 restore

 save

 0.081 0 0 0.03 setcmykcolor

 959.36026 88.17427 moveto

 959.36026 117.5672 lineto

 pgfstr

 restore

 save

 0.0837 0 0 0.031 setcmykcolor

 959.36026 91.11626 moveto

 959.36026 120.50468 lineto

 pgfstr

 restore

 save

 0.0864 0 0 0.032 setcmykcolor

 959.36026 94.05376 moveto

 959.36026 123.44667 lineto

 pgfstr

 restore

 save

 0.0891 0 0 0.033 setcmykcolor

 959.36026 96.99124 moveto

 959.36026 126.38419 lineto

 pgfstr

 restore

 save

 0.0918 0 0 0.034 setcmykcolor

 959.36026 99.93324 moveto

 959.36026 129.32167 lineto

 pgfstr

 restore

 save

 0.0945 0 0 0.035 setcmykcolor

 959.36026 102.87073 moveto

 959.36026 132.26366 lineto

 pgfstr

 restore

 save

 0.0972 0 0 0.036 setcmykcolor

 959.36026 105.80823 moveto

 959.36026 135.20116 lineto

 pgfstr

 restore

 save

 0.0999 0 0 0.037 setcmykcolor

 959.36026 108.75021 moveto

 959.36026 138.13866 lineto

 pgfstr

 restore

 save

 0.1026 0 0 0.038 setcmykcolor

 959.36026 111.68771 moveto

 959.36026 141.08063 lineto

 pgfstr

 restore

 save

 0.1053 0 0 0.039 setcmykcolor

 959.36026 114.62968 moveto

 959.36026 144.01814 lineto

 pgfstr

 restore

 save

 0.108 0 0 0.04001 setcmykcolor

 959.36026 117.5672 moveto

 959.36028 146.95563 lineto

 pgfstr

 restore

 save

 0.1107 0 0 0.041 setcmykcolor

 959.36026 120.50468 moveto

 959.36026 149.89761 lineto

 pgfstr

 restore

 save

 0.1134 0 0 0.042 setcmykcolor

 959.36026 123.44667 moveto

 959.36026 152.83511 lineto

 pgfstr

 restore

 save

 0.1161 0 0 0.043 setcmykcolor

 959.36026 126.38419 moveto

 959.36026 155.7771 lineto

 pgfstr

 restore

 save

 0.1188 0 0 0.044 setcmykcolor

 959.36026 129.32167 moveto

 959.36026 158.71458 lineto

 pgfstr

 restore

 save

 0.1215 0 0 0.045 setcmykcolor

 959.36026 132.26366 moveto

 959.36026 161.6521 lineto

 pgfstr

 restore

 save

 0.1242 0 0 0.046 setcmykcolor

 959.36026 135.20116 moveto

 959.36026 164.59407 lineto

 pgfstr

 restore

 save

 0.1269 0 0 0.047 setcmykcolor

 959.36026 138.13866 moveto

 959.36026 167.53157 lineto

 pgfstr

 restore

 save

 0.12961 0 0 0.048 setcmykcolor

 959.36026 141.08063 moveto

 959.36026 170.46909 lineto

 pgfstr

 restore

 save

 0.13231 0 0 0.04901 setcmykcolor

 959.36026 144.01814 moveto

 959.36026 173.41106 lineto

 pgfstr

 restore

 save

 0.135 0 0 0.05 setcmykcolor

 959.36028 146.95563 moveto

 959.36026 176.34856 lineto

 pgfstr

 restore

 save

 0.13771 0 0 0.05101 setcmykcolor

 959.36026 149.89761 moveto

 959.36026 179.28606 lineto

 pgfstr

 restore

 save

 0.1404 0 0 0.052 setcmykcolor

 959.36026 152.83511 moveto

 959.36026 182.22804 lineto

 pgfstr

 restore

 save

 0.1431 0 0 0.05301 setcmykcolor

 959.36026 155.7771 moveto

 959.36026 185.16553 lineto

 pgfstr

 restore

 save

 0.1458 0 0 0.054 setcmykcolor

 959.36026 158.71458 moveto

 959.36026 188.10753 lineto

 pgfstr

 restore

 save

 0.1485 0 0 0.05501 setcmykcolor

 959.36026 161.6521 moveto

 959.36026 191.04501 lineto

 pgfstr

 restore

 save

 0.1512 0 0 0.056 setcmykcolor

 959.36026 164.59407 moveto

 959.36026 193.98251 lineto

 pgfstr

 restore

 save

 0.1539 0 0 0.057 setcmykcolor

 959.36026 167.53157 moveto

 959.36026 196.9245 lineto

 pgfstr

 restore

 save

 0.1566 0 0 0.058 setcmykcolor

 959.36026 170.46909 moveto

 959.36026 199.862 lineto

 pgfstr

 restore

 save

 0.1593 0 0 0.059 setcmykcolor

 959.36026 173.41106 moveto

 959.36026 202.7995 lineto

 pgfstr

 restore

 save

 0.162 0 0 0.06 setcmykcolor

 959.36026 176.34856 moveto

 959.36026 205.74149 lineto

 pgfstr

 restore

 save

 0.1647 0 0 0.061 setcmykcolor

 959.36026 179.28606 moveto

 959.36026 208.67899 lineto

 pgfstr

 restore

 save

 0.1674 0 0 0.062 setcmykcolor

 959.36026 182.22804 moveto

 959.36026 211.61647 lineto

 pgfstr

 restore

 save

 0.1701 0 0 0.063 setcmykcolor

 959.36026 185.16553 moveto

 959.36026 214.55847 lineto

 pgfstr

 restore

 save

 0.1728 0 0 0.06401 setcmykcolor

 959.36026 188.10753 moveto

 959.36026 217.49596 lineto

 pgfstr

 restore

 save

 0.1755 0 0 0.065 setcmykcolor

 959.36026 191.04501 moveto

 959.36026 220.43346 lineto

 pgfstr

 restore

 save

 0.1782 0 0 0.06601 setcmykcolor

 959.36026 193.98251 moveto

 959.36026 223.37544 lineto

 pgfstr

 restore

 save

 0.18091 0 0 0.067 setcmykcolor

 959.36026 196.9245 moveto

 959.36026 226.31294 lineto

 pgfstr

 restore

 save

 0.18361 0 0 0.06801 setcmykcolor

 959.36026 199.862 moveto

 959.36026 229.25491 lineto

 pgfstr

 restore

 save

 0.18631 0 0 0.069 setcmykcolor

 959.36026 202.7995 moveto

 959.36026 232.19243 lineto

 pgfstr

 restore

 save

 0.18901 0 0 0.07 setcmykcolor

 959.36026 205.74149 moveto

 959.36026 235.12991 lineto

 pgfstr

 restore

 save

 0.1917 0 0 0.071 setcmykcolor

 959.36026 208.67899 moveto

 959.36026 238.0719 lineto

 pgfstr

 restore

 save

 0.1944 0 0 0.072 setcmykcolor

 959.36026 211.61647 moveto

 959.36026 241.0094 lineto

 pgfstr

 restore

 save

 0.1971 0 0 0.073 setcmykcolor

 959.36026 214.55847 moveto

 959.36026 243.9469 lineto

 pgfstr

 restore

 save

 0.1998 0 0 0.074 setcmykcolor

 959.36026 217.49596 moveto

 959.36026 246.88887 lineto

 pgfstr

 restore

 save

 0.2025 0 0 0.07501 setcmykcolor

 959.36026 220.43346 moveto

 959.36026 249.82639 lineto

 pgfstr

 restore

 save

 0.2052 0 0 0.076 setcmykcolor

 959.36026 223.37544 moveto

 959.36026 252.76389 lineto

 pgfstr

 restore

 save

 0.2079 0 0 0.07701 setcmykcolor

 959.36026 226.31294 moveto

 959.36026 255.70586 lineto

 pgfstr

 restore

 save

 0.2106 0 0 0.078 setcmykcolor

 959.36026 229.25491 moveto

 959.36026 258.64337 lineto

 pgfstr

 restore

 save

 0.2133 0 0 0.07901 setcmykcolor

 959.36026 232.19243 moveto

 959.36026 261.58534 lineto

 pgfstr

 restore

 save

 0.216 0 0 0.08 setcmykcolor

 959.36026 235.12991 moveto

 959.36026 264.52284 lineto

 pgfstr

 restore

 save

 0.2187 0 0 0.08101 setcmykcolor

 959.36026 238.0719 moveto

 959.36026 267.46034 lineto

 pgfstr

 restore

 save

 0.2214 0 0 0.082 setcmykcolor

 959.36026 241.0094 moveto

 959.36026 270.40233 lineto

 pgfstr

 restore

 save

 0.2241 0 0 0.08301 setcmykcolor

 959.36026 243.9469 moveto

 959.36026 273.33981 lineto

 pgfstr

 restore

 save

 0.2268 0 0 0.084 setcmykcolor

 959.36026 246.88887 moveto

 959.36026 276.27733 lineto

 pgfstr

 restore

 save

 0.2295 0 0 0.085 setcmykcolor

 959.36026 249.82639 moveto

 959.36026 279.2193 lineto

 pgfstr

 restore

 save

 0.23221 0 0 0.086 setcmykcolor

 959.36026 252.76389 moveto

 959.36026 282.1568 lineto

 pgfstr

 restore

 save

 0.23491 0 0 0.087 setcmykcolor

 959.36026 255.70586 moveto

 959.36026 285.09431 lineto

 pgfstr

 restore

 save

 0.23761 0 0 0.088 setcmykcolor

 959.36026 258.64337 moveto

 959.36026 288.03629 lineto

 pgfstr

 restore

 save

 0.2403 0 0 0.089 setcmykcolor

 959.36026 261.58534 moveto

 959.36026 290.97379 lineto

 pgfstr

 restore

 save

 0.24301 0 0 0.09001 setcmykcolor

 959.36026 264.52284 moveto

 959.36028 293.91129 lineto

 pgfstr

 restore

 save

 save

 [1.0 0.0 0.0 1.0 488.14847 251.07141 ] concat

 pgfs



 0 0 0 1 setcmykcolor

109 18917 a Fc(ICIA)24 b Ff(with)g Fd(V)509 18893 y Fe(Ortho)1571
18917 y Fc(ICIA)g Ff(with)f Fd(V)1970 18893 y Fe(Ortho)2156
18917 y Ff(+)h(Regularisation)248 19091 y Fc(LinCoDe)1180
b(LinCoDe)28 b Ff(+)23 b(Regularisation)301 19266 y Fc(CoDe)1287
b(CoDe)29 b Ff(+)23 b(Regularisation)-447 19407 y(F)-6
b(rame)24 b(10)5 b(F)-6 b(rame)23 b(50)9 b(F)-6 b(rame)24
b(450)9 b(F)-6 b(rame)23 b(2000)10 b(F)-6 b(rame)23 b(5000)84
b(F)-6 b(rame)24 b(10)9 b(F)-6 b(rame)23 b(50)9 b(F)-6
b(rame)24 b(450)9 b(F)-6 b(rame)23 b(2000)10 b(F)-6 b(rame)23
b(5000)-497 19462 y Fb(Our)30 b(algorithm)f(mak)m(es)h(fast)h(and)f
(robust)g(trac)m(king)-497 19561 y(p)s(ossible.)56 b
Fh(W)-7 b(e)35 b(compare)e(face)i(trac)n(king)e(under)h(natural)-497
19661 y(motion,)28 b(using)g Fa(ICIA)p Fh(,)h Fa(LinCoDe)35
b Fh(and)28 b Fa(CoDe)6 b Fh(.)40 b(The)28 b(origi-)-497
19760 y(nal)e Fa(ICIA)f Fh(fails)g(immediately)h(with)f(this)h(large)e
(mo)r(del)h(and)-497 19860 y(new)35 b(face)g(data.)58
b(Substituting)35 b(the)g(orthonormal)d(incre-)-497 19960
y(men)n(tal)40 b(w)n(arp)g(for)f(the)i(original)d Fa(ICIA)j
Fh(w)n(arp,)h(the)f(algo-)-497 20059 y(rithm)d(still)f(loses)f(trac)n
(k)g(v)n(ery)g(early)-7 b(,)39 b(whereas)c Fa(LinCoDe)-497
20159 y Fh(and)h Fa(CoDe)43 b Fh(can)35 b(trac)n(k)f(m)n(uc)n(h)i
(further.)61 b(Finally)-7 b(,)38 b(adding)-497 20259
y(regularisation)23 b(to)j(all)f(algorithms,)g Fa(ICIA)h
Fh(still)g(loses)e(trac)n(k)p 0 0 0 1 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 1475 19462 a(completely)30 b(after)f(appro)n(ximately)f
(500)h(frames)g(and)h(do)r(es)1475 19561 y(not)22 b(reco)n(v)n(er)e
(the)j(lo)r(cal)f(deformations)f(accurately)-7 b(.)33
b(In)23 b(con-)1475 19661 y(trast)31 b Fa(CoDe)38 b Fh(no)n(w)30
b(trac)n(ks)g(the)i(full)f(5000)f(frame)h(sequence)1475
19760 y(without)23 b(reinitialization,)e(and)h Fa(LinCoDe)29
b Fh(trac)n(ks)21 b(for)h(2500)1475 19860 y(frames.)1475
19960 y(The)34 b(same)e(training)h(dataset)f(w)n(as)h(used)g(for)g(b)r
(oth)g(trac)n(k-)1475 20059 y(ing)26 b(exp)r(erimen)n(ts.)35
b(The)25 b(training)g(data)g(w)n(as)g(aquired)f(with)1475
20159 y(di\013eren)n(t)f(camera)e(and)i(ligh)n(t)f(settings)g(from)h
(di\013eren)n(t)f(sub-)1475 20259 y(jects.)-497 19163
y


 pgfr

 restore

 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk -600 19266
a


 pgfr

 restore

 restore

 pgfc


 eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
